{"version":3,"sources":["lib/hooks.ts","store/lib/ContractState.ts","pages/Home/Polygon","serviceWorker.js","components/ChainNav/index.tsx","components/Headers/index.tsx","components/Notice/index.tsx","pages/Home/Top/index.tsx","components/LinksLanguage/index.tsx","components/CycFooter/index.tsx","components/Dialog/index.tsx","components/OnLoading/index.tsx","components/WalletInfo/index.tsx","components/CheckNote/index.tsx","components/LpMiningHeader/index.tsx","pages/Home/Deposit/index.jsx","pages/Home/Withdraw/index.jsx","Utility.js","components/TextButton.js","components/TransactionRecord.js","pages/Home/TransactionRecord/index.jsx","pages/Home/Transfer/index.jsx","pages/Home/index.jsx","components/EthConnectWallet/index.tsx","pages/Home/Mainnet.tsx","pages/Home/Bscnet.tsx","components/Modal/index.tsx","components/ModalView.js","components/Loading.tsx","index.js","lib/web3-react-bsc.ts","store/lib/TokenState.ts","utils/helper.ts","store/lib/GetLog.js","modules/index.ts","lib/lodash.ts","config/ETHMainConfig.ts","config/BSCMainnetConfig.ts","store/lang.ts","config/public.ts","store/god.ts","store/dev.ts","store/lib/TransactionState.ts","store/transaction.ts","store/setting.ts","store/base.ts","store/index.ts","utils/metamaskUtils.ts","components/SingleSymbol/index.tsx","store/lib/BignumberInputState.ts","lib/analytics-bsc-gql.ts","store/lib/PoolState.ts","Config.js","store/lib/NetworkState.ts","config/NetowkConfig.ts","store/type.ts","store/lib/ChainState.ts","../generated/bsc/gql/createClient.js","components/Button.js","modules/globalStyle.ts","lib/event.ts","components/DepositViewForBSC.jsx","components/WithdrawViewForETH.js","components/TransferView.js"],"names":["hooks","waitWeb3","Promise","res","rej","rootStore","eth","web3","eventBus","once","waitLoading","args","base","setLoading","waitPendingPool","setPendingPool","closePendingPool","waitModal","setModal","closeModal","ContractState","address","abi","deployedBlock","network","Object","assign","this","module","exports","Boolean","window","location","hostname","match","ChainNav","observer","useStore","god","lang","history","useHistory","store","useLocalStore","current","pathname","chains","name","logo","path","active_logo","chainID","find","i","useEffect","css","display","position","mr","DropItem","color","justify","width","flex","src","currentObj","alt","height","marginRight","size","weight","DropdownBox","className","backgroundColor","map","item","index","key","onClick","currentPoolIndex","push","img","content","cursor","mb","padding","textAlign","styled","top","left","boxSizing","alignItems","variants","normal","Headers","props","isMouseOver","isRegistered","showConnecter","setShowConnecter","mouseOver","event","mouseOut","showWalletInfo","currentNetwork","walletInfo","visible","register","menus","Item","style","href","t","accountView","useObserver","myAddress","family","helper","string","truncate","styles","cycHeader","menuMobile","overlay","placement","dispaly","flexDirection","justifyContent","flexBetweenCenter","marginBottom","fontFamily","ul","listStyleType","margin","li","a","fontSize","fontWeight","px","Notice","lineHeight","textDecoration","ml","status","show","hide","NoticeItem","useState","isShow","setStatus","HomeTop","homeTop","responsive","mt","tvl","end","duration","decimals","preserveValue","formattingFn","e","toString","replace","m87PriceUSD","format","addCYCToMetamask","hover","marginLeft","swapURL","target","swapName","toLowerCase","miniLine","marginTop","langGroups","en","text","ru","zh_CN","LinksLanguage","Container","rel","LangSelect","values","setLang","curLang","borderRadius","background","paddingBottom","CycFooter","FooterBox","direction","items","CYCToken","mx","Dialog","ModalMask","zIndex","ModalWrap","outline","overflow","Modal","small","md","medium","auto","DialogWrapper","title","close","OnLoading","onConfirm","onCancel","showLoading","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeMiterlimit","strokeLinecap","attributeName","begin","dur","type","from","to","repeatCount","my","align","showConfirm","confirmText","showCancel","WalletInfo","copyMyaddress","copy","message","success","copyAccount","account","copyKey","myPrivteKey","logout","emit","wordBreak","currentChain","explorerURL","explorerName","p","CheckNote","invalid","keyConfirm","data","setLoadingText","setLoadingView","checkPrivateKey","all","poolList","pool","checkCommitmentAndNullifer","loginType","value","onChange","disabled","isConfirm","LpMiningHeader","bg","active","setting","toggleSwtich","approveMax","save","withdrawStatusId","unwrapperStatusId","curStatusType","curSignBlockNumber","Deposit","dev","isTransactionSent","confirmedBlocks","num","total","L1FinalizationRate","isChosen","DepositViewForBSC","indexOfPool","id","chainId","onApproveXRC","token","approve","spender","L1Helper","Error","onDeposit","depositAmount","axios","post","CurrentSet","relayer","amount","response","extData","console","log","txData","generateTxData","deposit","txInstance","provider","JsonRpcProvider","rpcUrl","handler","blockNumber","getTransactionReceipt","hash","receipt","confirmations","on","wait","then","L1MessageId","removeListener","logs","topics","length","userRequestTopic","gnosisProvider","gnosisRpcUrl","completionFilter","HomeAMB","AffirmationCompletedTopic","checkRegistration","msg","isSendingTx","Withdraw","getStatus","relayerURL","options","resolve","getRelayerStatus","get","responseStatus","txHash","failedReason","L2FinalizationRate","waitForTxReceipt","setTimeout","attempts","delay","reject","checkForTx","retryAttempt","result","WithdrawViewForETH","feeAmount","recipient","L1feeAmount","idx","sumBalance","BigNumber","inputCommitments","myUtxoArr","utxoList","utxo","comparedTo","gt","plus","commitment","restAmount","minus","outputData","pubKey","myPublicKey","undefined","relayerStatus","input","output","fee","l1fee","withdrawTxId","getUserSignatureLog","encodedData","getSignatures","AMBBridgeHelper","signatures","unwrapperTxId","Utility","isInMobile","isMobile","navigator","userAgent","any","isIoPayMobile","includes","toFixString","str","substr","url","clipboardy","TransactionRecord","pageStore","formatAmount","dividedBy","Math","pow","toFixed","onClickRemoveButton","removeTransactionRecord","onClickCopyButton","note","focus","select","document","execCommand","error","toast","dark","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","showStatus","idOfStatus","deposits","fetchData","subsequent","amountCoin","overflowX","maxWidth","InfoCircleOutlined","data-tip","data-for","place","effect","delayHide","createTime","timeAgo","Date","tokenSymbol","amountToken","Coin","symbol","ref","node","border","defaultValue","transaction","isPublicInfoLoaded","isPrivateInfoLoaded","currentTransactions","removeTransaction","currentStatusId","Transfer","TransferView","recipientPubKey","transferAmount","SwitchItem","HomePage","antdPopoverStyle","tabKey","setTabKey","home","pendingPool","homeContent","tabConfig","count","paddingTop","loading","closeLoading","minHeight","backgroundImage","WalletBox","borderTop","borderBottom","WalletItem","getIsMetaMaskBrowser","ethereum","isMetaMask","getIsMetaMask","EthConnectWallet","useWeb3React","activate","deactivate","connector","showConnector","connectInejct","injectedConnector","latestProvider","connectWalletConnect","walletconnectConnector","connectWithKey","Mainnet","library","clear","clearAccountInfo","generatePrivateKey","msgParams","request","method","params","sign","ethers","utils","keccak256","currentNetworkName","ETHMainnetConfig","allowChains","r","initializeAccount","defaultEthers","signer","getSigner","multiCall","Provider","_multicallAddress","Multicall","loadBalance","loadPublichData","startRefetchForce","connectingStatus","privateKey","downloadShieldedKey","doNecessary","refetchTimer","chain","metamaskUtils","setupNetwork","blockExplorerUrls","chainName","nativeCurrency","rpcUrls","baseRpcUrl","addListener","Bscnet","BSCMainnetConfig","modal","ok","ModalView","children","Loading","allowToCancel","nextable","shapeRendering","preserveAspectRatio","cx","cy","stroke-width","keyTimes","keySplines","calcMode","split","Sentry","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","App","useControls","devUI","devPool","showLoadingView","loadingText","init","StrictMode","hidden","scrollTo","exact","getLibrary","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","catch","EthersProviders","Web3Provider","pollingInterval","BscConnector","supportedChainIds","InjectedConnector","EthereumConfigV2","WalletConnectConnector","rpc","1","bridge","qrcode","TokenState","allownaceForRouter","BigNumberState","balance","metas","makeObservable","observable","fixed","json","safeParse","val","JSON","parse","parseTemplate","keys","forEach","fullStr","strLen","separator","charsToShow","frontChars","ceil","backChars","floor","number","countNonZeroNumbers","Number","toPrecisionFloor","isNaN","String","numStr","BN","numLength","resultNumLength","numeral","getBN","AbiCoder","getKeypairLog","L1HelperContract","stBlock","tornadoPool","Contract","filter","filters","PublicKey","getBlock","endBlock","toBlock","fromBlock","totEvents","queryFilter","subEvents","tempEvents","owner","publicKey","concat","fromBlockNumber","toBlockNumber","keypairArr","getCommitmentAndNullifierLog","from_commitment","from_nullifier","HorizonPoolContract","filter_commitment","NewCommitment","filter_nullifier","NewNullifier","subEvents_commitment","subEvents_nullifier","tempEvents_commitment","tempEvents_nullifier","encryptedOutput","toNumber","nullifier","commitmentArr","nullifierArr","proof","encode","encodeDataForBridge","HomeAMBContract","UserRequestForSignature","sigData","bridgeHelper","getSign","createCss","prefix","insertionMethod","theme","colors","primary","primary200","primaryOpacity","primary600","info","info200","info400","bg1","bg2","bg3","bg4","bg5","bg6","bg7","bg8","bg9","textPrimary","textLight","textInfo","textGray","textGray200","textGray900","borderPrimary","textWarn","space","$0","$1","$2","$3","$4","$5","$6","$7","$8","autoX","fontSizes","$xs","$sm","$base","$lg","$xl","$2xl","$3xl","$4xl","$5xl","$6xl","media","xss","xs","sm","lg","xl","xxl","m","config","paddingLeft","paddingRight","pt","pr","pb","pl","py","linearGradient","br","flexCenterCenter","global","keyframes","_","keyBy","debounce","each","flattenDeep","ChainState","APIURL","L2UserRequestTopic","MultiCall","XRC20ABI","L1HelperABI","AMBABI","BridgeHelperABI","pools","PoolState","set","maxDepositAmount","minDepositAmount","HorizonPool","HorizonABI","BridgeToken","order","XRCToken","fileNameMapping","LangStore","langPath","translations","makeAutoObservable","urlParams","URLSearchParams","search","langFromQuery","broswerLang","languages","language","localStorage","getItem","loadTranslation","setItem","processed","translation","publicConfig","isProd","process","maxApprove","iotexTVL","GodStore","isOnProgress","currentNote","ABIs","Map","withdrawAnnoucement","isLockStatus","currentPrivateKey","getNetwork","Aeolus","AeolusV2","LPToken","isShown","poolId","uniswapMulticall","v","price","mainnetMulticallV2","xrcList","multicallV2","preMulticall","setValue","allowance","isApprovingAllowance","approveValue","execContract","aeolus","tokenAddress","isExist","commitmentblockNumber","nullifierBlockNumber","UTXOArr","sort","b","hex","_commitment","shieldedBalance","LpToken","allowanceForAeolus","registerToken","Config","baseURL","DevStore","TransactionState","amountCYC","getChain","getPool","TransactionStore","transactions","transaciton","stringify","SettingStore","StorageState","default","TimeAgo","addDefaultLocale","addLocale","zh","timer","priavetKey","element","createElement","file","Blob","URL","createObjectURL","download","substring","body","appendChild","click","tempIndex","timeAgos","ip","geo","apy","cycPrice","ethPrice","coinPrice","m87PriceETH","startRefetch","clearInterval","setInterval","analyticsETHClient","query","execute","usd","priceBNB","priceMatic","getM87PriceETH","multipliedBy","getCycPrice","StoresContext","React","createContext","useContext","_store","tokenDecimals","tokenImage","image","tokenAdded","toHex","code","StackBox","SingleSymbol","imgs","BigNumberInputState","formatter","createClient","fetcher","variables","analyticsBscURL","analyticsETHURL","createAnalyticsEthCilent","PoolStateStatus","rpcURL","infuraId","backendServiceURL","iotexRpcURL","analyticsURL","merkleTreeHeight","version","donations","defaultAccount","ipAPI","GeoAPI","intervalForContract","assetURL","retry","mimoExchange","tokenName","bsc_address","tokens","networkID","amountSteps","deprecated","ETHNetworkState","defaultChainId","chianId","apyMap","poolTvl","analyicsClient","contractAddress","first","analyticsClient","orderDirection","where","contract","totalCount","leafIndex","timestamp","tokenDenomination","coinDenomination","cycDenomination","UniswapABI","coinBalance","getBalance","lpLocked","lpOldLocked","tokensInPoolPerDay","MuticallContract","calls","readMultiContract","callback","mainnetMulticall","MainEthers","isAddress","EXPONENTIAL_AT","fixednum","speFixed","getRawFormat","getFormat","load","removeItem","UniswapV2CycloneRouter","LPTokenV2","k","_val","__assign","s","n","arguments","prototype","hasOwnProperty","call","apply","defineProperty","__1","require","typeMap","linkTypeMap","queryRoot","Query","avaliable","pointerEvents","fullWidth","textOverflow","whiteSpace","disable","disabledLabel","label","borderColor","Wrapper","rotate","transform","Button","mini","large","borderLeft","opacity","verticalAlign","clipPath","animation","Text","yellow","gray","white","light","black","warning","lightGray","semibold","bold","ibm","Montserrat","pointer","none","inline","center","right","whitespace","FlexBox","row","column","between","start","rc","cr","Icon","BorderBox","Input","TextArea","Section","DropBox","willChange","transition","EventEmitter","Buffer","bigInt","padStart","gasPricesETH","tenPercent","max","bumped","toWei","createTheme","palette","MessierOrange","main","contrastText","baseStore","isShowDetail","currentAmount","currentShieldedAmount","currentCYCDenomination","currentCoinDenomination","poolSize","anonymityFee","ApproveStatus","TokenApproveStatus","DepositStatus","WithdrawStatus","isConnecting","gasPrice","depositAmountInput","setDepositAmount","subArr","setFormat","setMaxLimitAmount","maxLimitAmount","getAnonymityFee","anonymityPoolFee","fetchGasPrice","netId","defaultRpc","timeout","defaultFallbackGasPrices","instant","fast","standard","low","oracle","GasPriceOracle","fallbackGasPrices","gasPrices","gas","loadAmount","getCurrentAmount","getCurrentShieldedAmount","onSelectPool","setCurrentSelectedAmount","setDecimals","onConnect","isConnect","latestEthProvider","getCurrentCoinDenomination","getCurrentCYCDenomination","depositCYCAmount","getPoolSize","numOfShare","onChangeBuyCYCCheckBox","allowBuyCYC","checked","xrcApproved","toBN","expense","mul","maxValue","sub","lt","AnonymityPool","denomenation","min","step","loadingPosition","variant","sx","allowDeposit","isActive","balanceOfXRC","depositView","appearance","borderWidth","borderStyle","buttonPanel","textTransform","bottomTips","poolInfos","poolAudio","flexWrap","rowGap","columnGap","approveBtn","loginOut","span","recipientAddress","isUsingMax","checkValidAccount","totalReceiveAmount","relayerFeeAmount","withdrawFeeAmount","totalBalance","tempBalance","dp","ROUND_FLOOR","lte","rawWithdrawFee","realBalance","bridgeFeeAmount","eq","myRealBalance","relayerFeeFormat","bridgeFeeFormat","withdrawFeeFormat","totalReceiveFormat","placeholder","recipientPublicKey","checkRegisteredAccount","totalSendAmount","totalSendFormat"],"mappings":"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","file":"static/js/main.cf7cd36d.chunk.js","sourcesContent":["import { rootStore } from '../store/index';\r\nimport Web3 from 'web3';\r\nimport { eventBus } from './event';\r\nimport { BaseStore } from '../store/base';\r\n\r\nexport const hooks = {\r\n  async waitWeb3() {\r\n    return new Promise<Web3>((res, rej) => {\r\n      //@ts-ignore\r\n      if (rootStore.eth.web3) {\r\n        //@ts-ignore\r\n        res(rootStore.eth.web3);\r\n      } else {\r\n        eventBus.once('web3.onConnect', (web3) => {\r\n          res(web3);\r\n        });\r\n      }\r\n    });\r\n  },\r\n  async waitLoading(args: Partial<BaseStore['loading']>) {\r\n    return new Promise<void>((res, rej) => {\r\n      rootStore.base.setLoading(args);\r\n      eventBus.once('loading.confirm', () => {\r\n        res();\r\n      });\r\n      eventBus.once('loading.cancel', () => {\r\n        rej();\r\n      });\r\n    });\r\n  },\r\n  async waitPendingPool() {\r\n    return new Promise<boolean>((res, rej) => {\r\n      rootStore.base.setPendingPool();\r\n      eventBus.once('pendingPool.confirm', () => {\r\n        res(true);\r\n        rootStore.base.closePendingPool();\r\n      });\r\n      eventBus.once('pendingPool.cacel', () => {\r\n        res(false);\r\n        rootStore.base.closePendingPool();\r\n      });\r\n    });\r\n  },\r\n  async waitModal(args: Partial<BaseStore['modal']>) {\r\n    return new Promise<boolean>((res, rej) => {\r\n      rootStore.base.setModal(args);\r\n      eventBus.once('modal.confirm', () => {\r\n        res(true);\r\n        rootStore.base.closeModal();\r\n      });\r\n      eventBus.once('modal.cancel', () => {\r\n        res(false);\r\n      });\r\n    });\r\n  }\r\n};\r\n","import { makeAutoObservable, makeObservable, observable } from 'mobx';\r\nimport { NetworkState } from './NetworkState';\r\nimport { BigNumberState, MulticallParams } from '../type';\r\nimport { _ } from '../../lib/lodash';\r\nimport BigNumber from 'bignumber.js';\r\nimport { LPTokenState } from './TokenState';\r\nimport { helper } from '../../utils/helper';\r\nimport { rootStore } from '../index';\r\n\r\nexport class ContractState {\r\n  address: string;\r\n  abi: any;\r\n  deployedBlock: Number;\r\n  network: NetworkState;\r\n\r\n  constructor(args: Partial<ContractState>) {\r\n    Object.assign(this, args);\r\n  }\r\n\r\n  preMulticall(args: Partial<MulticallParams>) {\r\n    return Object.assign({ address: this.address, abi: this.abi }, args);\r\n  }\r\n}\r\n\r\nexport class AeolusContractState implements ContractState {\r\n  address: string;\r\n  name: string;\r\n  abi: any;\r\n  deployedBlock: Number;\r\n  deprecated: boolean;\r\n  rewardPerBlock = new BigNumberState({\r\n    loading: true,\r\n    fixed: 0\r\n  });\r\n  staked = new BigNumberState({ loading: true });\r\n  cycEarn = new BigNumberState({ loading: true });\r\n  lpLocked = null;\r\n  network: NetworkState;\r\n  LpToken: LPTokenState;\r\n  addLiquidity: string;\r\n  removeLiquidity: string;\r\n\r\n  constructor(args: Partial<AeolusContractState>) {\r\n    Object.assign(this, args);\r\n    makeAutoObservable(this, {\r\n      network: false\r\n    });\r\n  }\r\n\r\n  get liquidityText() {\r\n    return this.deprecated ? rootStore.lang.t('remove.liquidity') : rootStore.lang.t('add.liquidity');\r\n  }\r\n\r\n  get LiquidityURL() {\r\n    return this.deprecated\r\n      ? helper.string.parseTemplate(this.removeLiquidity, { token: this.network.currentChain.CYCToken.address })\r\n      : helper.string.parseTemplate(this.addLiquidity, { token: this.network.currentChain.CYCToken.address });\r\n  }\r\n\r\n  get title() {\r\n    if (this.name) return this.name;\r\n    return `CYC-${this.network.currentChain.Coin.symbol.toUpperCase()} LP`;\r\n  }\r\n\r\n  get liquidityApy() {\r\n    return _.get(this.network.apyMap, `${this.address}.apy`, '0') as string;\r\n  }\r\n\r\n  get liquidityApyDaily() {\r\n    return new BigNumber(this.liquidityApy).comparedTo(0) > 0 ? new BigNumber(this.liquidityApy).dividedBy(365).toFixed(2) : '0';\r\n  }\r\n\r\n  get rewardDaily() {\r\n    const rewardPerBlock = this.rewardPerBlock;\r\n    if (rewardPerBlock.loading) return '...';\r\n    return rewardPerBlock.value\r\n      .multipliedBy(86400 / this.network.currentChain.metas.rewardPerBlock)\r\n      .dividedBy(10 ** rewardPerBlock.decimals)\r\n      .toFixed(rewardPerBlock.fixed);\r\n  }\r\n\r\n  preMulticall(args: Partial<MulticallParams>) {\r\n    return Object.assign({ address: this.address, abi: this.abi }, args);\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/Polygon.02c8e71a.bin\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n  if ('serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // console.log(\r\n          //   'This web app is being served cache-first by a service ' +\r\n          //     'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          // );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              // console.log(\r\n              //   'New content is available and will be used when all ' +\r\n              //     'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              // );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              // console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      // console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // console.log(\r\n      //   'No internet connection found. App is running in offline mode.'\r\n      // );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useStore } from '../../store';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Wrapper, Text, FlexBox, Icon, BorderBox, Button, Section } from '../../modules/globalStyle';\r\nimport { styled } from '../../modules/index';\r\nimport { metamaskUtils } from '../../utils/metamaskUtils';\r\nimport { hooks } from '../../lib/hooks';\r\n\r\nfunction getIsMetaMask(): boolean {\r\n  return window.ethereum?.isMetaMask ?? false\r\n}\r\n\r\nexport const ChainNav = observer(() => {\r\n  const { lang, base, god } = useStore();\r\n  const history = useHistory();\r\n  const store = useLocalStore(() => ({\r\n    current: history.location.pathname,\r\n    chains: [\r\n      {\r\n        name: 'ETH',\r\n        logo: '/images/home/eth_n.svg',\r\n        path: '/eth',\r\n        active_logo: '/images/home/eth_s.svg',\r\n        chainID: 1,\r\n      },\r\n      {\r\n        name: 'BSC',  \r\n        logo: '/images/home/bsc_n.svg',\r\n        path: '/bsc',\r\n        active_logo: '/images/home/bsc_s.svg',\r\n        chainID: 56,\r\n      },\r\n      // {\r\n      //   name: 'Polygon',\r\n      //   logo: '/images/home/matic_n.svg',\r\n      //   path: '/polygon',\r\n      //   active_logo: '/images/home/matic_s.svg',\r\n      //   chainID: 137\r\n      // },\r\n    ],\r\n    get currentObj() {\r\n      if(store.current == '/compliance')\r\n        return store.chains[0];\r\n      return store.chains.find((i) => i.path == store.current);\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    store.current = history.location.pathname;\r\n  }, [history.location.pathname]);\r\n\r\n  return (\r\n    <>\r\n      <Section css={{ display: 'none', '@md': { display: 'block', position: 'relative', mr: '1rem' } }}>\r\n        <DropItem color=\"normal\">\r\n          <FlexBox justify=\"between\" css={{width: '100%'}}>\r\n            <FlexBox css={{flex: 1}}>\r\n                <Icon src={store.currentObj.active_logo} alt=\"\" css={{ width: '25px', height: '25px', marginRight: '5px' }}></Icon>\r\n                <Text color=\"white\" size=\"md\" weight=\"semibold\">{store.currentObj.name}</Text>\r\n            </FlexBox>\r\n            <Icon src=\"/images/home/btn_dropdown.png\" alt=\"\" css={{ width: 24, height: 24 }}></Icon>\r\n          </FlexBox>\r\n        </DropItem>\r\n        <DropdownBox>\r\n          <Section className=\"dropBox\" css={{ backgroundColor: '$bg9' }}>\r\n            {store.chains &&\r\n              store.chains.map((item, index) => (\r\n                <DropItem\r\n                  key={item.path}\r\n                  onClick={() => {\r\n                    god.currentPoolIndex = null;\r\n                    store.current = item.path;\r\n                    // if( getIsMetaMask() ) {\r\n                    //   const chain = god.eth.chains[item.chainID];\r\n                    //   metamaskUtils.setupNetwork({\r\n                    //     chainId: chain.chainId,\r\n                    //     blockExplorerUrls: [chain.explorerURL],\r\n                    //     chainName: chain.name,\r\n                    //     nativeCurrency: {\r\n                    //       decimals: chain.Coin.decimals || 18,\r\n                    //       name: chain.Coin.symbol,\r\n                    //       symbol: chain.Coin.symbol\r\n                    //     },\r\n                    //     rpcUrls: [chain.baseRpcUrl]\r\n                    //   });\r\n                    // }\r\n                    // else {\r\n                    //   hooks.waitModal({title: lang.t('notification'), msg: lang.t('toNet.wallet')});\r\n                    // }\r\n                    history.push(item.path);\r\n                  }}\r\n                  css={{\r\n                    backgroundColor: store.current === item.path ? '$bg9' : 'transparent',\r\n                    '&:hover': {\r\n                      img: {\r\n                        content: `url(${item.active_logo}) !important`\r\n                      },\r\n                      \".name\": {\r\n                        color: '$textPrimary'\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  <Icon\r\n                    src={store.current === item.path ? item.active_logo : item.logo}\r\n                    css={{\r\n                      width: '25px',\r\n                      height: item.name == 'Polygon' ? '20px' : '25px',\r\n                      marginRight: '5px',\r\n                      '&:hover': {\r\n                        content: `url(${item.active_logo})`\r\n                      }\r\n                    }}\r\n                  />\r\n                  <Text className=\"name\" color=\"light\" size=\"md\" weight=\"semibold\" cursor=\"pointer\">{item.name}</Text>\r\n                </DropItem>\r\n              ))}\r\n          </Section>\r\n        </DropdownBox>\r\n      </Section>\r\n\r\n      <FlexBox css={{ mb: '2rem', display: 'flex', '@md': { display: 'none' } }}>\r\n        {store.chains &&\r\n          store.chains.map((item, index) => (\r\n            <DropItem\r\n              key={item.path}\r\n              onClick={() => {\r\n                god.currentPoolIndex = null;\r\n                store.current = item.path;\r\n                    // if( getIsMetaMask() ) {\r\n                    //   const chain = god.eth.chains[item.chainID];\r\n                    //   metamaskUtils.setupNetwork({\r\n                    //     chainId: chain.chainId,\r\n                    //     blockExplorerUrls: [chain.explorerURL],\r\n                    //     chainName: chain.name,\r\n                    //     nativeCurrency: {\r\n                    //       decimals: chain.Coin.decimals || 18,\r\n                    //       name: chain.Coin.symbol,\r\n                    //       symbol: chain.Coin.symbol\r\n                    //     },\r\n                    //     rpcUrls: [chain.baseRpcUrl]\r\n                    //   });\r\n                    // }\r\n                    // else {\r\n                    //   hooks.waitModal({title: lang.t('notification'), msg: lang.t('toNet.wallet')});\r\n                    // }\r\n                history.push(item.path);\r\n              }}\r\n              css={{\r\n                padding: 0,\r\n                width: '100%',\r\n                textAlign: 'center',\r\n                backgroundColor: store.current === item.path ? '$bg9' : '$bg3',\r\n                '&:hover': {\r\n                  img: {\r\n                    content: `url(${item.active_logo}) !important`\r\n                  },\r\n                }\r\n              }}\r\n            >\r\n              <FlexBox justify=\"center\" css={{width: '100%', marginRight: 10}}>\r\n                <Icon\r\n                  src={store.current === item.path ? item.active_logo : item.logo}\r\n                  css={{\r\n                    width: item.name == 'Polygon' ? '25px' : '35px',\r\n                    height: item.name == 'Polygon' ? '20px' : '25px',\r\n                    marginRight: '5px',\r\n                    '&:hover': {\r\n                      content: `url(${item.active_logo})`\r\n                    }\r\n                  }}\r\n                />\r\n                <Text color={store.current === item.path  ? \"white\": \"light\"} size=\"md\" weight=\"semibold\" cursor=\"pointer\">{item.name}</Text>\r\n              </FlexBox>\r\n            </DropItem>\r\n          ))}\r\n      </FlexBox>\r\n    </>\r\n  );\r\n});\r\n\r\nconst DropdownBox = styled('div', {\r\n  position: 'absolute',\r\n  width: '100px',\r\n  height: '30px',\r\n  top: 0,\r\n  left: 0,\r\n  '.dropBox': {\r\n    position: 'absolute',\r\n    top: 38,\r\n    left: 0,\r\n    display: 'none'\r\n  },\r\n  '&:hover': {\r\n    height: 90,\r\n    '.dropBox': {\r\n      display: 'block'\r\n    }\r\n  }\r\n});\r\n\r\nconst DropItem = styled('div', {\r\n  width: '110px',\r\n  height: '30px',\r\n  backgroundColor: '$bg9',\r\n  padding: '0 9px 0 11px',\r\n  boxSizing: 'border-box',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  variants: {\r\n    color: {\r\n      normal: {\r\n        '&:hover': {\r\n          backgroundColor: '$bg3'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport { css, global } from '../../modules/index';\r\nimport { useStore } from '../../store';\r\nimport { Link } from 'react-router-dom';\r\nimport { Icon, Text, Section } from '../../modules/globalStyle';\r\nimport { Menu, Dropdown } from 'antd';\r\nimport { observer, useLocalStore, useObserver } from 'mobx-react-lite';\r\nimport { helper } from '../../utils/helper';\r\nimport { ChainNav } from '../ChainNav/index';\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nexport const Headers = observer((props) => {\r\n  const { lang, god } = useStore();\r\n  const store = useLocalStore(() => ({\r\n    isMouseOver: false,\r\n    isRegistered: false,\r\n    showConnecter() {\r\n      god.setShowConnecter(true);\r\n    },\r\n    mouseOver(event) {\r\n      this.isMouseOver = true;\r\n    },\r\n    mouseOut(event) {\r\n      this.isMouseOver = false;\r\n    },\r\n    showWalletInfo() {\r\n      if(store.isRegistered) {\r\n        god.currentNetwork.walletInfo.visible = true;\r\n      }\r\n      else {\r\n        god.register();\r\n      }\r\n    },\r\n    register() {\r\n    }\r\n  }));\r\n\r\n  const menus = (\r\n    <Menu>\r\n      <Menu.Item style={{color: 'white'}}>\r\n        <a href=\"https://messier.gitbook.io/catalogue-de-messier/the-black-hole\">{lang.t('Docs')}</a>\r\n      </Menu.Item>\r\n      <Menu.Item style={{color: 'white'}}>\r\n        <a href=\"https://github.com/MessierM87\">Github</a>\r\n      </Menu.Item>\r\n      \r\n    </Menu>\r\n  );\r\n  const accountView = useObserver(() => {\r\n    if (!god.myAddress) {\r\n      return (\r\n        <Text color=\"yellow\" weight=\"bold\" family=\"Montserrat\" cursor=\"pointer\" onClick={store.showConnecter}>\r\n          {lang.t('login')}\r\n        </Text>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <Text size=\"small\" color=\"yellow\" weight=\"bold\" family=\"Montserrat\" cursor=\"pointer\" onClick={store.showWalletInfo}>\r\n          {store.isRegistered ? helper.string.truncate(god.myAddress, 12, \"...\") : lang.t('signup')}\r\n        </Text>\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    store.isRegistered = god.isRegistered;\r\n  }, [god.isRegistered]);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.cycHeader.className}>\r\n        <div className=\"cycHeader_l\">\r\n          <a href=\"/\">\r\n            <img src=\"/images/home/logo.png\" className=\"logo\" alt=\"\" />\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://messier.gitbook.io/catalogue-de-messier/the-black-hole\">{lang.t('Docs')}</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/MessierM87\">Github</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"cycHeader_r\">\r\n          {/* <Icon src=\"/images/home/icon_light.png\" alt=\"\" className=\"light\"  /> */}\r\n          <ChainNav />\r\n          {accountView}\r\n        </div>\r\n        <div className={styles.menuMobile.className}>\r\n          <Dropdown overlay={menus} placement=\"bottomRight\">\r\n            <Icon src=\"/images/home/menu_icon.png\" css={{ width: '1.4em', height: '1.3rem', padding: 0 }} alt=\"\"></Icon>\r\n          </Dropdown>\r\n\r\n        </div>\r\n      </div>\r\n      <Section css={{ dispaly: 'block', '@md': { display: 'none' } }}>\r\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n          <ChainNav />\r\n          <div style={{display: 'flex', alignItems: 'center', height: 30}}>\r\n            {accountView}\r\n          </div>\r\n        </div>\r\n      </Section>\r\n    </>\r\n  );\r\n});\r\n\r\nconst styles = {\r\n  cycHeader: css({\r\n    flexBetweenCenter: 'row',\r\n    marginBottom: '2.5rem',\r\n    fontFamily: 'Montserrat',\r\n    '.ant-dropdown-menu': {\r\n      backgroundColor: '$bg5 !important',\r\n    },\r\n    '.cycHeader_l': {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n\r\n      '.logo': {\r\n        height: '2.5rem',\r\n        marginRight: '5rem',\r\n      },\r\n      ul: {\r\n        display: 'none',\r\n        '@md': {\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          listStyleType: 'none',\r\n          padding: 0,\r\n          margin: 0,\r\n        },\r\n        li: {\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          marginRight: '2.375rem',\r\n          a: {\r\n            color: '$textPrimary',\r\n            fontSize: '1rem',\r\n            fontWeight: 'bold',\r\n            '&:hover': {\r\n              color: '$primary',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    '.cycHeader_r': {\r\n      display: 'none',\r\n      '@md': {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '.light': {\r\n          width: '1.6rem',\r\n          height: '1.6rem',\r\n          marginRight: '2.5rem',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n  menuMobile: css({\r\n    display: 'block',\r\n    '@md': {\r\n      display: 'none',\r\n    },\r\n    '.ant-dropdown-trigger': {\r\n      px: 0,\r\n    },\r\n  }),\r\n};\r\n\r\nexport default Headers;\r\n","import React, { useState } from 'react';\r\nimport { styled } from '../../modules/index';\r\nimport { Icon, Text } from '../../modules/globalStyle';\r\n\r\ninterface IComponentProps {\r\n  content?: any;\r\n}\r\n\r\nexport const Notice = styled('div', {\r\n  width: '100%',\r\n  boxSizing: 'border-box',\r\n  backgroundColor: '$bg3',\r\n  padding: '0.5rem 1.5rem',\r\n  flexBetweenCenter: 'row',\r\n  fontSize: '0.75rem',\r\n  lineHeight: '1.2rem',\r\n  color: '$textPrimary',\r\n  a: {\r\n    color: '$primary',\r\n    textDecoration: 'none'\r\n  },\r\n  img: {\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    cursor: 'pointer',\r\n    ml: '1rem'\r\n  },\r\n  variants: {\r\n    status: {\r\n      show: {\r\n        display: 'flex'\r\n      },\r\n      hide: {\r\n        display: 'none'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const NoticeItem = (props: IComponentProps) => {\r\n  const { content } = props;\r\n  const [isShow, setStatus] = useState(true);\r\n  return (\r\n    <Notice css={{ mb: '0.5rem' }} status={isShow ? 'show' : 'hide'}>\r\n      <Text css={{ flex: 1, textAlign: 'center' }}>{content}</Text>\r\n      <Icon\r\n        onClick={() => setStatus(false)}\r\n        src=\"/images/home/delete_button_n.png\"\r\n        css={{\r\n          '&:hover': {\r\n            content: 'url(\"/images/home/delete_button_s.png\")'\r\n          }\r\n        }}\r\n        alt=\"\"\r\n      />\r\n    </Notice>\r\n  );\r\n};\r\n","import React, { Fragment } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Wrapper, FlexBox, Text, Icon, Section } from '../../../modules/globalStyle';\r\nimport { css } from '../../../modules/index';\r\nimport { Headers } from '../../../components/Headers/index';\r\nimport { NoticeItem } from '../../../components/Notice/index';\r\nimport { useStore } from '../../../store';\r\nimport CountUp from 'react-countup';\r\n\r\nexport const HomeTop = observer(() => {\r\n  const { lang, base, god } = useStore();\r\n  return (\r\n    <article className={styles.homeTop.className}>\r\n      <Wrapper>\r\n        <Headers />\r\n\r\n        <NoticeItem\r\n          content={\r\n            <div>\r\n              {lang.t('notice.txt1')}&nbsp;\r\n              <a href=\"https://github.com/solidproof/projects/blob/main/Messier%20M87/SmartContract_Audit_Solidproof_MessierM87.pdf\">{lang.t('audited.code')}</a>&nbsp;\r\n              {lang.t('notice.txt2')} <br />\r\n              {lang.t('notice.txt2_next')}\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <FlexBox justify=\"between\" responsive=\"rc\" css={{ mt: '2.625rem', alignItems: 'stretch', '@md': { alignItems: 'center' } }}>\r\n          <Section css={{ mb: '3rem', '@md': { mb: 0 } }}>\r\n            <Text size=\"large\" color=\"white\" weight=\"medium\" css={{ mb: '0.5rem' }} responsive=\"large\">\r\n              <span>{lang.t('tvl')}: </span>\r\n              {base.tvl ? (\r\n                <CountUp\r\n                  end={base.tvl}\r\n                  duration={1}\r\n                  decimals={2}\r\n                  preserveValue\r\n                  formattingFn={(e) => `$${e.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}`}\r\n                />\r\n              ) : (\r\n                '...'\r\n              )}\r\n            </Text>\r\n            <Text size=\"medium\" color=\"light\" responsive=\"large\">\r\n              <span>{lang.t('token.price')}: $</span>\r\n              <CountUp end={base.m87PriceUSD.format} duration={1} decimals={10} preserveValue />\r\n            </Text>\r\n          </Section>\r\n          <Section>\r\n            <FlexBox justify=\"end\" css={{ mb: '0.4rem' }} onClick={(e) => god.addCYCToMetamask()}>\r\n              <Text size=\"small\" color=\"light\" hover=\"light\" cursor=\"pointer\">\r\n                {lang.t('add.metamask')}\r\n              </Text>\r\n              <Icon src=\"/images/home/metamask_logo.png\" css={{ marginLeft: '0.8rem' }} alt=\"\" />\r\n            </FlexBox>\r\n            <a href={god.currentNetwork.chains[1].swapURL} target=\"_blank\">\r\n              <FlexBox justify=\"end\">\r\n                <Text size=\"small\" color=\"light\" hover=\"light\" cursor=\"pointer\">\r\n                  {lang.t('add.to', { target: god.currentNetwork.chains[1].swapName })}\r\n                </Text>\r\n                <Icon src={`/images/home/${god.currentNetwork.chains[1].swapName.toLowerCase()}.png`} css={{ marginLeft: '0.8rem' }} alt=\"\" />\r\n              </FlexBox>\r\n            </a>\r\n          </Section>\r\n        </FlexBox>\r\n      </Wrapper>\r\n    </article>\r\n  );\r\n});\r\n\r\nconst styles = {\r\n  homeTop: css({\r\n    padding: '1.5rem 0 0 0'\r\n  }),\r\n  miniLine: css({\r\n    width: '100px',\r\n    height: 1,\r\n    backgroundColor: '$primary',\r\n    marginTop: '1.5rem'\r\n  })\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useStore } from '../../store';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Wrapper, Text, FlexBox, Icon, Section, Button } from '../../modules/globalStyle';\r\nimport { styled } from '../../modules/index';\r\n\r\nconst langGroups = {\r\n\ten: { name: 'EN', src: '/images/EN.png', text: 'en' },\r\n\tru: { name: 'RU', src: '/images/RU.png', text: 'ru' },\r\n\tzh_CN: { name: 'CN', src: '/images/CN.png', text: 'zh_CN' },\r\n};\r\n\r\nexport const LinksLanguage = observer(() => {\r\n\tconst { lang } = useStore();\r\n\tconst store = useLocalStore(() => ({\r\n\t\tget curLang() {\r\n\t\t\tif (!langGroups[lang.lang]) return langGroups.en;\r\n\t\t\treturn langGroups[lang.lang];\r\n\t\t},\r\n\t}));\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<li>\r\n\t\t\t\t<a href=\"https://messier.gitbook.io/catalogue-de-messier/the-black-hole\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t<img src=\"images/home/gitbook.png\" className=\"logo\" alt=\"\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a href=\"https://twitter.com/MessierM87\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t<img src=\"images/home/twitter.png\" className=\"logo\" alt=\"\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a href=\"https://t.me/MessierM87Community\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t<img src=\"images/home/tele.png\" className=\"logo\" alt=\"\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a href=\"https://github.com/MessierM87\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t<img src=\"images/home/github.png\" className=\"logo\" alt=\"\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a href=\"https://medium.com/@MessierM87\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n\t\t\t\t\t<img src=\"images/home/medium.png\" className=\"logo\" alt=\"\" />\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<div className=\"line\"></div>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<LangSelect>\r\n\t\t\t\t\t<div className=\"langList\">\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t{Object.values(langGroups).map((item) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tclassName={item.text === lang.lang ? 'active' : ''}\r\n\t\t\t\t\t\t\t\t\t\tkey={item.name}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => lang.setLang(item.text)}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<img src={item.src} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t\t<span>{item.name}</span>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img className=\"cityIcon\" src={store.curLang.src} alt=\"\" />\r\n\t\t\t\t</LangSelect>\r\n\t\t\t</li>\r\n\t\t</Container>\r\n\t);\r\n});\r\n\r\n\r\n\r\nconst Container = styled('article', {\r\n\tdisplay: 'flex',\r\n\talignItems: 'flex-end',\r\n\tlistStyleType: 'none',\r\n\tpadding: 0,\r\n\tmargin: '0 0 2rem 0',\r\n\t'@md': {\r\n\t\tmarginBottom: 0,\r\n\t},\r\n\tli: {\r\n\t\tmarginRight: 8,\r\n\t\tcursor: 'pointer',\r\n\t\t'&:last-child': {\r\n\t\t\tmarginRight: 0,\r\n\t\t},\r\n\t\t'.line': {\r\n\t\t\theight: '1.5rem',\r\n\t\t\twidth: '1px',\r\n\t\t\tbackgroundColor: '#FF7518',\r\n\t\t\tmarginLeft: 5,\r\n\t\t\tmarginRight: 5,\r\n\t\t},\r\n\t\timg: {\r\n\t\t\twidth: '1.5rem',\r\n\t\t\theight: '1.5rem',\r\n\t\t\tborderRadius: '50%',\r\n\t\t},\r\n\t},\r\n\r\n});\r\n\r\nconst LangSelect = styled('div', {\r\n\tposition: 'relative',\r\n\t'.cityIcon': {\r\n\t\twidth: '1.5rem',\r\n\t\theight: '1.5rem',\r\n\t\tborderRadius: '50%',\r\n\t\tcursor: 'pointer',\r\n\t},\r\n\tul: {\r\n\t\tlistStyleType: 'none',\r\n\t\twidth: '64px',\r\n\t\ttextAlign: 'left',\r\n\t\tpadding: 0,\r\n\t\tmargin: 0,\r\n\t\tdisplay: 'none',\r\n\t\tli: {\r\n\t\t\twidth: '100%',\r\n\t\t\tboxSizing: 'border-box',\r\n\t\t\tpadding: '6px 10px',\r\n\t\t\tfontSize: '12px',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tcursor: 'pointer',\r\n\t\t\tcolor: '#fff',\r\n\t\t\timg: {\r\n\t\t\t\twidth: '22px',\r\n\t\t\t\theight: '22px',\r\n\t\t\t\tmarginRight: '7px',\r\n\t\t\t},\r\n\t\t\t'&:hover': {\r\n\t\t\t\tbackgroundColor: '$primary',\r\n\t\t\t\tcolor: '#000',\r\n\t\t\t},\r\n\t\t},\r\n\t\t'.active': {\r\n\t\t\tbackground: '$primary',\r\n\t\t\tcolor: '#000',\r\n\t\t},\r\n\t},\r\n\t'.langList': {\r\n\t\tposition: 'absolute',\r\n\t\ttop: 0,\r\n\t\tleft: '0',\r\n\t\tpaddingBottom: '26px',\r\n\t\twidth: '64px',\r\n\t\theight: '1.5rem',\r\n\t\t'&:hover': {\r\n\t\t\theight: 140,\r\n\t\t\ttop: '-112px',\r\n\t\t\tul: {\r\n\t\t\t\tdisplay: 'block',\r\n\t\t\t\tbackgroundColor: '$bg1',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n})","import React, { useState } from 'react';\r\nimport { useStore } from '../../store';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Wrapper, Text, FlexBox, Icon, Section, Button } from '../../modules/globalStyle';\r\nimport { styled } from '../../modules/index';\r\nimport { LinksLanguage } from '../LinksLanguage';\r\n\r\nconst langGroups = {\r\n  en: { name: 'EN', src: '/images/EN.png', text: 'en' },\r\n  ru: { name: 'RU', src: '/images/RU.png', text: 'ru' },\r\n  zh_CN: { name: 'CN', src: '/images/CN.png', text: 'zh_CN' }\r\n};\r\n\r\nexport const CycFooter = observer(() => {\r\n  const { lang, god, base } = useStore();\r\n\r\n  return (\r\n    <FooterBox>\r\n      <Wrapper>\r\n        <FlexBox justify=\"between\" responsive=\"rc\" css={{ alignItems: 'center', '@md': { alignItems: 'start' } }}>\r\n          <LinksLanguage />\r\n          <FlexBox justify=\"end\" direction=\"column\" items=\"end\">\r\n            <FlexBox css={{ mb: '0.5rem', cursor: 'pointer' }}>\r\n              <a href={'https://etherscan.io/address/' + god.CYCToken.address} target=\"_blank\">\r\n                <Text size=\"mini\" color=\"white\" cursor=\"pointer\">\r\n                  {lang.t('cyc.token.contract')}: {god.CYCToken.address}\r\n                </Text>\r\n              </a>\r\n              <Section css={{ width: 1, height: 12, backgroundColor: '#FF7518', mx: '0.8rem' }} />\r\n              <Icon src=\"/images/home/metamask_logo.png\" alt=\"\" onClick={(e) => god.addCYCToMetamask()} />\r\n            </FlexBox>\r\n            <FlexBox>\r\n              <FlexBox>\r\n                <Text size=\"mini\" color=\"white\">\r\n                  {lang.t('token.price')}：\r\n                </Text>\r\n                <Text size=\"mini\" color=\"primary\" cursor=\"pointer\" css={{ textDecoration: 'underline' }}>\r\n                  $ {base.m87PriceUSD.format}\r\n                </Text>\r\n              </FlexBox>\r\n              <Section css={{ width: 1, height: 12, backgroundColor: '#FF7518', mx: '0.8rem' }} />\r\n              <a href={god.currentNetwork.chains[1].swapURL} target=\"_blank\">\r\n                <Icon src={`/images/home/${god.currentNetwork.chains[1].swapName.toLowerCase()}.png`} alt=\"\" />\r\n              </a>\r\n            </FlexBox>\r\n          </FlexBox>\r\n        </FlexBox>\r\n      </Wrapper>\r\n    </FooterBox>\r\n  );\r\n});\r\n\r\nconst FooterBox = styled('article', {\r\n  backgroundColor: '$bg2',\r\n  padding: '2rem 0',\r\n  '@md': {\r\n    padding: '2.75rem 0 1.875rem 0'\r\n  }\r\n});\r\n","import React, { useState } from 'react';\r\nimport { styled } from '../../modules/index';\r\nimport { FlexBox, Icon, Text } from '../../modules/globalStyle';\r\n\r\ninterface IComponentProps {\r\n  content?: any,\r\n  title?: string,\r\n  size?: any,\r\n  visible?: any,\r\n  close?: any\r\n}\r\n\r\nconst Dialog = styled('div', {\r\n  position: 'absolute',\r\n  variants: {\r\n    status: {\r\n      show: {\r\n        display: 'block'\r\n      },\r\n      hide: {\r\n        display: 'none'\r\n      }\r\n    }\r\n  },\r\n})\r\n\r\nconst ModalMask = styled('div', {\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 999,\r\n  width: '100%',\r\n  height: '100%',\r\n  backgroundColor: '$bg6'\r\n})\r\n\r\nconst ModalWrap = styled('div', {\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 1001,\r\n  width: '100%',\r\n  height: '100%',\r\n  outline: 'none',\r\n  overflow: 'auto',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n})\r\n\r\nconst Modal = styled('div', {\r\n  padding: '1rem',\r\n  backgroundColor: '$bg7',\r\n  textAlign: 'center',\r\n  '@md': {\r\n    padding: '1.5rem 3rem 3rem 3rem',\r\n  },\r\n  variants: {\r\n    size: {\r\n      base: {\r\n        px: '1.5rem',\r\n        borderRadius: '10px',\r\n        width: '90%',\r\n        '@md': {\r\n          width: '399px'\r\n        }\r\n      },\r\n      small: {\r\n        px: '2rem',\r\n        width: '90%',\r\n        '@md': {\r\n          width: '550px'\r\n        }\r\n      },\r\n      md: {\r\n        px: '1.5rem',\r\n        width: '90%',\r\n        '@md': {\r\n          width: '550px'\r\n        }\r\n      },\r\n      medium: {\r\n        width: '90%',\r\n        '@md': {\r\n          width: '700px'\r\n        }\r\n      },\r\n      auto: {\r\n        backgroundColor: 'transparent',\r\n        width: '90%',\r\n        '@md': {\r\n          width: 'auto'\r\n        }\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nexport const DialogWrapper = (props: IComponentProps) => {\r\n  const { title, content, size, visible, close } = props\r\n  return (\r\n    <Dialog status={visible ? 'show' : 'hide'}>\r\n      <ModalMask />\r\n      <ModalWrap>\r\n        <Modal size={size}>\r\n          {title && <FlexBox justify=\"between\" css={{ mb: '1.5rem' }}>\r\n            <Text size=\"small\" color=\"white\" weight=\"semibold\">{title}</Text>\r\n            <Icon\r\n              onClick={close}\r\n              src=\"/images/home/delete_button_n.png\"\r\n              css={{\r\n                '&:hover': {\r\n                  content: 'url(\"/images/home/delete_button_s.png\")'\r\n                }\r\n              }} alt=\"\" />\r\n          </FlexBox>}\r\n          {content}\r\n        </Modal>\r\n      </ModalWrap>\r\n    </Dialog>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { styled } from '../../modules/index';\r\nimport { Icon, Text, FlexBox, TextArea, Button } from '../../modules/globalStyle';\r\nimport { DialogWrapper } from '../Dialog/index';\r\nimport { useLocalStore, observer } from 'mobx-react-lite';\r\nimport { useStore } from '../../store/index';\r\n\r\ninterface IComponentProps {\r\n  visible?: boolean;\r\n  text?: string;\r\n  showConfirm?: boolean;\r\n  showCancel?: boolean;\r\n  showLoading?: boolean;\r\n  confirmText?: string;\r\n  close?: Function;\r\n  onConfirm?: Function;\r\n  onCancel?: Function;\r\n}\r\n\r\nexport const OnLoading = observer((props: IComponentProps) => {\r\n  const { lang } = useStore();\r\n  const { visible, text } = props;\r\n\r\n  const store = useLocalStore(() => ({\r\n    onConfirm() {\r\n      props.close();\r\n      props.onConfirm();\r\n    },\r\n    onCancel() {\r\n      props.close();\r\n      props.onCancel();\r\n    }\r\n  }));\r\n\r\n  const content = (\r\n    <article>\r\n      {props.showLoading && (\r\n        <svg width=\"80\" height=\"80\" viewBox=\"0 0 80 80\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path\r\n            d=\"M39.5488 16.0156C52.6496 16.0156 63.2616 26.7487 63.2616 39.999C63.2616 53.2494 52.6496 63.9824 39.5488 63.9824C26.4479 63.9824 15.8359 53.2494 15.8359 39.999\"\r\n            stroke=\"#38DCD5\"\r\n            strokeWidth=\"6\"\r\n            strokeMiterlimit=\"10\"\r\n            strokeLinecap=\"square\"\r\n          >\r\n            <animateTransform attributeName=\"transform\" begin=\"0s\" dur=\"1s\" type=\"rotate\" from=\"0 40 40\" to=\"360 40 40\" repeatCount=\"indefinite\" />\r\n          </path>\r\n          <path\r\n            d=\"M51.3651 40.001C51.3651 46.6123 46.0865 51.9512 39.5498 51.9512C33.013 51.9512 27.7344 46.6123 27.7344 40.001C27.7344 33.3896 33.013 28.0508 39.5498 28.0508\"\r\n            stroke=\"#38DCD5\"\r\n            strokeWidth=\"6\"\r\n            strokeMiterlimit=\"10\"\r\n          >\r\n            <animateTransform attributeName=\"transform\" begin=\"0s\" dur=\"1s\" type=\"rotate\" from=\"0 40 40\" to=\"360 40 40\" repeatCount=\"indefinite\" />\r\n          </path>\r\n          <path\r\n            d=\"M74.9969 40C74.9969 59.8064 59.1337 75.8506 39.5508 75.8506\"\r\n            stroke=\"#38DCD5\"\r\n            strokeWidth=\"6\"\r\n            strokeMiterlimit=\"10\"\r\n            strokeLinecap=\"square\"\r\n          />\r\n          <path\r\n            d=\"M4.10156 39.9991C4.10156 20.1927 19.9648 4.14844 39.5477 4.14844\"\r\n            stroke=\"#38DCD5\"\r\n            strokeWidth=\"6\"\r\n            strokeMiterlimit=\"10\"\r\n            strokeLinecap=\"square\"\r\n          />\r\n          <path d=\"M39.5508 4.14844H74.9969\" stroke=\"#38DCD5\" strokeWidth=\"6\" strokeMiterlimit=\"10\" />\r\n          <path d=\"M39.5477 75.8516H4.10156\" stroke=\"#38DCD5\" strokeWidth=\"6\" strokeMiterlimit=\"10\" />\r\n        </svg>\r\n      )}\r\n\r\n      <Text size=\"lg\" color=\"primary\" weight=\"medium\" css={{ my: '1rem' }} align=\"center\">\r\n        {text}\r\n      </Text>\r\n\r\n      <FlexBox justify=\"center\">\r\n        {props.showConfirm && (\r\n          <Button size=\"medium\" color=\"primary\" onClick={store.onConfirm}>\r\n            {props.confirmText || (props.showLoading ? lang.t('Confirm') : lang.t('Okay'))}\r\n          </Button>\r\n        )}\r\n        {props.showCancel && (\r\n          <Button size=\"medium\" color=\"primary\" css={{ ml: '1rem' }} onClick={store.onCancel}>\r\n            Cancel\r\n          </Button>\r\n        )}\r\n      </FlexBox>\r\n    </article>\r\n  );\r\n  return <DialogWrapper size=\"auto\" content={content} visible={visible} />;\r\n});\r\n","import React from 'react';\r\nimport { styled } from '../../modules/index';\r\nimport { Icon, Text, FlexBox, Button, Section } from '../../modules/globalStyle';\r\nimport { DialogWrapper } from '../Dialog/index';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { useStore } from '../../store/index';\r\nimport { message } from 'antd';\r\nimport { eventBus } from '../../lib/event';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nexport const WalletInfo = observer(() => {\r\n  const { god, lang } = useStore();\r\n\r\n  const store = useLocalStore(() => ({\r\n    get visible() {\r\n      return god.currentNetwork.walletInfo.visible;\r\n    },\r\n    close() {\r\n      god.currentNetwork.walletInfo.visible = false;\r\n    },\r\n    copyMyaddress() {\r\n      copy(god.myAddress);\r\n      message.success(lang.t('address.copied'));\r\n    },\r\n    copyAccount() {\r\n      copy(god.currentNetwork.account);\r\n      message.success(lang.t('address.copied'));\r\n    },\r\n    copyKey() {\r\n      copy(god.myPrivteKey);\r\n      message.success(lang.t('key.copied'));\r\n    },\r\n    logout() {\r\n      god.isRegistered = false;\r\n      god.myAddress = null;\r\n      eventBus.emit('wallet.logout');\r\n      store.close();\r\n    }\r\n  }));\r\n\r\n  const content = (\r\n    <Section>\r\n\r\n      <Text size=\"md\" color=\"white\" css={{ mb: '1.5rem' }}>\r\n        {lang.t('shielded.wallet')}\r\n      </Text>\r\n      <Text size=\"small\" color=\"white\" css={{ padding: '1.125rem 1rem', backgroundColor: '$bg3', wordBreak: 'break-all' }}>\r\n        {' '}\r\n        {god.myAddress}{' '}\r\n      </Text>\r\n      <FlexBox css={{ mt: '1.125rem', mb: '3rem' }}>\r\n        <Icon src=\"/images/home/icon_copy_bold.png\" alt=\"\" css={{ width: '0.875rem', mr: '0.6rem', '@md': { width: '1.5rem' } }}></Icon>\r\n        <Text size=\"small\" color=\"primary\" cursor=\"pointer\" onClick={store.copyKey} css={{ textDecoration: 'underline' }} responsive=\"md\">\r\n          {lang.t('copy.key')}\r\n        </Text>\r\n        <Icon src=\"/images/home/icon_copy_bold.png\" alt=\"\" css={{ width: '0.875rem', ml: '2rem', mr: '0.6rem', '@md': { width: '1.5rem' } }}></Icon>\r\n        <Text size=\"small\" color=\"primary\" cursor=\"pointer\" onClick={store.copyMyaddress} css={{ textDecoration: 'underline' }} responsive=\"md\">\r\n          {lang.t('copy.address')}\r\n        </Text>\r\n      </FlexBox>\r\n\r\n      {\r\n        god.currentNetwork.account &&\r\n          <>\r\n            <Text size=\"md\" color=\"white\" css={{ mb: '1.5rem' }}>\r\n              {lang.t('connected.wallet')}\r\n            </Text>\r\n            <Text size=\"small\" color=\"white\" css={{ padding: '1.125rem 1rem', backgroundColor: '$bg3', wordBreak: 'break-all' }}>\r\n            {' '}\r\n            {god.currentNetwork.account}{' '}\r\n          </Text>\r\n          <FlexBox css={{ mt: '1.125rem', mb: '3rem' }}>\r\n            <Icon src=\"/images/home/icon_bscscan.png\" alt=\"\" css={{ width: '0.875rem', mr: '0.6rem', '@md': { width: '1.5rem' } }}></Icon>\r\n            <a href={god.currentChain.explorerURL + '/address/' + god.currentNetwork.account} target=\"_blank\">\r\n              <Text size=\"small\" color=\"primary\" cursor=\"pointer\" css={{ textDecoration: 'underline' }} responsive=\"md\">\r\n                {lang.t('view.on')} {god.currentChain.explorerName}\r\n              </Text>\r\n            </a>\r\n            <Icon src=\"/images/home/icon_copy_bold.png\" alt=\"\" css={{ width: '0.875rem', ml: '2rem', mr: '0.6rem', '@md': { width: '1.5rem' } }}></Icon>\r\n            <Text size=\"small\" color=\"primary\" cursor=\"pointer\" onClick={store.copyAccount} css={{ textDecoration: 'underline' }} responsive=\"md\">\r\n              {lang.t('copy.address')}\r\n            </Text>\r\n          </FlexBox>\r\n        </>\r\n      }\r\n\r\n      <FlexBox justify=\"center\">\r\n        <Button size=\"small\" color=\"primary\" onClick={store.logout} responsive=\"lg\">\r\n          {lang.t('LOGOUT')}\r\n        </Button>\r\n      </FlexBox>\r\n    </Section>\r\n  );\r\n  return <DialogWrapper title=\" \" size=\"md\" content={content} visible={store.visible} close={store.close} />;\r\n});\r\n","import React, { useState } from 'react';\r\nimport { styled } from '../../modules/index';\r\nimport { Icon, Text, FlexBox, TextArea, Button, Section } from '../../modules/globalStyle';\r\nimport { DialogWrapper } from '../Dialog/index';\r\nimport { useStore } from '../../store';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { message } from 'antd';\r\nimport copy from 'copy-to-clipboard';\r\ninterface IComponentProps {\r\n  visible?: boolean;\r\n  close?: any;\r\n  note?: any;\r\n  onConfirm?: Function;\r\n  onCancel?: Function;\r\n}\r\n\r\nconst NoteBox = styled('div', {\r\n  backgroundColor: '$bg3',\r\n  p: '1rem'\r\n});\r\n\r\nexport const CheckNote = observer((props: IComponentProps) => {\r\n  const { lang, god } = useStore();\r\n  const { visible, close } = props;\r\n  const store = useLocalStore(\r\n    (props) => ({\r\n      invalid: false,\r\n      keyConfirm: '',\r\n      copy(data) {\r\n        copy(data);\r\n        message.success(lang.t('check.note.copied'));\r\n      },\r\n      get isConfirm() {\r\n        return store.keyConfirm != '';\r\n      },\r\n      async onConfirm() {\r\n        god.isRegistered = false;\r\n        god.setLoadingText(lang.t('horizon.connect'));\r\n        god.setLoadingView(true);\r\n        const { invalid } = await god.checkPrivateKey(store.keyConfirm);\r\n        store.invalid = !god.isRegistered;\r\n        if(!store.invalid) {\r\n          god.setLoadingText(lang.t('Loading.text9'));\r\n          await Promise.all(god.currentChain.poolList.map( async (pool) => {\r\n            await god.checkCommitmentAndNullifer(pool);\r\n          }));\r\n          god.loginType = \"key\";\r\n          props.onConfirm();\r\n        }\r\n        god.setLoadingView(false);\r\n      }\r\n    }),\r\n    props\r\n  );\r\n\r\n  const content = (\r\n    <Section>\r\n      {\r\n        store.invalid &&\r\n        <Text size=\"md\" color=\"warning\" css={{ mb: '1.2rem' }}>\r\n          {lang.t('backup.red')}\r\n        </Text>\r\n      }\r\n      <div>\r\n        <Text size=\"md\" color=\"white\" css={{ mb: '1.5rem' }}>\r\n          {lang.t('check.ky.textarea')}\r\n        </Text>\r\n\r\n        <TextArea value={store.keyConfirm} css={{ mb: '2rem' }} onChange={(e) => (store.keyConfirm = e.target.value)} />\r\n\r\n        <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n          <Button disabled={!store.isConfirm} style={{width: '48%'}} onClick={(e) => store.onConfirm()} color=\"primary\" responsive=\"large\">\r\n            {lang.t('confirm')}\r\n          </Button>\r\n          <Button style={{width: '48%'}} onClick={(e) => props.onConfirm()} color=\"primary\" responsive=\"large\">\r\n            {lang.t('Cancel')}\r\n          </Button>\r\n        </div>\r\n        \r\n      </div>\r\n    </Section>\r\n  );\r\n  return <DialogWrapper title={lang.t('shielded.key')} size=\"medium\" content={content} visible={visible} close={close} />;\r\n});\r\n","import React from 'react';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { FlexBox, Text, BorderBox, Section } from '../../modules/globalStyle';\r\nimport { useStore } from '../../store/index';\r\nimport { styled } from '../../modules';\r\n\r\nconst SwitchItem = styled('div', {\r\n  width: 24,\r\n  height: 24,\r\n  lineHeight: '24px',\r\n  cursor: 'pointer',\r\n  '.name': {\r\n    textAlign: 'center'\r\n  },\r\n  variants: {\r\n    bg: {\r\n      active: {\r\n        backgroundColor: '$primaryOpacity'\r\n      },\r\n      normal: {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const LpMiningHeader = observer(() => {\r\n  const { lang, setting, god } = useStore();\r\n  const store = useLocalStore(() => ({\r\n    toggleSwtich() {\r\n      setting.approveMax.save(!setting.approveMax.value);\r\n    }\r\n  }));\r\n  return (\r\n    <Section>\r\n      <BorderBox css={{ padding: '0 0 0.4rem 0' }}>\r\n        <FlexBox justify=\"between\">\r\n          <Text size=\"small\" color=\"white\" cursor=\"none\" weight=\"medium\" css={{ width: 190, '@md': { width: '32%' } }}>\r\n            {lang.t('anonymity_pools')}\r\n          </Text>\r\n          {/* <Text size=\"small\" color=\"white\" cursor=\"none\" weight=\"medium\" css={{ flex: 1, textAlign: 'right' }}>\r\n            {god.currentChain.chainId == 1 ? lang.t('total.apy') + ' / ' + lang.t('daily.apr') : ''}\r\n          </Text> */}\r\n          <FlexBox css={{ width: 'max-content', '@md': { width: '40%' } }} justify=\"end\">\r\n            {/* <Text size=\"small\" color=\"white\" cursor=\"none\" weight=\"medium\" css={{ display: 'none', '@md': { display: 'block' } }}>\r\n              {lang.t('tvl')}\r\n            </Text> */}\r\n            <Section css={{ width: '1rem', ml: '1rem', '@md': { width: '1.375rem', ml: '1.5rem' } }} />\r\n          </FlexBox>\r\n        </FlexBox>\r\n      </BorderBox>\r\n    </Section>\r\n  );\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { Wrapper, Icon, FlexBox, Text, BorderBox, Button, Section, DropBox } from '../../../modules/globalStyle';\r\nimport { useStore } from '../../../store';\r\nimport { LpMiningHeader } from '../../../components/LpMiningHeader';\r\nimport { DepositViewForBSC } from '../../../components/DepositViewForBSC';\r\nimport axios from 'axios';\r\nimport { generateTxData } from '../../../store/lib/GetLog';\r\nimport { JsonRpcProvider } from '@ethersproject/providers';\r\nimport { hooks } from '../../../lib/hooks';\r\n\r\nexport const Deposit = observer((props) => {\r\n  const { lang, god, dev, base } = useStore();\r\n\r\n  const store = useLocalStore(() => ({\r\n    isTransactionSent: false,\r\n    confirmedBlocks: 0\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if(store.isTransactionSent) {\r\n      god.setLoadingText(lang.t('confirm.block', {num: store.confirmedBlocks, total: god.currentChain.L1FinalizationRate}));\r\n    }\r\n  }, [store.confirmedBlocks]);\r\n\r\n  return (\r\n    <div style={{ display: props.isChosen? 'block' : 'none' }}>\r\n    <Wrapper>\r\n      <LpMiningHeader />\r\n      {/* {god.AeolusV2 && <LpMining aeolus={god.AeolusV2} />} */}\r\n      {/* <LpMining aeolus={god.Aeolus} /> */}\r\n      {/* <div style={store.isShowDetail1 ? {background: '#0000006e'} : {}}>\r\n        <TokenTab\r\n          tokenSymbol={god.currentChain.Coin.symbol}\r\n          tabName={god.currentChain.Coin.symbol}\r\n          onSelectTab={() => {\r\n            if (!god.isOnProgress && god.isPublicInfoLoaded && god.isPrivateInfoLoaded)\r\n              store.isShowDetail1 = !store.isShowDetail1;\r\n          }}\r\n          isShowDetail={store.isShowDetail1}\r\n        />\r\n      </div> */}\r\n      {\r\n        god.currentChain.poolList.map((pool) => {\r\n          return god.currentPoolIndex && <DepositViewForBSC\r\n            indexOfPool={pool.id}\r\n            chainID={god.currentChain.chainId}\r\n            onApproveXRC={ async (token, value)=> {\r\n              try {\r\n                await god.approve({token, spender: god.currentChain.L1Helper.address, value})\r\n              } catch (error) {\r\n                  throw new Error(\"Error while approving\");\r\n              }\r\n            }}\r\n            onDeposit={async (depositAmount) => {\r\n              god.setLoadingText(lang.t('Loading.text4'));\r\n              god.setLoadingView(true);\r\n              \r\n              let response = await axios.post(god.CurrentSet.relayer + '/v1/getProofData', { amount: depositAmount.toString(), key: god.myPrivteKey });\r\n              let res = response.data;\r\n              const {args, extData} = res;\r\n\r\n              console.log('depositAmount.toString()', depositAmount.toString());\r\n              console.log('args', args);\r\n              console.log('extData', extData);\r\n\r\n              const txData = generateTxData(args, extData);\r\n\r\n              god.setLoadingText(lang.t('send.transaction'));\r\n\r\n              let txInstance;\r\n              try {\r\n                txInstance = await god.deposit({amount: depositAmount, data: txData});\r\n                store.isTransactionSent = true;\r\n              } catch (error) {\r\n                god.setLoadingView(false);\r\n                store.isTransactionSent = false;\r\n                throw new Error(\"Error while depositing\");\r\n              }\r\n\r\n              const provider = new JsonRpcProvider(god.currentChain.rpcUrl);\r\n\r\n              const handler = async (blockNumber) => {\r\n                console.log(blockNumber);\r\n                let receipt = await provider.getTransactionReceipt(txInstance.hash);\r\n                if(receipt)\r\n                  store.confirmedBlocks = receipt.confirmations;\r\n                else\r\n                  store.confirmedBlocks = 0;\r\n              }\r\n\r\n              provider.on(\"block\", handler);\r\n              \r\n              await txInstance.wait(god.currentChain.L1FinalizationRate ).then((receipt) => {\r\n                store.isTransactionSent = false;\r\n                provider.removeListener(\"block\", handler);\r\n                god.setLoadingText(lang.t('send.bridge'));\r\n\r\n                let L1MessageId;\r\n                console.log('receipt.logs', receipt.logs);\r\n                receipt.logs.map((log) => {\r\n                  if(log.topics.length) {\r\n                    if(log.topics[0] == god.currentChain.userRequestTopic)\r\n                    L1MessageId = log.topics[1];\r\n                  }\r\n                });\r\n                console.log('messageId', L1MessageId);\r\n\r\n                const gnosisProvider = new JsonRpcProvider(god.currentChain.gnosisRpcUrl);\r\n\r\n                const completionFilter = {\r\n                    address: god.currentChain.HomeAMB.address,\r\n                    topics: [god.currentChain.AffirmationCompletedTopic]\r\n                }\r\n                gnosisProvider.on(completionFilter, async (event) => {\r\n                  if ( event.topics[3] == L1MessageId ) {\r\n                    god.setLoadingText(lang.t('update.info'));\r\n                    if(!god.isRegistered) {\r\n                      await god.checkRegistration(god.myAddress);\r\n                    }\r\n                    await god.checkCommitmentAndNullifer(god.CurrentSet);\r\n                    god.setLoadingView(false);\r\n                    hooks.waitLoading({ msg: lang.t('notification'), confirmText: lang.t('deposit.success') });\r\n                  }\r\n                })\r\n\r\n              });\r\n            }}\r\n          />\r\n        })\r\n      } \r\n      {/* head */}\r\n    </Wrapper>\r\n    </div>\r\n  );\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { Wrapper, Icon, FlexBox, Text, BorderBox, Button, Section, DropBox } from '../../../modules/globalStyle';\r\nimport { useStore } from '../../../store';\r\nimport { LpMiningHeader } from '../../../components/LpMiningHeader';\r\nimport { WithdrawViewForETH } from '../../../components/WithdrawViewForETH';\r\nimport axios from 'axios';\r\nimport { getUserSignatureLog, getSignatures } from '../../../store/lib/GetLog';\r\nimport { JsonRpcProvider } from '@ethersproject/providers';\r\nimport { hooks } from '../../../lib/hooks';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nlet withdrawStatusId, unwrapperStatusId;\r\nlet curStatusType;\r\nlet curSignBlockNumber;\r\n\r\nlet isSendingTx = false;\r\n\r\nexport const Withdraw = observer((props) => {\r\n  const { lang, god, dev, base } = useStore();\r\n\r\n  function getStatus(id, relayerURL, options) {\r\n    return new Promise((resolve) => {\r\n      async function getRelayerStatus() {\r\n\r\n        console.log('id', id);\r\n\r\n        console.log('curStatusType', curStatusType);\r\n        console.log('withdrawStatusId', withdrawStatusId);\r\n        console.log('unwrapperStatusId', unwrapperStatusId);\r\n        if(!isSendingTx)\r\n          return;\r\n        if(curStatusType == 'withdraw' && withdrawStatusId != id)\r\n          return;\r\n        if(curStatusType == 'unwrapper' && unwrapperStatusId != id)\r\n          return;\r\n        let responseStatus;\r\n        if(curStatusType == 'withdraw') {\r\n          responseStatus = await axios.get(relayerURL + '/v1/withdraw/jobs/' + id, options);\r\n        }\r\n        if(curStatusType == 'unwrapper') {\r\n          responseStatus = await axios.get(relayerURL + '/v1/unwrapper/jobs/' + id, options);\r\n        }\r\n        if (responseStatus.status === 200) {\r\n          const { txHash, status, confirmations, failedReason } = responseStatus.data;\r\n\r\n          if(curStatusType == 'withdraw') {\r\n            const msg = lang.t('viaRelayer1') + '#' + lang.t('confirm.block', {num: (confirmations ? confirmations: '0'), total: god.currentChain.L2FinalizationRate});\r\n            god.setLoadingText(msg);\r\n            // god.setLoadingText(`Transaction status ${status}, confirmations: ${confirmations ? confirmations: '0'}`);\r\n          }\r\n\r\n          if(curStatusType == 'unwrapper') {\r\n            const msg = lang.t('send.l1.tx') + '#' + lang.t('confirm.block', {num: (confirmations ? confirmations: '0'), total: 3});\r\n            god.setLoadingText(msg);\r\n            // god.setLoadingText(`Transaction status ${status}, confirmations: ${confirmations ? confirmations: '0'}`);\r\n          }\r\n          \r\n          console.log(`Current job status ${status}, confirmations: ${confirmations}`);\r\n  \r\n          if (status === 'FAILED') {\r\n            throw new Error(status + ' failed reason:' + failedReason);\r\n          }\r\n  \r\n          if (status === 'CONFIRMED') {\r\n            const receipt = await waitForTxReceipt({ txHash });\r\n            // console.log(\r\n            //   `Transaction submitted through the relay. View transaction on block explorer ${txHash}`\r\n            // );\r\n            // console.log('Transaction mined in block', receipt.blockNumber);\r\n            resolve(status);\r\n          }\r\n        }\r\n        if(curStatusType == 'withdraw' && !withdrawStatusId) {\r\n          return;\r\n        }\r\n        if(curStatusType == 'unwrapper' && !unwrapperStatusId) {\r\n          return;\r\n        }\r\n        setTimeout(() => {\r\n          getRelayerStatus(id, relayerURL);\r\n        }, 3000)\r\n      }\r\n  \r\n      getRelayerStatus();\r\n    })\r\n  }\r\n\r\n  function waitForTxReceipt({ txHash, attempts = 60, delay = 1000 }) {\r\n    console.log('txHash', txHash);\r\n    return new Promise((resolve, reject) => {\r\n      const checkForTx = async (txHash, retryAttempt = 0) => {\r\n        let provider;\r\n        if(curStatusType == 'withdraw') {\r\n          provider = new JsonRpcProvider(god.currentChain.gnosisRpcUrl);\r\n        }\r\n        if(curStatusType == 'unwrapper') {\r\n          provider = new JsonRpcProvider(god.currentChain.rpcUrl);\r\n        }\r\n        const result = await provider.getTransactionReceipt(txHash);\r\n        if(curStatusType == 'withdraw') {\r\n          curSignBlockNumber = result.blockNumber;\r\n        }\r\n        if (!result || !result.blockNumber) {\r\n          if (retryAttempt <= attempts) {\r\n            setTimeout(() => checkForTx(txHash, retryAttempt + 1), delay);\r\n          } else {\r\n            reject(new Error('tx was not mined'));\r\n          }\r\n        } else {\r\n          resolve(result);\r\n        }\r\n      }\r\n      checkForTx(txHash);\r\n    })\r\n}\r\n\r\n  const store = useLocalStore(() => ({\r\n    isTransactionSent: false,\r\n    confirmedBlocks: 0\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if(store.isTransactionSent) {\r\n      god.setLoadingText(lang.t('confirm.block', {num: store.confirmedBlocks, total: god.currentChain.L1FinalizationRate}));\r\n    }\r\n  }, [store.confirmedBlocks]);\r\n\r\n  return (\r\n    <div style={{ display: props.isChosen? 'block' : 'none' }}>\r\n    <Wrapper>\r\n      <LpMiningHeader />\r\n      {/* {god.AeolusV2 && <LpMining aeolus={god.AeolusV2} />} */}\r\n      {/* <LpMining aeolus={god.Aeolus} /> */}\r\n      {/* <div style={store.isShowDetail1 ? {background: '#0000006e'} : {}}>\r\n        <TokenTab\r\n          tokenSymbol={god.currentChain.Coin.symbol}\r\n          tabName={god.currentChain.Coin.symbol}\r\n          onSelectTab={() => {\r\n            if (!god.isOnProgress && god.isPublicInfoLoaded && god.isPrivateInfoLoaded)\r\n              store.isShowDetail1 = !store.isShowDetail1;\r\n          }}\r\n          isShowDetail={store.isShowDetail1}\r\n        />\r\n      </div> */}\r\n      {\r\n        god.currentChain.poolList.map((pool) => {\r\n          return god.currentPoolIndex && <WithdrawViewForETH\r\n            indexOfPool={pool.id}\r\n            chainID={god.currentChain.chainId}\r\n            onDeposit={async (depositAmount, feeAmount, recipient, L1feeAmount) => {\r\n\r\n            let idx = 0;\r\n\r\n            let sumBalance = new BigNumber(0);\r\n            let inputCommitments = [];\r\n            let myUtxoArr = god.CurrentSet.utxoList;\r\n\r\n            console.log('myUtxoArr', myUtxoArr);\r\n            myUtxoArr.map((utxo) => {\r\n              console.log(utxo.amount.toString());\r\n            })\r\n\r\n            while(sumBalance.comparedTo(depositAmount) < 0) {\r\n              if(myUtxoArr[idx].amount.gt(0)) {\r\n                sumBalance = sumBalance.plus(myUtxoArr[idx].amount);\r\n                inputCommitments.push(myUtxoArr[idx].commitment);\r\n              }\r\n              idx ++;\r\n            }\r\n\r\n            const restAmount = sumBalance.minus(depositAmount);\r\n            \r\n            let outputData = [];\r\n\r\n            if(restAmount.gt(0)) {\r\n              outputData.push({amount: restAmount, pubKey: god.myPublicKey});\r\n            }\r\n\r\n            god.setLoadingText(lang.t('Loading.text4'));\r\n            god.setLoadingView(true);\r\n\r\n            withdrawStatusId = undefined;\r\n            const relayerStatus = await axios.get(god.CurrentSet.relayer + '/v1/statusWithdraw');\r\n            const { relayer } = relayerStatus.data;\r\n            console.log('inputCommitments', inputCommitments);\r\n            console.log('outputData', outputData);\r\n            console.log('relayer', relayer);\r\n\r\n            let response;\r\n\r\n            response = await axios.post(god.CurrentSet.relayer + '/v1/submitWithdrawTX', {input: inputCommitments, output: outputData, key: god.myPrivteKey, fee: feeAmount.toString(), recipient: recipient, l1fee: L1feeAmount.toString(), relayer: relayer}, {});\r\n            \r\n            god.setLoadingText(lang.t('viaRelayer1'));\r\n\r\n            const withdrawTxId = response.data.id;\r\n            withdrawStatusId = withdrawTxId;\r\n            isSendingTx = true;\r\n            console.log(withdrawStatusId, 'withdrawStatusId');\r\n            curStatusType = 'withdraw';\r\n            await getStatus(withdrawTxId, god.CurrentSet.relayer, {});\r\n            withdrawStatusId = undefined;\r\n            isSendingTx = false;\r\n\r\n            god.setLoadingText(lang.t('send.l1.tx'));\r\n            const encodedData = await getUserSignatureLog(god.currentChain.HomeAMB, god.currentChain.gnosisRpcUrl, curSignBlockNumber);\r\n            console.log('encodedData', encodedData);\r\n\r\n            const signatures = await getSignatures(god.currentChain.AMBBridgeHelper, god.currentChain.gnosisRpcUrl, encodedData);\r\n\r\n            console.log('signatures', signatures);\r\n            if(!signatures)\r\n              return;\r\n            \r\n            response = await axios.post(god.CurrentSet.relayer + '/v1/submitUnwrapperTx', {msg: encodedData, signatures: signatures}, {});\r\n\r\n            const unwrapperTxId = response.data.id;\r\n            unwrapperStatusId = unwrapperTxId;\r\n            isSendingTx = true;\r\n            curStatusType = 'unwrapper';\r\n            await getStatus(unwrapperTxId, god.CurrentSet.relayer, {});\r\n            unwrapperStatusId = undefined;\r\n            isSendingTx = false;\r\n\r\n            god.setLoadingText(lang.t('update.info'));\r\n            await god.checkCommitmentAndNullifer(god.CurrentSet);\r\n\r\n            myUtxoArr = god.CurrentSet.utxoList;\r\n\r\n            console.log('myUtxoArr', myUtxoArr);\r\n            myUtxoArr.map((utxo) => {\r\n              console.log(utxo.amount.toString());\r\n            })\r\n\r\n            god.setLoadingView(false);\r\n\r\n            hooks.waitLoading({ msg: lang.t('notification'), confirmText: lang.t('withdraw.success') });\r\n\r\n            // response = await axios.post(god.CurrentSet.relayer + '/v1/getProofData', { amount: depositAmount.toString(), key: privateKey });\r\n            // res = response.data;\r\n            // const {args, extData} = res;\r\n\r\n            // console.log('args', args);\r\n            // console.log('extData', extData);\r\n\r\n            // txData = await generateTxData(ETHMainnetConfig.HorizonPool, ETHMainnetConfig.gnosisRpcUrl, ETHMainnetConfig.BridgeToken, args, extData, depositAmount);\r\n              \r\n            //   god.setLoadingText(lang.t('Loading.text4'));\r\n            //   god.setLoadingView(true);\r\n              \r\n            //   let response = await axios.post(god.CurrentSet.relayer + '/v1/getProofData', { amount: depositAmount.toString(), key: god.myPrivteKey });\r\n            //   let res = response.data;\r\n            //   const {args, extData} = res;\r\n\r\n            //   console.log('depositAmount.toString()', depositAmount.toString());\r\n            //   console.log('args', args);\r\n            //   console.log('extData', extData);\r\n\r\n            //   const txData = generateTxData(args, extData);\r\n\r\n            //   god.setLoadingText(lang.t('send.transaction'));\r\n\r\n            //   let txInstance;\r\n            //   try {\r\n            //     txInstance = await god.deposit({amount: depositAmount, data: txData});\r\n            //     store.isTransactionSent = true;\r\n            //   } catch (error) {\r\n            //     god.setLoadingView(false);\r\n            //     store.isTransactionSent = false;\r\n            //     throw new Error(\"Error while depositing\");\r\n            //   }\r\n\r\n            //   const provider = new JsonRpcProvider(god.currentChain.rpcUrl);\r\n\r\n            //   const handler = async (blockNumber) => {\r\n            //     console.log(blockNumber);\r\n            //     let receipt = await provider.getTransactionReceipt(txInstance.hash);\r\n            //     if(receipt)\r\n            //       store.confirmedBlocks = receipt.confirmations;\r\n            //     else\r\n            //       store.confirmedBlocks = 0;\r\n            //   }\r\n\r\n            //   provider.on(\"block\", handler);\r\n              \r\n            //   await txInstance.wait(god.currentChain.L1FinalizationRate ).then((receipt) => {\r\n            //     store.isTransactionSent = false;\r\n            //     provider.removeListener(\"block\", handler);\r\n            //     god.setLoadingText(lang.t('send.bridge'));\r\n\r\n            //     let L1MessageId;\r\n            //     console.log('receipt.logs', receipt.logs);\r\n            //     receipt.logs.map((log) => {\r\n            //       if(log.topics.length) {\r\n            //         if(log.topics[0] == god.currentChain.userRequestTopic)\r\n            //         L1MessageId = log.topics[1];\r\n            //       }\r\n            //     });\r\n            //     console.log('messageId', L1MessageId);\r\n\r\n            //     const gnosisProvider = new JsonRpcProvider(god.currentChain.gnosisRpcUrl);\r\n\r\n            //     const completionFilter = {\r\n            //         address: god.currentChain.HomeAMB.address,\r\n            //         topics: [god.currentChain.AffirmationCompletedTopic]\r\n            //     }\r\n            //     gnosisProvider.on(completionFilter, async (event) => {\r\n            //       if ( event.topics[3] == L1MessageId ) {\r\n            //         god.setLoadingText(lang.t('update.info'));\r\n            //         if(!god.isRegistered) {\r\n            //           await god.checkRegistration(god.myAddress);\r\n            //         }\r\n            //         await god.checkCommitmentAndNullifer();\r\n            //         god.setLoadingView(false);\r\n            //         hooks.waitLoading({ msg: lang.t('notification'), confirmText: lang.t('deposit.success') });\r\n            //       }\r\n            //     })\r\n\r\n            //   });\r\n            }}\r\n          />\r\n        })\r\n      } \r\n      {/* head */}\r\n    </Wrapper>\r\n    </div>\r\n  );\r\n});\r\n","import isMobile from 'ismobilejs';\r\nconst Utility = {\r\n\tisInMobile: function () {\r\n\t\treturn isMobile(navigator.userAgent).any\r\n\t},\r\n\tisIoPayMobile: function () {\r\n\t\treturn navigator.userAgent && (navigator.userAgent.includes(\"IoPayAndroid\") || navigator.userAgent.includes(\"IoPayiOs\"));\r\n\t},\r\n\r\n\ttoFixString: function (str, length) {\r\n\t\tif (str && str.length > length) {\r\n\t\t\treturn str.substr(0, length) + '...'\r\n\t\t} else {\r\n\t\t\treturn str\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Utility\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\n\r\nexport const TextButton = observer((props) => {\r\n  return (\r\n    <a\r\n      href={props.url}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      onClick={props.onClick}\r\n      className=\"textButton\"\r\n      style={{ fontSize: props.small ? '14px' : 'none', display: 'block' }}\r\n    >\r\n      {props.text}\r\n    </a>\r\n  );\r\n});\r\n\r\nexport default TextButton;\r\n","import BigNumber from 'bignumber.js';\r\nimport React, { useEffect } from 'react';\r\nimport Utility from '../Utility';\r\nimport { toast } from 'react-toastify';\r\nimport TextButton from './TextButton';\r\nimport { useStore } from '../store';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\nimport { Popconfirm } from 'antd';\r\nimport axios from 'axios';\r\n\r\nlet clipboardy = null;\r\n\r\nexport const TransactionRecord = observer(props => {\r\n  const { lang, base, god: pageStore } = useStore();\r\n  const store = useLocalStore(\r\n    props => ({\r\n      formatAmount(str) {\r\n        return new BigNumber(str)\r\n          .dividedBy(Math.pow(10, 18))\r\n          .toFixed(6)\r\n          .toString();\r\n      },\r\n\r\n      onClickRemoveButton(id) {\r\n        // console.log(id);\r\n        props.removeTransactionRecord(id);\r\n      },\r\n\r\n      onClickCopyButton(id) {\r\n        if (clipboardy) {\r\n          clipboardy.value = props.data[id].note;\r\n          clipboardy.focus();\r\n          clipboardy.select();\r\n          const result = document.execCommand('copy');\r\n          if (result === 'unsuccessful') {\r\n            console.error(lang.t('check.note.fail'));\r\n          } else {\r\n            toast.dark(lang.t('check.note.copied'), {\r\n              position: 'bottom-center',\r\n              autoClose: 3000,\r\n              hideProgressBar: true,\r\n              closeOnClick: false,\r\n              pauseOnHover: false,\r\n              draggable: false,\r\n              progress: undefined\r\n            });\r\n          }\r\n        }\r\n      },\r\n\r\n      showStatus(idOfStatus) {\r\n        switch (idOfStatus) {\r\n          case 0:\r\n            return lang.t('waiting.for.receipt');\r\n\r\n          case 1:\r\n            return lang.t('Deposited');\r\n\r\n          case 2:\r\n            return lang.t('Sending');\r\n\r\n          case 3:\r\n            return lang.t('Spent');\r\n        }\r\n      },\r\n    }),\r\n    props,\r\n  );\r\n  useEffect(() => {\r\n    let deposits = [];\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.post(pageStore.CurrentSet.relayer + '/v1/getNumofSubsequents', deposits, {});\r\n        const { result } = response.data;\r\n        // console.log('result', result);\r\n        props.data.map((deposit, index) => {\r\n          deposit.subsequent = result[index];\r\n        });\r\n      } catch(error) {\r\n        // console.log('error');\r\n        throw new Error(\"Error\");\r\n      };\r\n    }\r\n        \r\n    if(props.data && props.data.length > 0) {\r\n      props.data.map((deposit) => {\r\n        deposits.push({id: deposit.amountCoin, commitment: deposit.commitment});\r\n      });\r\n      // console.log('deposits', deposits);\r\n      fetchData()\r\n    }\r\n\t}, [props.data])\r\n \r\n    return (\r\n    <>\r\n      {props.data && props.data.length > 0 && (\r\n        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <div className=\"borderedView\" style={{ overflowX: 'auto', width: '90%', height: '100%', maxWidth: '942px', marginTop: '-30px' }}>\r\n            <div className=\"table\">\r\n              <div className=\"tr box boxheader-tx\">\r\n                <div className=\"td\">\r\n                  {lang.t('time.passed')}\r\n                </div>\r\n\r\n                {/* {God.isBSC && <div className=\"td\">{lang.t('Pool')}</div>} */}\r\n\r\n                <div className=\"td\">\r\n                  {lang.t('amount')}\r\n                </div>\r\n              \r\n                <div className=\"td\">\r\n                  {lang.t('subsequent.deposits')}\r\n                </div>\r\n               \r\n\r\n                <div className=\"td\">{lang.t('tx.hash')}</div>\r\n                <div className=\"td\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                  <InfoCircleOutlined data-tip=\"status-tips\" data-for=\"status-tips\" style={{ marginRight: '2px' }} />\r\n                  <ReactTooltip\r\n                    place=\"top\"\r\n                    type=\"warning\"\r\n                    id=\"status-tips\"\r\n                    effect=\"solid\"\r\n                    backgroundColor=\"#45bcb8\"\r\n                    delayHide={500}\r\n                  >\r\n                    {lang.t('status_warning')}\r\n                  </ReactTooltip>\r\n                  {lang.t('status')}\r\n                </div>\r\n              </div>\r\n\r\n              {props.data.map((item, index) => (\r\n                <div className=\"tr box box-tx\" key={item.txHash} >\r\n                  <div className=\"td\" style={{padding: 0, display: 'flex', width: '135px'}}>\r\n                    <div className='headerBar'></div>\r\n                    <div style={{padding: '20px 0px 20px 10px'}}>{item.createTime && base.timeAgo.format(new Date(item.createTime))}</div>\r\n                  </div>\r\n\r\n                  <div className=\"td\">\r\n                    <div> { item.tokenSymbol ? item.amountToken + ' ' + item.tokenSymbol : item.amountCoin + ' ' + pageStore.currentChain.Coin.symbol} </div>\r\n                  </div> \r\n\r\n                  <div className=\"td\">\r\n                    {item.subsequent > 0 ? item.subsequent : 'no'}&nbsp;{lang.t('deposits')}\r\n                  </div>\r\n\r\n                  <div className=\"td\">\r\n                    <a\r\n                      href={\r\n                        `${pageStore.currentChain.explorerURL}/tx/` + item.txHash\r\n                      }\r\n                      className=\"colorfulA\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {Utility.toFixString(item.txHash, 10)}\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"td\">{store.showStatus(item.status)}</div>\r\n                  <div className=\"td\" style={{padding: '20px 0px 20px 0px'}}>\r\n                    <button\r\n                      onClick={() => {\r\n                        store.onClickCopyButton(index);\r\n                      }}\r\n                      className=\"imageButton\"\r\n                      style={{\r\n                        backgroundColor: 'rgb(108, 222, 212)',\r\n                        color: 'black',\r\n                        borderRadius: '5px',\r\n                        fontWeight: 'bold',\r\n                        display: 'flex',\r\n                        flexDirection: 'row'\r\n                      }}\r\n                    >\r\n                      <img src=\"/images/copyicon.png\" alt=\"Copy Button\" />\r\n                      <span>{lang.t('note')}&nbsp;</span>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"td\" style={{padding: '20px 0px 20px 0px'}}>\r\n                    <Popconfirm title={lang.t('note.delte.confirm')} onConfirm={() => {\r\n                      store.onClickRemoveButton(index);\r\n                      }}>\r\n                      <button id={index} className=\"imageButton\">\r\n                        <img src=\"/images/closeicon.png\" alt=\"Remove Button\" />\r\n                      </button>\r\n                    </Popconfirm>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <input\r\n        ref={node => (clipboardy = node)}\r\n        style={{\r\n          width: '1px',\r\n          height: '1px',\r\n          border: 'none',\r\n          backgroundColor: 'transparent',\r\n          padding: 0,\r\n          fontSize: '3px'\r\n        }}\r\n        defaultValue={props.note}\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default TransactionRecord;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { useStore } from '../../../store';\r\n\r\nimport { TransactionRecord } from '../../../components/TransactionRecord';\r\n\r\n\r\nexport const TransactionLog = observer((props) => {\r\n  const { transaction, god } = useStore();\r\n  \r\n  return (\r\n    <div style={{ display: props.isChosen? 'block' : 'none' }}>\r\n      {\r\n        god.isPublicInfoLoaded && god.isPrivateInfoLoaded &&\r\n          <TransactionRecord\r\n              data = { transaction.currentTransactions }\r\n              removeTransactionRecord = {(id) => {\r\n                // console.log('id', id);\r\n                // console.log('transaction.currentTransactions[id]', transaction.currentTransactions[id]);\r\n                transaction.removeTransaction(transaction.currentTransactions[id]);\r\n              }}\r\n          />\r\n      }\r\n    </div>\r\n  );\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { Wrapper, Icon, FlexBox, Text, BorderBox, Button, Section, DropBox } from '../../../modules/globalStyle';\r\nimport { useStore } from '../../../store';\r\nimport { LpMiningHeader } from '../../../components/LpMiningHeader';\r\nimport { TransferView } from '../../../components/TransferView';\r\nimport axios from 'axios';\r\nimport { generateTxData } from '../../../store/lib/GetLog';\r\nimport { JsonRpcProvider } from '@ethersproject/providers';\r\nimport { hooks } from '../../../lib/hooks';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nlet currentStatusId = null;\r\n\r\nexport const Transfer = observer((props) => {\r\n  const { lang, god, dev, base } = useStore();\r\n\r\n  function getStatus(id, relayerURL, options) {\r\n    return new Promise((resolve) => {\r\n      async function getRelayerStatus() {\r\n        if( currentStatusId != id || !currentStatusId)\r\n          return;\r\n        const responseStatus = await axios.get(relayerURL + '/v1/transfer/jobs/' + id, options);\r\n  \r\n        if (responseStatus.status === 200) {\r\n          const { txHash, status, confirmations, failedReason } = responseStatus.data;\r\n\r\n          const msg = lang.t('viaRelayer1') + '#' + lang.t('confirm.block', {num: (confirmations ? confirmations: '0'), total: 3});\r\n          god.setLoadingText(msg);\r\n\r\n          // god.setLoadingText(`Transaction status ${status}, confirmations: ${confirmations ? confirmations: '0'}`);\r\n          \r\n          // console.log(`Current job status ${status}, confirmations: ${confirmations}`);\r\n  \r\n          if (status === 'FAILED') {\r\n            throw new Error(status + ' failed reason:' + failedReason);\r\n          }\r\n  \r\n          if (status === 'CONFIRMED') {\r\n            const receipt = await waitForTxReceipt({ txHash });\r\n            // console.log(\r\n            //   `Transaction submitted through the relay. View transaction on block explorer ${txHash}`\r\n            // );\r\n            // console.log('Transaction mined in block', receipt.blockNumber);\r\n            resolve(status);\r\n          }\r\n        }\r\n  \r\n        setTimeout(() => {\r\n          getRelayerStatus(id, relayerURL);\r\n        }, 3000)\r\n      }\r\n  \r\n      getRelayerStatus();\r\n    })\r\n  }\r\n\r\n  function waitForTxReceipt({ txHash, attempts = 60, delay = 1000 }) {\r\n    return new Promise((resolve, reject) => {\r\n      const checkForTx = async (txHash, retryAttempt = 0) => {\r\n        let provider = new JsonRpcProvider(god.currentChain.gnosisRpcUrl);\r\n        const result = await provider.getTransactionReceipt(txHash);\r\n        if (!result || !result.blockNumber) {\r\n          if (retryAttempt <= attempts) {\r\n            setTimeout(() => checkForTx(txHash, retryAttempt + 1), delay);\r\n          } else {\r\n            reject(new Error('tx was not mined'));\r\n          }\r\n        } else {\r\n          resolve(result);\r\n        }\r\n      }\r\n      checkForTx(txHash);\r\n    })\r\n}\r\n\r\n  const store = useLocalStore(() => ({\r\n    isTransactionSent: false,\r\n    confirmedBlocks: 0\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if(store.isTransactionSent) {\r\n      god.setLoadingText(lang.t('confirm.block', {num: store.confirmedBlocks, total: god.currentChain.L1FinalizationRate}));\r\n    }\r\n  }, [store.confirmedBlocks]);\r\n\r\n  return (\r\n    <div style={{ display: props.isChosen? 'block' : 'none' }}>\r\n    <Wrapper>\r\n      <LpMiningHeader />\r\n      {/* {god.AeolusV2 && <LpMining aeolus={god.AeolusV2} />} */}\r\n      {/* <LpMining aeolus={god.Aeolus} /> */}\r\n      {/* <div style={store.isShowDetail1 ? {background: '#0000006e'} : {}}>\r\n        <TokenTab\r\n          tokenSymbol={god.currentChain.Coin.symbol}\r\n          tabName={god.currentChain.Coin.symbol}\r\n          onSelectTab={() => {\r\n            if (!god.isOnProgress && god.isPublicInfoLoaded && god.isPrivateInfoLoaded)\r\n              store.isShowDetail1 = !store.isShowDetail1;\r\n          }}\r\n          isShowDetail={store.isShowDetail1}\r\n        />\r\n      </div> */}\r\n      {\r\n        god.currentChain.poolList.map((pool) => {\r\n          return god.currentPoolIndex && <TransferView\r\n            indexOfPool={pool.id}\r\n            chainID={god.currentChain.chainId}\r\n            onDeposit={async (depositAmount, recipientPubKey, feeAmount) => {\r\n\r\n            let idx = 0;\r\n\r\n            let sumBalance = new BigNumber(0);\r\n            let inputCommitments = [];\r\n            let myUtxoArr = god.CurrentSet.utxoList;\r\n\r\n            console.log('myUtxoArr', myUtxoArr);\r\n            myUtxoArr.map((utxo) => {\r\n              console.log(utxo.amount.toString());\r\n            })\r\n\r\n            while(sumBalance.comparedTo(depositAmount) < 0) {\r\n              if(myUtxoArr[idx].amount.gt(0)) {\r\n                sumBalance = sumBalance.plus(myUtxoArr[idx].amount);\r\n                inputCommitments.push(myUtxoArr[idx].commitment);\r\n              }\r\n              idx ++;\r\n            }\r\n\r\n            const restAmount = sumBalance.minus(depositAmount);\r\n\r\n            let outputData = [];\r\n\r\n            if(restAmount.gt(0)) {\r\n              outputData.push({amount: restAmount, pubKey: god.myPublicKey});\r\n            }\r\n\r\n            const transferAmount = depositAmount.minus(feeAmount);\r\n            outputData.push({amount: transferAmount, pubKey: recipientPubKey});\r\n\r\n            god.setLoadingText(lang.t('Loading.text4'));\r\n            god.setLoadingView(true);\r\n\r\n            currentStatusId = undefined;\r\n            const relayerStatus = await axios.get(god.CurrentSet.relayer + '/v1/statusTransfer');\r\n            const { relayer } = relayerStatus.data;\r\n            console.log('inputCommitments', inputCommitments);\r\n            console.log('outputData', outputData);\r\n            console.log('relayer', relayer);\r\n            const response = await axios.post(god.CurrentSet.relayer + '/v1/submitTransferTX', {input: inputCommitments, output: outputData, key: god.myPrivteKey, fee: feeAmount.toString(), relayer: relayer}, {});\r\n\r\n            god.setLoadingText(lang.t('viaRelayer1'));\r\n\r\n            const { id } = response.data;\r\n            currentStatusId = id;\r\n            await getStatus(id, god.CurrentSet.relayer, {});\r\n\r\n            currentStatusId = undefined;\r\n\r\n            god.setLoadingText(lang.t('update.info'));\r\n            await god.checkCommitmentAndNullifer(god.CurrentSet);\r\n\r\n            myUtxoArr = god.CurrentSet.utxoList;\r\n\r\n            console.log('myUtxoArr', myUtxoArr);\r\n            myUtxoArr.map((utxo) => {\r\n              console.log(utxo.amount.toString());\r\n            })\r\n\r\n            god.setLoadingView(false);\r\n\r\n            hooks.waitLoading({ msg: lang.t('notification'), confirmText: lang.t('transfer.success') });\r\n\r\n            // response = await axios.post(god.CurrentSet.relayer + '/v1/getProofData', { amount: depositAmount.toString(), key: privateKey });\r\n            // res = response.data;\r\n            // const {args, extData} = res;\r\n\r\n            // console.log('args', args);\r\n            // console.log('extData', extData);\r\n\r\n            // txData = await generateTxData(ETHMainnetConfig.HorizonPool, ETHMainnetConfig.gnosisRpcUrl, ETHMainnetConfig.BridgeToken, args, extData, depositAmount);\r\n              \r\n            //   god.setLoadingText(lang.t('Loading.text4'));\r\n            //   god.setLoadingView(true);\r\n              \r\n            //   let response = await axios.post(god.CurrentSet.relayer + '/v1/getProofData', { amount: depositAmount.toString(), key: god.myPrivteKey });\r\n            //   let res = response.data;\r\n            //   const {args, extData} = res;\r\n\r\n            //   console.log('depositAmount.toString()', depositAmount.toString());\r\n            //   console.log('args', args);\r\n            //   console.log('extData', extData);\r\n\r\n            //   const txData = generateTxData(args, extData);\r\n\r\n            //   god.setLoadingText(lang.t('send.transaction'));\r\n\r\n            //   let txInstance;\r\n            //   try {\r\n            //     txInstance = await god.deposit({amount: depositAmount, data: txData});\r\n            //     store.isTransactionSent = true;\r\n            //   } catch (error) {\r\n            //     god.setLoadingView(false);\r\n            //     store.isTransactionSent = false;\r\n            //     throw new Error(\"Error while depositing\");\r\n            //   }\r\n\r\n            //   const provider = new JsonRpcProvider(god.currentChain.rpcUrl);\r\n\r\n            //   const handler = async (blockNumber) => {\r\n            //     console.log(blockNumber);\r\n            //     let receipt = await provider.getTransactionReceipt(txInstance.hash);\r\n            //     if(receipt)\r\n            //       store.confirmedBlocks = receipt.confirmations;\r\n            //     else\r\n            //       store.confirmedBlocks = 0;\r\n            //   }\r\n\r\n            //   provider.on(\"block\", handler);\r\n              \r\n            //   await txInstance.wait(god.currentChain.L1FinalizationRate ).then((receipt) => {\r\n            //     store.isTransactionSent = false;\r\n            //     provider.removeListener(\"block\", handler);\r\n            //     god.setLoadingText(lang.t('send.bridge'));\r\n\r\n            //     let L1MessageId;\r\n            //     console.log('receipt.logs', receipt.logs);\r\n            //     receipt.logs.map((log) => {\r\n            //       if(log.topics.length) {\r\n            //         if(log.topics[0] == god.currentChain.userRequestTopic)\r\n            //         L1MessageId = log.topics[1];\r\n            //       }\r\n            //     });\r\n            //     console.log('messageId', L1MessageId);\r\n\r\n            //     const gnosisProvider = new JsonRpcProvider(god.currentChain.gnosisRpcUrl);\r\n\r\n            //     const completionFilter = {\r\n            //         address: god.currentChain.HomeAMB.address,\r\n            //         topics: [god.currentChain.AffirmationCompletedTopic]\r\n            //     }\r\n            //     gnosisProvider.on(completionFilter, async (event) => {\r\n            //       if ( event.topics[3] == L1MessageId ) {\r\n            //         god.setLoadingText(lang.t('update.info'));\r\n            //         if(!god.isRegistered) {\r\n            //           await god.checkRegistration(god.myAddress);\r\n            //         }\r\n            //         await god.checkCommitmentAndNullifer();\r\n            //         god.setLoadingView(false);\r\n            //         hooks.waitLoading({ msg: lang.t('notification'), confirmText: lang.t('deposit.success') });\r\n            //       }\r\n            //     })\r\n\r\n            //   });\r\n            }}\r\n          />\r\n        })\r\n      } \r\n      {/* head */}\r\n    </Wrapper>\r\n    </div>\r\n  );\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { Wrapper, Button, FlexBox, Text, antdPopoverStyle, Icon } from '../../modules/globalStyle';\r\nimport { css, styled } from '../../modules/index';\r\nimport { HomeTop } from './Top/index';\r\nimport { CycFooter } from '../../components/CycFooter';\r\nimport { OnLoading } from '../../components/OnLoading/index';\r\nimport { useStore } from '../../store';\r\nimport { eventBus } from '../../lib/event';\r\nimport { WalletInfo } from '../../components/WalletInfo';\r\nimport { CheckNote } from '../../components/CheckNote';\r\nimport { Deposit } from './Deposit/index';\r\nimport { Withdraw } from './Withdraw/index';\r\nimport { TransactionLog } from './TransactionRecord/index';\r\nimport { Badge, Popover } from 'antd';\r\nimport { Transfer } from './Transfer/index';\r\n\r\nconst SwitchItem = styled('div', {\r\n  width: 24,\r\n  height: 24,\r\n  lineHeight: '24px',\r\n  cursor: 'pointer',\r\n  '.name': {\r\n    textAlign: 'center'\r\n  },\r\n  variants: {\r\n    bg: {\r\n      active: {\r\n        backgroundColor: '$primaryOpacity'\r\n      },\r\n      normal: {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const HomePage = observer(() => {\r\n  antdPopoverStyle();\r\n  const { lang, base, transaction, setting } = useStore();\r\n  const [tabKey, setTabKey] = useState(1);\r\n\r\n  const store = useLocalStore(() => ({\r\n    get tabConfig() {\r\n      return [\r\n        { name: lang.t('Deposit'), id: 1 },\r\n        { name: lang.t('Transfer'), id: 2 },\r\n        { name: lang.t('Withdraw'), id: 3 },\r\n\r\n        // { name: lang.t('note'), id: 3, count: transaction.currentTransactions.length }\r\n      ];\r\n    },\r\n\r\n    toggleSwtich() {\r\n      setting.approveMax.save(!setting.approveMax.value);\r\n    }\r\n  }));\r\n\r\n  return (\r\n    <div\r\n      className={styles.home.className}\r\n      style={{ overflow: base.pendingPool.visible ? 'hidden' : 'auto', height: base.pendingPool.visible ? '100vh' : 'auto' }}\r\n    >\r\n      {/* top header content */}\r\n      <HomeTop />\r\n\r\n      <article className={styles.homeContent.className} style={{ flex: 1 }}>\r\n        {/* Deposit  Withdraw  Note*/}\r\n        <Wrapper css={{ mt: '2.5rem', mb: '3.75rem', '@md': { mb: '4rem' } }}>\r\n          <FlexBox justify=\"between\" responsive=\"rc\" css={{ alignItems: 'stretch', '@md': { alignItems: 'center' } }}>\r\n            <FlexBox css={{ mb: '2.5rem', '@md': { mb: 0 } }}>\r\n              {store.tabConfig.map((item) => {\r\n                return (\r\n                  <Button\r\n                    key={item.name}\r\n                    size=\"medium\"\r\n                    responsive=\"medium\"\r\n                    color={tabKey == item.id ? 'active' : 'normal'}\r\n                    onClick={() => setTabKey(item.id)}\r\n                  >\r\n                    <span>{item.name} </span>\r\n                    {item.count > 0 && <span>({item.count})</span>}\r\n                  </Button>\r\n                );\r\n              })}\r\n            </FlexBox>\r\n            <FlexBox justify=\"end\" items=\"center\" css={{ mb: '3rem', paddingTop: '50px' }}>\r\n              <Text size=\"small\" color=\"light\" cursor=\"none\" align=\"right\">\r\n                {lang.t('use.max.approve')}\r\n              </Text>\r\n              <FlexBox justify=\"between\" css={{ border: '1px solid $borderPrimary', width: '54px', height: '28px', ml: '1rem', px: '1px' }}>\r\n                <SwitchItem bg={setting.approveMax.value ? 'active' : 'normal'} onClick={store.toggleSwtich}>\r\n                  <Text color={setting.approveMax.value ? 'primary' : 'light'} size=\"mini\" className=\"name\" cursor=\"pointer\">\r\n                    On\r\n                  </Text>\r\n                </SwitchItem>\r\n                <SwitchItem bg={setting.approveMax.value ? 'normal' : 'active'} onClick={store.toggleSwtich}>\r\n                  <Text color={setting.approveMax.value ? 'light' : 'primary'} size=\"mini\" className=\"name\" cursor=\"pointer\">\r\n                    Off\r\n                  </Text>\r\n                </SwitchItem>\r\n              </FlexBox>\r\n            </FlexBox>\r\n            {/* <FlexBox items=\"start\" css={{ justifyContent: 'flex-end', '@md': { justifyContent: 'flex-start' } }}>\r\n              <Text size=\"small\" color=\"primary\" cursor=\"none\" align=\"right\">\r\n                {lang.t('yourIp')}: {base.ip} <br /> {base.geo}\r\n              </Text>\r\n              <Popover\r\n                placement=\"top\"\r\n                trigger=\"hover\"\r\n                content={\r\n                  <Text size=\"md\" color=\"white\" css={{ width: 200 }}>\r\n                    {lang.t('yout.ip.tips')}\r\n                  </Text>\r\n                }\r\n              >\r\n                <Icon src=\"/images/home/info_icon.png\" css={{ ml: '0.8rem' }} />\r\n              </Popover>\r\n            </FlexBox> */}\r\n          </FlexBox>\r\n        </Wrapper>\r\n\r\n        {/* chain tab */}\r\n        {/* <ChainNav /> */}\r\n\r\n       <Deposit isChosen={tabKey == 1} /> \r\n       <Transfer isChosen={tabKey == 2} />\r\n       <Withdraw isChosen={tabKey == 3} />\r\n\r\n        {/* onLoading */}\r\n        <OnLoading\r\n          visible={base.loading.visible}\r\n          confirmText={base.loading.confirmText}\r\n          showLoading={base.loading.showLoading}\r\n          showConfirm={base.loading.showConfirm}\r\n          text={base.loading.msg}\r\n          showCancel={base.loading.showCancel}\r\n          close={() => base.closeLoading()}\r\n          onConfirm={() => eventBus.emit('loading.confirm')}\r\n          onCancel={() => eventBus.emit('loading.cancel')}\r\n        />\r\n        {base.pendingPool.visible && (\r\n          <CheckNote\r\n            visible={base.pendingPool.visible}\r\n            note={base.pendingPool.note}\r\n            close={() => eventBus.emit('pendingPool.cacel')}\r\n            onConfirm={() => eventBus.emit('pendingPool.confirm')}\r\n            onCancel={() => eventBus.emit('pendingPool.cacel')}\r\n          />\r\n        )}\r\n        {/* WaleltInfo */}\r\n        <WalletInfo />\r\n      </article>\r\n      <CycFooter />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst styles = {\r\n  home: css({\r\n    minHeight: '100vh',\r\n    backgroundImage: `url(/images/home/backgroundImage.png)`,\r\n    fontFamily: 'IBM Plex Sans',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    'position': 'relative',\r\n    'background-repeat': 'repeat',\r\n    'background-position': '50% 50%',\r\n    'background-size': 'cover',\r\n  }),\r\n  homeContent: css({\r\n    padding: '0 0 10rem 0'\r\n  })\r\n};\r\n","import React from 'react';\r\nimport { styled } from '../../modules/index';\r\nimport { Icon, Text, FlexBox } from '../../modules/globalStyle';\r\nimport { DialogWrapper } from '../Dialog/index';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { useStore } from '../../store/index';\r\nimport { injectedConnector, walletconnectConnector } from '../../lib/web3-react-bsc';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { hooks } from '../../lib/hooks';\r\n\r\nconst WalletBox = styled('div', {\r\n  padding: '1.5rem 0 0.5rem 0',\r\n  borderTop: '1px solid $borderPrimary',\r\n  borderBottom: '1px solid $borderPrimary'\r\n});\r\n\r\nconst WalletItem = styled('div', {\r\n  backgroundColor: '$bg1',\r\n  p: '1rem',\r\n  mb: '1rem'\r\n});\r\n\r\nfunction getIsMetaMask(): boolean {\r\n  return window.ethereum?.isMetaMask ?? false\r\n}\r\n\r\nfunction getIsMetaMaskBrowser(): boolean {\r\n  return isMobile && getIsMetaMask();\r\n}\r\n\r\nexport const EthConnectWallet = observer(() => {\r\n  const { god, lang } = useStore();\r\n  const { activate, error, deactivate } = useWeb3React();\r\n\r\n  const store = useLocalStore(() => ({\r\n    get visible() {\r\n      return god.eth.connector.showConnector;\r\n    },\r\n    close() {\r\n      god.eth.connector.showConnector = false;\r\n    },\r\n    connectInejct() {\r\n      activate(injectedConnector);\r\n      god.eth.connector.latestProvider.save('inject');\r\n    },\r\n    connectWalletConnect() {\r\n      activate(walletconnectConnector);\r\n      god.eth.connector.latestProvider.save('walletconnect');\r\n    },\r\n    connectWithKey() {\r\n      this.close();\r\n      hooks.waitPendingPool();\r\n    },\r\n  }));\r\n\r\n  const content = (\r\n    <WalletBox>\r\n      { ( !isMobile || getIsMetaMaskBrowser() ) &&\r\n        <WalletItem onClick={store.connectInejct} css={{ cursor: 'pointer' }} >\r\n          <FlexBox justify=\"between\" >\r\n            <Text size=\"small\" weight=\"semibold\" color=\"white\" css={{ cursor: 'pointer' }}>\r\n              {lang.t('metamask')}\r\n            </Text>\r\n            <Icon src=\"/images/metamask.svg\"></Icon>\r\n          </FlexBox>\r\n        </WalletItem>\r\n      }\r\n      { \r\n      <WalletItem onClick={store.connectWithKey} css={{ cursor: 'pointer' }}  >\r\n        <FlexBox justify=\"between\" >\r\n          <Text size=\"small\" weight=\"semibold\" color=\"white\" css={{ cursor: 'pointer' }}>\r\n            {lang.t('shielded.key')}\r\n          </Text>\r\n          <Icon src=\"/images/key.svg\"></Icon>\r\n        </FlexBox>\r\n      </WalletItem>\r\n      }\r\n    </WalletBox>\r\n  );\r\n  return <DialogWrapper title={lang.t('connect.to.wallet')} size=\"base\" content={content} visible={store.visible} close={store.close} />;\r\n});","import React, { useEffect } from 'react';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { HomePage } from '.';\r\nimport { Provider } from '@iotexproject/ethers-multicall';\r\nimport { useStore } from '../../store/index';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { injectedConnector, walletconnectConnector } from '../../lib/web3-react-bsc';\r\nimport { EthConnectWallet } from '../../components/EthConnectWallet';\r\nimport { eventBus } from '../../lib/event';\r\nimport { metamaskUtils } from '../../utils/metamaskUtils';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { ETHMainnetConfig } from '../../config/ETHMainConfig';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { ethers } from 'ethers';\r\nimport axios from 'axios';\r\nimport { getKeypairLog, getCommitmentAndNullifierLog, generateTxData, getUserSignatureLog, getSignatures } from '../../store/lib/GetLog';\r\nimport BigNumber from 'bignumber.js';\r\nimport ModalView from '../../components/ModalView';\r\nimport Loading from '../../components/Loading';\r\nimport { hooks } from '../../lib/hooks';\r\n\r\nexport const Mainnet = observer(() => {\r\n  const { god, base, lang } = useStore();\r\n  const { chainId, account, activate, active, library, deactivate } = useWeb3React<Web3Provider>();\r\n  const history = useHistory();\r\n\r\n  const store = useLocalStore(() => ({\r\n    logout() {\r\n      deactivate();\r\n      god.eth.connector.latestProvider.clear();\r\n      god.clearAccountInfo();\r\n\r\n      god.currentNetwork.account = null;\r\n    },\r\n    async generatePrivateKey(address) {\r\n      const msgParams = [\r\n        {\r\n          type: 'string',\r\n          name: 'Message',\r\n          value: 'Sign this message to generate your Messier Horizon Privacy Key. This key lets the application decrypt your balance in Messier Horizon.\\n\\nIMPORTANT: Signing this message doesn\\'t give Horizon access to your cryptocurrencies.',\r\n        }\r\n      ];\r\n      const from = address;\r\n      const sign = await window.ethereum.request({\r\n        method: 'eth_signTypedData',\r\n        params: [msgParams, from],\r\n      });\r\n      const hash = ethers.utils.keccak256(sign);\r\n      return hash;\r\n    }\r\n  }));\r\n  useEffect(() => {\r\n    const doNecessary = async () => {\r\n      god.currentNetworkName = 'eth';\r\n\r\n      god.currentNetwork.chainId = ETHMainnetConfig.chainId;\r\n\r\n      if(god.currentChain.poolList.length > 0)\r\n        god.currentPoolIndex = god.currentChain.poolList[0].id;\r\n      \r\n      if (chainId) {\r\n        if (god.currentNetwork.allowChains.includes(chainId)) {\r\n          if(chainId != ETHMainnetConfig.chainId) {\r\n            god.currentPoolIndex = null;\r\n            deactivate();\r\n            god.eth.connector.latestProvider.clear();\r\n            god.clearAccountInfo();\r\n            if(god.currentNetwork.account) {\r\n              while(chainId) {\r\n                await new Promise(r => setTimeout(r, 500));\r\n              }\r\n            }\r\n            god.currentNetwork.account = null;\r\n            history.push(god.currentNetwork.chains[chainId].path);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      let depositAmount = new BigNumber(10).pow(15);\r\n\r\n      let txData, myPubkey;\r\n\r\n      const initializeAccount = () => {\r\n        god.currentNetwork.account = account;\r\n        god.currentNetwork.web3 = library;\r\n        //@ts-ignore\r\n        god.eth.ethers = library ? library : god.eth.defaultEthers;\r\n        god.eth.signer = library ? library.getSigner() : null;\r\n\r\n        //@ts-ignore\r\n        god.eth.multiCall = new Provider(god.eth.ethers);\r\n        //@ts-ignore\r\n        if (!god.eth.multiCall._multicallAddress) {\r\n          //@ts-ignore\r\n          god.eth.multiCall._multicallAddress = god.Multicall.address;\r\n        }\r\n\r\n        if (account) {\r\n          god.setShowConnecter(false);\r\n          god.loadBalance();\r\n          god.loadPublichData();\r\n        }\r\n        if(account) {\r\n          // god.deposit({L1HelperContract: ETHMainnetConfig.L1Helper, HorizonPoolAddress: ETHMainnetConfig.HorizonPool.address, amount: depositAmount, data: txData});\r\n          // god.register({L1HelperContract: ETHMainnetConfig.L1Helper, address: account, publicKey: myPubkey});\r\n        }\r\n      }\r\n\r\n      if(account) {\r\n        if( god.currentNetwork.account && god.currentNetwork.account != account ) {\r\n          if(god.myAddress != account && god.loginType == \"metamask\") { // Metamask login\r\n            const isOkay = await hooks.waitModal({title: lang.t('notification'), msg: lang.t('request.switch')});\r\n            if(!isOkay) {\r\n              if(!god.isRegistered) {\r\n                store.logout();\r\n              }\r\n              else {\r\n                initializeAccount();\r\n                base.startRefetchForce();\r\n              }\r\n              return;\r\n            }\r\n          }\r\n          if(god.loginType == \"key\") {\r\n            initializeAccount();\r\n            base.startRefetchForce();\r\n            return;\r\n          }\r\n        }\r\n        try {\r\n            god.connectingStatus = 'signing';\r\n            if((!god.myAddress || god.loginType == \"metamask\") && god.myAddress != account ) {\r\n              let privateKey = await store.generatePrivateKey(account);\r\n              console.log('privateKey', privateKey);\r\n              god.clearAccountInfo();\r\n              god.loginType = \"metamask\";\r\n              god.myAddress = account;\r\n              god.myPrivteKey = privateKey;\r\n              god.setLoadingText(lang.t('horizon.connect'));\r\n              god.setLoadingView(true);\r\n              await god.checkRegistration(account);\r\n              god.currentNetwork.account = account;\r\n              if(!god.isRegistered) {\r\n                base.downloadShieldedKey(account, privateKey);\r\n              }\r\n              else {\r\n                god.setLoadingText(lang.t('Loading.text9'));\r\n\r\n                await Promise.all(god.currentChain.poolList.map( async (pool) => {\r\n                  await god.checkCommitmentAndNullifer(pool);\r\n                }));\r\n              }\r\n              god.setLoadingView(false);\r\n            }\r\n            god.connectingStatus = 'idle';\r\n\r\n            // let sumBalance = new BigNumber(0);\r\n            // const transferAmount = new BigNumber('150000000000000');\r\n            // const withdrawAmount = new BigNumber('1000000000000');\r\n            // const recipient = '0xe0D5af7FEd599707933380657a0F75B6aD47C2a5';\r\n            // myUtxoArr = myUtxoArr.sort((a, b) => new BigNumber(a.amount.hex).comparedTo(new BigNumber(b.amount.hex))).map((e) => {return {amount: new BigNumber(e.amount.hex), commitment: e._commitment.hex}});\r\n            // console.log(myUtxoArr);\r\n            // let inputCommitments = [];\r\n            // myUtxoArr.map((utxo) => {\r\n            //   sumBalance = sumBalance.plus(utxo.amount);\r\n            // });\r\n\r\n            // const feeAmount = transferAmount.div(1000); // 0.1 %\r\n            // const totalAmount = transferAmount.plus(feeAmount);\r\n            // console.log('sumBalance.toString()', sumBalance.toString());\r\n\r\n            // sumBalance = new BigNumber(0);\r\n            // let idx = 0;\r\n            // while(sumBalance.comparedTo(totalAmount) < 0) {\r\n            //   sumBalance = sumBalance.plus(myUtxoArr[idx].amount);\r\n            //   inputCommitments.push(myUtxoArr[idx].commitment);\r\n            //   idx ++;\r\n            // }\r\n            // response = await axios.post(ETHMainnetConfig.relayer + '/v1/getAccountStatus', {address: recipient}, {});\r\n            // res = response.data;\r\n            // const recipientPubKey = res.publicKey;\r\n\r\n            // const restAmount = sumBalance.minus(totalAmount);\r\n\r\n            // let outputData = [];\r\n\r\n            // outputData.push({amount: restAmount, pubKey: myPubkey});\r\n\r\n            // outputData.push({amount: transferAmount, pubKey: recipientPubKey});\r\n\r\n            // await axios.post(ETHMainnetConfig.relayer + '/v1/submitTransferTX', {input: inputCommitments, output: outputData, key: privateKey, fee: feeAmount.toString(), recipient: recipient}, {});\r\n            \r\n            // response = await axios.post(ETHMainnetConfig.relayer + '/v1/getProofData', { amount: depositAmount.toString(), key: privateKey });\r\n            // res = response.data;\r\n            // const {args, extData} = res;\r\n\r\n            // console.log('args', args);\r\n            // console.log('extData', extData);\r\n\r\n            // txData = await generateTxData(ETHMainnetConfig.HorizonPool, ETHMainnetConfig.gnosisRpcUrl, ETHMainnetConfig.BridgeToken, args, extData, depositAmount);\r\n\r\n            // const feeAmount = withdrawAmount.div(1000); // 0.1 %\r\n            // const L1feeAmount = new BigNumber('1000000000');\r\n            // const totalAmount = withdrawAmount.plus(feeAmount).plus(L1feeAmount);\r\n            // console.log('sumBalance.toString()', sumBalance.toString());\r\n\r\n            // sumBalance = new BigNumber(0);\r\n            // let idx = 0;\r\n            // while(sumBalance.comparedTo(totalAmount) < 0) {\r\n            //   sumBalance = sumBalance.plus(myUtxoArr[idx].amount);\r\n            //   inputCommitments.push(myUtxoArr[idx].commitment);\r\n            //   idx ++;\r\n            // }\r\n            // const restAmount = sumBalance.minus(totalAmount);\r\n\r\n            // let outputData = [];\r\n\r\n            // outputData.push({amount: restAmount, pubKey: myPubkey});\r\n\r\n            // await axios.post(ETHMainnetConfig.relayer + '/v1/submitWithdrawTX', {input: inputCommitments, output: outputData, key: privateKey, fee: feeAmount.toString(), recipient: recipient, l1fee: L1feeAmount.toString()}, {});\r\n\r\n            // const encodedData = await getUserSignatureLog(ETHMainnetConfig.HomeAMB, ETHMainnetConfig.gnosisRpcUrl, 23713605);\r\n            // const signatures = await getSignatures(ETHMainnetConfig.AMBBridgeHelper, ETHMainnetConfig.gnosisRpcUrl, encodedData);\r\n            \r\n            // await axios.post(ETHMainnetConfig.relayer + '/v1/submitUnwrapperTx', {msg: encodedData, signatures: signatures}, {});\r\n\r\n            // console.log('signatures', signatures);\r\n        } catch (err) {\r\n          if(!god.currentNetwork.account) {\r\n            store.logout();\r\n          }\r\n          if(god.loginType == \"metamask\") {\r\n            if(!god.isRegistered) {\r\n              store.logout();\r\n            }\r\n            initializeAccount();\r\n            base.startRefetchForce();\r\n          }\r\n          god.connectingStatus = 'idle';\r\n          return;\r\n        }\r\n      }\r\n      \r\n      initializeAccount()\r\n    }\r\n    doNecessary();\r\n  }, [god, library, chainId, account, active]);\r\n\r\n  useEffect(() => {\r\n    if (god.currentNetwork.account) {\r\n      god.loadBalance();\r\n      god.loadPublichData();\r\n    }\r\n  }, [base.refetchTimer]);\r\n\r\n  useEffect(() => {\r\n    if (activate && god.eth.connector.latestProvider.value) {\r\n      if (god.eth.connector.latestProvider.value == 'inject') {\r\n        // activate(injectedConnector);\r\n      }\r\n      if (god.eth.connector.latestProvider.value == 'walletconnect') {\r\n        // activate(walletconnectConnector);\r\n      }\r\n    }\r\n  }, [activate, god.eth.connector.latestProvider.value]);\r\n\r\n  useEffect(() => {\r\n    const doNecessary = () => {\r\n      const chain = god.eth.chains[ETHMainnetConfig.chainId];\r\n      metamaskUtils.setupNetwork({\r\n        chainId: chain.chainId,\r\n        blockExplorerUrls: [chain.explorerURL],\r\n        chainName: chain.name,\r\n        nativeCurrency: {\r\n          decimals: chain.Coin.decimals || 18,\r\n          name: chain.Coin.symbol,\r\n          symbol: chain.Coin.symbol\r\n        },\r\n        rpcUrls: [chain.baseRpcUrl]\r\n      });\r\n      // console.log('mychain', chain);\r\n      eventBus.addListener('wallet.logout', store.logout);\r\n      return () => eventBus.removeListener('wallet.logout', store.logout);\r\n    };\r\n    doNecessary();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <EthConnectWallet />\r\n      <HomePage />\r\n    </div>\r\n  );\r\n});\r\n","import React, { useEffect } from 'react';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { HomePage } from '.';\r\nimport { Provider } from '@iotexproject/ethers-multicall';\r\nimport { useStore } from '../../store/index';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { injectedConnector, walletconnectConnector } from '../../lib/web3-react-bsc';\r\nimport { EthConnectWallet } from '../../components/EthConnectWallet';\r\nimport { eventBus } from '../../lib/event';\r\nimport { metamaskUtils } from '../../utils/metamaskUtils';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { BSCMainnetConfig } from '../../config/BSCMainnetConfig';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { ethers } from 'ethers';\r\nimport axios from 'axios';\r\nimport { getKeypairLog, getCommitmentAndNullifierLog, generateTxData, getUserSignatureLog, getSignatures } from '../../store/lib/GetLog';\r\nimport BigNumber from 'bignumber.js';\r\nimport ModalView from '../../components/ModalView';\r\nimport Loading from '../../components/Loading';\r\nimport { hooks } from '../../lib/hooks';\r\n\r\nexport const Bscnet = observer(() => {\r\n  const { god, base, lang } = useStore();\r\n  const { chainId, account, activate, active, library, deactivate } = useWeb3React<Web3Provider>();\r\n  const history = useHistory();\r\n\r\n  const store = useLocalStore(() => ({\r\n    logout() {\r\n      deactivate();\r\n      god.eth.connector.latestProvider.clear();\r\n      god.clearAccountInfo();\r\n\r\n      god.currentNetwork.account = null;\r\n    },\r\n    async generatePrivateKey(address) {\r\n      const msgParams = [\r\n        {\r\n          type: 'string',\r\n          name: 'Message',\r\n          value: 'Sign this message to generate your Messier Horizon Privacy Key. This key lets the application decrypt your balance in Messier Horizon.\\n\\nIMPORTANT: Signing this message doesn\\'t give Horizon access to your cryptocurrencies.',\r\n        }\r\n      ];\r\n      const from = address;\r\n      const sign = await window.ethereum.request({\r\n        method: 'eth_signTypedData',\r\n        params: [msgParams, from],\r\n      });\r\n      const hash = ethers.utils.keccak256(sign);\r\n      return hash;\r\n    }\r\n  }));\r\n  useEffect(() => {\r\n    const doNecessary = async () => {\r\n      god.currentNetworkName = 'eth';\r\n\r\n      god.currentNetwork.chainId = BSCMainnetConfig.chainId;\r\n      \r\n      if(god.currentChain.poolList.length > 0) {\r\n        god.currentPoolIndex = god.currentChain.poolList[0].id;\r\n      }\r\n\r\n      if (chainId) {\r\n        if (god.currentNetwork.allowChains.includes(chainId)) {\r\n          if(chainId != BSCMainnetConfig.chainId) {\r\n            god.currentPoolIndex = null;\r\n            deactivate();\r\n            god.eth.connector.latestProvider.clear();\r\n            god.clearAccountInfo();\r\n            if(god.currentNetwork.account) {\r\n              while(chainId) {\r\n                await new Promise(r => setTimeout(r, 500));\r\n              }\r\n            }\r\n            god.currentNetwork.account = null;\r\n            history.push(god.currentNetwork.chains[chainId].path);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n      let depositAmount = new BigNumber(10).pow(15);\r\n\r\n      let txData, myPubkey;\r\n\r\n      const initializeAccount = () => {\r\n        god.currentNetwork.account = account;\r\n        god.currentNetwork.web3 = library;\r\n        //@ts-ignore\r\n        god.eth.ethers = library ? library : god.eth.defaultEthers;\r\n        god.eth.signer = library ? library.getSigner() : null;\r\n\r\n        //@ts-ignore\r\n        god.eth.multiCall = new Provider(god.eth.ethers);\r\n        //@ts-ignore\r\n        if (!god.eth.multiCall._multicallAddress) {\r\n          //@ts-ignore\r\n          god.eth.multiCall._multicallAddress = god.Multicall.address;\r\n        }\r\n\r\n        if (account) {\r\n          god.setShowConnecter(false);\r\n          god.loadBalance();\r\n          god.loadPublichData();\r\n        }\r\n        if(account) {\r\n          // god.deposit({L1HelperContract: ETHMainnetConfig.L1Helper, HorizonPoolAddress: ETHMainnetConfig.HorizonPool.address, amount: depositAmount, data: txData});\r\n          // god.register({L1HelperContract: ETHMainnetConfig.L1Helper, address: account, publicKey: myPubkey});\r\n        }\r\n      }\r\n\r\n      if(account) {\r\n        if( god.currentNetwork.account && god.currentNetwork.account != account ) {\r\n          if(god.myAddress != account && god.loginType == \"metamask\") { // Metamask login\r\n            const isOkay = await hooks.waitModal({title: lang.t('notification'), msg: lang.t('request.switch')});\r\n            if(!isOkay) {\r\n              if(!god.isRegistered) {\r\n                store.logout();\r\n              }\r\n              else {\r\n                initializeAccount();\r\n                base.startRefetchForce();\r\n              }\r\n              return;\r\n            }\r\n          }\r\n          if(god.loginType == \"key\") {\r\n            initializeAccount();\r\n            base.startRefetchForce();\r\n            return;\r\n          }\r\n        }\r\n        try {\r\n            god.connectingStatus = 'signing';\r\n            if((!god.myAddress || god.loginType == \"metamask\") && god.myAddress != account ) {\r\n              let privateKey = await store.generatePrivateKey(account);\r\n              console.log('privateKey', privateKey);\r\n              god.clearAccountInfo();\r\n              god.loginType = \"metamask\";\r\n              god.myAddress = account;\r\n              god.myPrivteKey = privateKey;\r\n              god.setLoadingText(lang.t('horizon.connect'));\r\n              god.setLoadingView(true);\r\n              await god.checkRegistration(account);\r\n              god.currentNetwork.account = account;\r\n              if(!god.isRegistered) {\r\n                base.downloadShieldedKey(account, privateKey);\r\n              }\r\n              else {\r\n                god.setLoadingText(lang.t('Loading.text9'));\r\n\r\n                await Promise.all(god.currentChain.poolList.map( async (pool) => {\r\n                  await god.checkCommitmentAndNullifer(pool);\r\n                }));\r\n              }\r\n              god.setLoadingView(false);\r\n            }\r\n            god.connectingStatus = 'idle';\r\n\r\n            // let sumBalance = new BigNumber(0);\r\n            // const transferAmount = new BigNumber('150000000000000');\r\n            // const withdrawAmount = new BigNumber('1000000000000');\r\n            // const recipient = '0xe0D5af7FEd599707933380657a0F75B6aD47C2a5';\r\n            // myUtxoArr = myUtxoArr.sort((a, b) => new BigNumber(a.amount.hex).comparedTo(new BigNumber(b.amount.hex))).map((e) => {return {amount: new BigNumber(e.amount.hex), commitment: e._commitment.hex}});\r\n            // console.log(myUtxoArr);\r\n            // let inputCommitments = [];\r\n            // myUtxoArr.map((utxo) => {\r\n            //   sumBalance = sumBalance.plus(utxo.amount);\r\n            // });\r\n\r\n            // const feeAmount = transferAmount.div(1000); // 0.1 %\r\n            // const totalAmount = transferAmount.plus(feeAmount);\r\n            // console.log('sumBalance.toString()', sumBalance.toString());\r\n\r\n            // sumBalance = new BigNumber(0);\r\n            // let idx = 0;\r\n            // while(sumBalance.comparedTo(totalAmount) < 0) {\r\n            //   sumBalance = sumBalance.plus(myUtxoArr[idx].amount);\r\n            //   inputCommitments.push(myUtxoArr[idx].commitment);\r\n            //   idx ++;\r\n            // }\r\n            // response = await axios.post(ETHMainnetConfig.relayer + '/v1/getAccountStatus', {address: recipient}, {});\r\n            // res = response.data;\r\n            // const recipientPubKey = res.publicKey;\r\n\r\n            // const restAmount = sumBalance.minus(totalAmount);\r\n\r\n            // let outputData = [];\r\n\r\n            // outputData.push({amount: restAmount, pubKey: myPubkey});\r\n\r\n            // outputData.push({amount: transferAmount, pubKey: recipientPubKey});\r\n\r\n            // await axios.post(ETHMainnetConfig.relayer + '/v1/submitTransferTX', {input: inputCommitments, output: outputData, key: privateKey, fee: feeAmount.toString(), recipient: recipient}, {});\r\n            \r\n            // response = await axios.post(ETHMainnetConfig.relayer + '/v1/getProofData', { amount: depositAmount.toString(), key: privateKey });\r\n            // res = response.data;\r\n            // const {args, extData} = res;\r\n\r\n            // console.log('args', args);\r\n            // console.log('extData', extData);\r\n\r\n            // txData = await generateTxData(ETHMainnetConfig.HorizonPool, ETHMainnetConfig.gnosisRpcUrl, ETHMainnetConfig.BridgeToken, args, extData, depositAmount);\r\n\r\n            // const feeAmount = withdrawAmount.div(1000); // 0.1 %\r\n            // const L1feeAmount = new BigNumber('1000000000');\r\n            // const totalAmount = withdrawAmount.plus(feeAmount).plus(L1feeAmount);\r\n            // console.log('sumBalance.toString()', sumBalance.toString());\r\n\r\n            // sumBalance = new BigNumber(0);\r\n            // let idx = 0;\r\n            // while(sumBalance.comparedTo(totalAmount) < 0) {\r\n            //   sumBalance = sumBalance.plus(myUtxoArr[idx].amount);\r\n            //   inputCommitments.push(myUtxoArr[idx].commitment);\r\n            //   idx ++;\r\n            // }\r\n            // const restAmount = sumBalance.minus(totalAmount);\r\n\r\n            // let outputData = [];\r\n\r\n            // outputData.push({amount: restAmount, pubKey: myPubkey});\r\n\r\n            // await axios.post(ETHMainnetConfig.relayer + '/v1/submitWithdrawTX', {input: inputCommitments, output: outputData, key: privateKey, fee: feeAmount.toString(), recipient: recipient, l1fee: L1feeAmount.toString()}, {});\r\n\r\n            // const encodedData = await getUserSignatureLog(ETHMainnetConfig.HomeAMB, ETHMainnetConfig.gnosisRpcUrl, 23713605);\r\n            // const signatures = await getSignatures(ETHMainnetConfig.AMBBridgeHelper, ETHMainnetConfig.gnosisRpcUrl, encodedData);\r\n            \r\n            // await axios.post(ETHMainnetConfig.relayer + '/v1/submitUnwrapperTx', {msg: encodedData, signatures: signatures}, {});\r\n\r\n            // console.log('signatures', signatures);\r\n        } catch (err) {\r\n          if(!god.currentNetwork.account) {\r\n            store.logout();\r\n          }\r\n          if(god.loginType == \"metamask\") {\r\n            if(!god.isRegistered) {\r\n              store.logout();\r\n            }\r\n            initializeAccount();\r\n            base.startRefetchForce();\r\n          }\r\n          god.connectingStatus = 'idle';\r\n          return;\r\n        }\r\n      }\r\n      \r\n      initializeAccount()\r\n    }\r\n    doNecessary();\r\n  }, [god, library, chainId, account, active]);\r\n\r\n  useEffect(() => {\r\n    if (god.currentNetwork.account) {\r\n      god.loadBalance();\r\n      god.loadPublichData();\r\n    }\r\n  }, [base.refetchTimer]);\r\n\r\n  useEffect(() => {\r\n    if (activate && god.eth.connector.latestProvider.value) {\r\n      if (god.eth.connector.latestProvider.value == 'inject') {\r\n        // activate(injectedConnector);\r\n      }\r\n      if (god.eth.connector.latestProvider.value == 'walletconnect') {\r\n        // activate(walletconnectConnector);\r\n      }\r\n    }\r\n  }, [activate, god.eth.connector.latestProvider.value]);\r\n\r\n  useEffect(() => {\r\n    const doNecessary = () => {\r\n      const chain = god.eth.chains[BSCMainnetConfig.chainId];\r\n      metamaskUtils.setupNetwork({\r\n        chainId: chain.chainId,\r\n        blockExplorerUrls: [chain.explorerURL],\r\n        chainName: chain.name,\r\n        nativeCurrency: {\r\n          decimals: chain.Coin.decimals || 18,\r\n          name: chain.Coin.symbol,\r\n          symbol: chain.Coin.symbol\r\n        },\r\n        rpcUrls: [chain.baseRpcUrl]\r\n      });\r\n      // console.log('mychain', chain);\r\n      eventBus.addListener('wallet.logout', store.logout);\r\n      return () => eventBus.removeListener('wallet.logout', store.logout);\r\n    };\r\n    doNecessary();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <EthConnectWallet />\r\n      <HomePage />\r\n    </div>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { styled } from '../../modules/index';\r\nimport { Icon, Text, FlexBox, Button } from '../../modules/globalStyle';\r\nimport { DialogWrapper } from '../Dialog/index';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport { useStore } from '../../store/index';\r\nimport { eventBus } from '../../lib/event';\r\n\r\nconst WalletBox = styled('div', {\r\n  padding: '1.5rem 0 0.5rem 0',\r\n  borderTop: '1px solid $borderPrimary'\r\n});\r\n\r\nexport const Modal = observer(() => {\r\n  const { base, lang } = useStore();\r\n\r\n  const store = useLocalStore(() => ({\r\n    get visible() {\r\n      return base.modal.visible;\r\n    },\r\n    get title() {\r\n      return base.modal.title;\r\n    },\r\n    get content() {\r\n      return base.modal.msg;\r\n    },\r\n    close() {\r\n      base.closeModal();\r\n      eventBus.emit('modal.cancel');\r\n    },\r\n    ok() {\r\n      eventBus.emit('modal.confirm');\r\n    }\r\n  }));\r\n\r\n  const content = (\r\n    <WalletBox>\r\n      <Text size=\"md\" color=\"white\" css={{ mb: '1.5rem' }}>\r\n        {store.content}\r\n      </Text>\r\n      <FlexBox justify=\"center\">\r\n        <Button size=\"small\" color=\"primary\" onClick={store.ok} responsive=\"lg\">\r\n          {lang.t('Okay')}\r\n        </Button>\r\n      </FlexBox>\r\n    </WalletBox>\r\n  );\r\n  return <DialogWrapper title={store.title} size=\"base\" content={content} visible={store.visible} close={store.close} />;\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\n\r\nexport const ModalView = observer((props) => {\r\n  return <div className=\"modalView\">{props.children}</div>;\r\n});\r\nexport default ModalView;\r\n","import { observer, useLocalStore } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useStore } from '../store';\r\nimport Button from './Button';\r\n\r\ninterface ILoadingProps {\r\n  text: string;\r\n} \r\n\r\nexport const Loading = observer((props: ILoadingProps) => {\r\n  const { lang } = useStore();\r\n\r\n  const store = useLocalStore(\r\n    (props) => ({\r\n      allowToCancel: false,\r\n      nextable: true,\r\n    }),\r\n    props\r\n  );\r\n  \r\n  return (\r\n    <div className=\"loadingBar\">\r\n      <svg style={{ margin: 'auto', background: 'rgb(255, 255, 255, 0)', display: 'block', shapeRendering: 'auto', width: 200, height: 200 }} viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n      <circle cx=\"50\" cy=\"50\" r=\"0\" fill=\"none\" stroke=\"#44f1a6\" stroke-width=\"2\">\r\n        <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" values=\"0;39\" keyTimes=\"0;1\" keySplines=\"0 0.2 0.8 1\" calcMode=\"spline\" begin=\"0s\"></animate>\r\n        <animate attributeName=\"opacity\" repeatCount=\"indefinite\" dur=\"1s\" values=\"1;0\" keyTimes=\"0;1\" keySplines=\"0.2 0 0.8 1\" calcMode=\"spline\" begin=\"0s\"></animate>\r\n      </circle><circle cx=\"50\" cy=\"50\" r=\"0\" fill=\"none\" stroke=\"#44f1a6\" stroke-width=\"2\">\r\n        <animate attributeName=\"r\" repeatCount=\"indefinite\" dur=\"1s\" values=\"0;39\" keyTimes=\"0;1\" keySplines=\"0 0.2 0.8 1\" calcMode=\"spline\" begin=\"-0.5s\"></animate>\r\n        <animate attributeName=\"opacity\" repeatCount=\"indefinite\" dur=\"1s\" values=\"1;0\" keyTimes=\"0;1\" keySplines=\"0.2 0 0.8 1\" calcMode=\"spline\" begin=\"-0.5s\"></animate>\r\n      </circle>\r\n      </svg>\r\n\r\n      <div className=\"loadingLabel\"><p>{props.text.split('#')[0]}</p><p>{props.text.split('#')[1]}</p></div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Loading;\r\n","import 'globalthis/auto';\r\nimport 'react-app-polyfill/stable';\r\nimport React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { observer, useLocalStore } from 'mobx-react-lite';\r\nimport './App.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useStore } from './store';\r\nimport { getLibrary } from './lib/web3-react-bsc';\r\n\r\nimport * as Sentry from '@sentry/react';\r\nimport { Integrations } from '@sentry/tracing';\r\nimport { Web3ReactProvider } from '@web3-react/core';\r\n\r\nimport { Leva, useControls } from 'leva';\r\nimport { Mainnet } from './pages/Home/Mainnet';\r\nimport { Bscnet } from './pages/Home/Bscnet';\r\nimport { Polygon } from './pages/Home/Polygon';\r\nimport { Modal } from './components/Modal';\r\nimport ModalView from './components/ModalView';\r\nimport Loading from './components/Loading';\r\n\r\nif (process.env.NODE_ENV == 'production') {\r\n  Sentry.init({\r\n    dsn: 'https://3731f73d7eaf4e008d0409f867665f99@o563381.ingest.sentry.io/5703305',\r\n    integrations: [new Integrations.BrowserTracing()],\r\n    tracesSampleRate: 1.0\r\n  });\r\n}\r\nconst App = observer(() => {\r\n  const { lang, base, dev, god } = useStore();\r\n  const setting = useControls({ devUI: dev.devUI, devPool: dev.devPool });\r\n\r\n  const store = useLocalStore(() => ({\r\n    showLoadingView: false,\r\n    loadingText: ''\r\n  }));\r\n  useEffect(() => {\r\n    lang.init();\r\n    base.init();\r\n  }, []);\r\n  useEffect(() => {\r\n    Object.assign(dev, setting);\r\n  }, [setting]);\r\n\r\n  useEffect(() => {\r\n    store.showLoadingView = god.showLoadingView;\r\n  }, [god.showLoadingView]);\r\n\r\n  useEffect(() => {\r\n    store.loadingText = god.loadingText;\r\n  }, [god.loadingText]);\r\n\r\n  return (\r\n    <React.StrictMode>\r\n      <Leva hidden={!dev.dev} />\r\n      <Modal />\r\n      {\r\n        store.showLoadingView &&\r\n        <ModalView>\r\n          { window.scrollTo(0, 0) }\r\n          <Loading text={store.loadingText} />\r\n        </ModalView>\r\n      }\r\n      <Router>\r\n        <Switch>\r\n          {/* <Route exact path=\"/eth\">\r\n            <Web3ReactProvider getLibrary={getLibrary}>\r\n              <Mainnet />\r\n            </Web3ReactProvider>\r\n          </Route> */}\r\n          <Route exact path=\"/eth\">\r\n            <Web3ReactProvider getLibrary={getLibrary}>\r\n              <Mainnet />\r\n            </Web3ReactProvider>\r\n          </Route>\r\n          <Route exact path=\"/bsc\">\r\n            <Web3ReactProvider getLibrary={getLibrary}>\r\n              <Bscnet />\r\n            </Web3ReactProvider>\r\n          </Route>\r\n          {/* <Route exact path=\"/polygon\">\r\n            <Web3ReactProvider getLibrary={getLibrary}>\r\n              <Polygon />\r\n            </Web3ReactProvider>\r\n          </Route> */}\r\n          \r\n          <Redirect to='/eth' /> \r\n        </Switch>\r\n      </Router>\r\n    </React.StrictMode>\r\n  );\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { BscConnector } from '@binance-chain/bsc-connector';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\r\nimport { providers as EthersProviders, ethers } from 'ethers';\r\nimport { EthereumConfigV2 } from '../config/NetowkConfig';\r\n\r\nexport function getLibrary(provider: any): Web3Provider {\r\n  const library = new EthersProviders.Web3Provider(provider);\r\n  library.pollingInterval = 12000;\r\n  return library;\r\n}\r\n\r\nexport const bscConnector = new BscConnector({\r\n  supportedChainIds: [56, 97] // later on 1 ethereum mainnet and 3 ethereum ropsten will be supported\r\n});\r\n\r\nexport const injectedConnector = new InjectedConnector({ supportedChainIds: EthereumConfigV2.allowChains });\r\n\r\nexport const walletconnectConnector = new WalletConnectConnector({\r\n  rpc: {\r\n    1: EthereumConfigV2.chains[1].rpcUrl,\r\n    // 56: EthereumConfigV2.chains[56].rpcUrl,\r\n    // 137: EthereumConfigV2.chains[137].rpcUrl,\r\n    // 56: 'https://bsc-dataseed1.ninicoin.io'\r\n    // 97: \"https://data-seed-prebsc-1-s1.binance.org:8545/\"\r\n  },\r\n  bridge: 'https://bridge.walletconnect.org',\r\n  qrcode: true,\r\n  pollingInterval: 12000\r\n});\r\n","import { makeObservable, observable } from 'mobx';\r\nimport { NetworkState } from './NetworkState';\r\nimport BigNumber from 'bignumber.js';\r\nimport { BigNumberState, MulticallParams } from '../type';\r\n\r\nexport class TokenState {\r\n  address: string;\r\n  abi: any;\r\n  decimals: number;\r\n  symbol: string;\r\n  allownaceForRouter = new BigNumberState({ loading: true });\r\n  network: NetworkState;\r\n  balance: BigNumberState;\r\n  metas: {\r\n    isApprovingAllowance?: boolean;\r\n    [key: string]: any;\r\n  } = {};\r\n  constructor(args: Partial<TokenState>) {\r\n    Object.assign(this, args);\r\n    this.balance = new BigNumberState({ decimals: this.decimals, loading: true });\r\n    makeObservable(this, {\r\n      metas: observable\r\n    });\r\n  }\r\n\r\n  parseValue({ value, fixed = 6 }: { value: any; fixed?: number }) {\r\n    return new BigNumber(value).dividedBy(10 ** this.decimals).toFixed(fixed, 1);\r\n  }\r\n\r\n  preMulticall(args: Partial<MulticallParams>) {\r\n    return Object.assign({ address: this.address, abi: this.abi }, args);\r\n  }\r\n}\r\n\r\nexport class LPTokenState extends TokenState {\r\n  allowanceForAeolus = new BigNumberState({ loading: true });\r\n  constructor(args: Partial<LPTokenState>) {\r\n    super(args);\r\n  }\r\n}\r\n","import numeral from 'numeral';\r\nimport BN from 'bignumber.js';\r\n\r\nexport const helper = {\r\n  json: {\r\n    safeParse(val: any) {\r\n      try {\r\n        return JSON.parse(val);\r\n      } catch (error) {\r\n        return val;\r\n      }\r\n    }\r\n  },\r\n  string: {\r\n    parseTemplate(string, data) {\r\n      Object.keys(data).forEach((key) => {\r\n        string = string.replace(`\\${${key}}`, data[key]);\r\n      });\r\n      return string;\r\n    },\r\n    toFixString(str, length) {\r\n      if (str && str.length > length) {\r\n        return str.substr(0, length) + '...';\r\n      } else {\r\n        return str;\r\n      }\r\n    },\r\n    truncate(fullStr, strLen, separator) {\r\n      if (fullStr.length <= strLen) return fullStr;\r\n\r\n      separator = separator || '...';\r\n\r\n      var sepLen = separator.length,\r\n        charsToShow = strLen - sepLen,\r\n        frontChars = Math.ceil(charsToShow / 2),\r\n        backChars = Math.floor(charsToShow / 2);\r\n\r\n      return fullStr.substr(0, frontChars) + separator + fullStr.substr(fullStr.length - backChars);\r\n    }\r\n  },\r\n  number: {\r\n    countNonZeroNumbers: (str: string) => {\r\n      let index = 0;\r\n      const length = str.length;\r\n      for (; index < length && (str[index] === '0' || str[index] === '.'); index += 1);\r\n      return length - index - Number(str.includes('.'));\r\n    },\r\n    toPrecisionFloor: (str: number | string, options?: { decimals?: number; format?: string }) => {\r\n      const { decimals = 6, format = '' } = options || {};\r\n      if (!str || isNaN(Number(str))) return '';\r\n\r\n      if (helper.number.countNonZeroNumbers(String(str)) <= decimals) return String(str);\r\n      const numStr = new BN(str).toFixed();\r\n      let result = '';\r\n      let index = 0;\r\n      const numLength = numStr.length;\r\n\r\n      for (; numStr[index] === '0' && index < numLength; index += 1);\r\n\r\n      if (index === numLength) return '0';\r\n\r\n      if (numStr[index] === '.') {\r\n        // number < 0\r\n        result = '0';\r\n        for (; (numStr[index] === '0' || numStr[index] === '.') && index < numLength; index += 1) {\r\n          result = result + numStr[index];\r\n        }\r\n      }\r\n      let resultNumLength = 0;\r\n      for (; index < numLength && (resultNumLength < decimals || !result.includes('.')); index += 1) {\r\n        result = result + numStr[index];\r\n\r\n        if (numStr[index] !== '.') resultNumLength += 1;\r\n      }\r\n      if (format) {\r\n        return numeral(Number(result)).format(format);\r\n      }\r\n\r\n      return new BN(result).toFixed();\r\n    },\r\n    getBN: (value: number | string | BN) => {\r\n      return value instanceof BN ? value : typeof value === 'string' ? new BN(Number(value)) : new BN(value);\r\n    }\r\n  }\r\n};\r\n","import { JsonRpcProvider } from '@ethersproject/providers';\r\nimport axios from 'axios';\r\nimport { ethers } from 'ethers';\r\n\r\nconst abi = new ethers.utils.AbiCoder()\r\n\r\nfunction encodeDataForBridge({ proof, extData }) {\r\n  return abi.encode(\r\n    [\r\n      'tuple(bytes proof,bytes32 root,bytes32[] inputNullifiers,bytes32[2] outputCommitments,uint256 publicAmount,bytes32 extDataHash)',\r\n      'tuple(address recipient,int256 extAmount,address relayer,uint256 fee,bytes encryptedOutput1,bytes encryptedOutput2,bool isL1Withdrawal,uint256 l1Fee)',\r\n    ],\r\n    [proof, extData],\r\n  )\r\n}\r\n\r\nexport async function getKeypairLog (from, L1HelperContract, rpcUrl, relayerURL, pubKey) {\r\n    let stBlock, endBlock;\r\n    stBlock = (from == 0 ? L1HelperContract.deployedBlock : from);\r\n    let provider = new JsonRpcProvider(rpcUrl);\r\n\r\n    let tornadoPool = new ethers.Contract(L1HelperContract.address, L1HelperContract.abi, provider);\r\n\r\n    console.log('tornadoPool', tornadoPool);\r\n\r\n    const filter = tornadoPool.filters.PublicKey()\r\n\r\n    console.log('stBlock', stBlock);\r\n    endBlock = (await provider.getBlock()).number\r\n    console.log('endBlock', endBlock);\r\n    \r\n    \r\n    let fromBlock = stBlock\r\n    let toBlock = fromBlock + 999\r\n\r\n    let totEvents = [];\r\n    \r\n    while(toBlock < endBlock) {\r\n\r\n        console.log('fromBlock', fromBlock)\r\n        console.log('toBlock', toBlock)\r\n        \r\n        const subEvents = await tornadoPool.queryFilter(filter, fromBlock, toBlock)\r\n        let tempEvents = [];\r\n        for (const event of subEvents) {\r\n            tempEvents.push({blockNumber: event.blockNumber, address: event.args.owner, publicKey: event.args.key});\r\n        }\r\n        \r\n        totEvents = totEvents.concat(tempEvents);\r\n\r\n        await axios.post(relayerURL + '/v1/updateKeypair', {\r\n            fromBlockNumber: fromBlock,\r\n            toBlockNumber: toBlock,\r\n            keypairArr: tempEvents\r\n        }, {});\r\n\r\n        fromBlock = toBlock + 1;\r\n        toBlock = fromBlock + 999\r\n    }\r\n\r\n    toBlock = endBlock;\r\n\r\n    console.log('fromBlock', fromBlock)\r\n    console.log('toBlock', toBlock)\r\n    \r\n    const subEvents = await tornadoPool.queryFilter(filter, fromBlock, toBlock)\r\n    let tempEvents = [];\r\n    for (const event of subEvents) {\r\n        tempEvents.push({blockNumber: event.blockNumber, address: event.args.owner, publicKey: event.args.key});\r\n    }\r\n    totEvents = totEvents.concat(tempEvents);\r\n    await axios.post(relayerURL + '/v1/updateKeypair', {\r\n        fromBlockNumber: fromBlock,\r\n        toBlockNumber: toBlock,\r\n        keypairArr: tempEvents\r\n    }, {});\r\n    \r\n    let idx = -1;\r\n    console.log(totEvents, pubKey);\r\n    totEvents.map((event, index) => {\r\n        if( event.publicKey == pubKey ) {\r\n            idx = index;\r\n        }\r\n    });\r\n    if(idx < 0) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return totEvents[idx];\r\n    }\r\n}\r\nexport async function getCommitmentAndNullifierLog (from_commitment, from_nullifier, HorizonPoolContract, rpcUrl, relayerURL) {\r\n    if(from_commitment != from_nullifier)\r\n        return;\r\n    let stBlock, endBlock;\r\n    stBlock = (from_commitment == 0 ? HorizonPoolContract.deployedBlock : from_commitment);\r\n    let provider = new JsonRpcProvider(rpcUrl);\r\n\r\n    let tornadoPool = new ethers.Contract(HorizonPoolContract.address, HorizonPoolContract.abi, provider);\r\n    const filter_commitment = tornadoPool.filters.NewCommitment()\r\n    const filter_nullifier = tornadoPool.filters.NewNullifier()\r\n\r\n    console.log('stBlock', stBlock);\r\n    endBlock = (await provider.getBlock()).number\r\n    \r\n    let fromBlock = stBlock\r\n    let toBlock = fromBlock + 500\r\n    \r\n    while(toBlock < endBlock) {\r\n        const subEvents_commitment = await tornadoPool.queryFilter(filter_commitment, fromBlock, toBlock)\r\n        const subEvents_nullifier = await tornadoPool.queryFilter(filter_nullifier, fromBlock, toBlock)\r\n        let tempEvents_commitment = [], tempEvents_nullifier = [];\r\n        for (const event of subEvents_commitment) {\r\n            tempEvents_commitment.push({blockNumber: event.blockNumber, encryptedOutput: event.args.encryptedOutput, commitment: event.args.commitment, index: event.args.index.toNumber()});\r\n        }\r\n        for (const event of subEvents_nullifier) {\r\n            tempEvents_nullifier.push({blockNumber: event.blockNumber, nullifier: event.args.nullifier});\r\n        }\r\n\r\n        await axios.post(relayerURL + '/v1/updateCommitmentAndNullifier', {\r\n            fromBlockNumber: fromBlock,\r\n            toBlockNumber: toBlock,\r\n            commitmentArr: tempEvents_commitment,\r\n            nullifierArr: tempEvents_nullifier\r\n        }, {});\r\n\r\n        fromBlock = toBlock + 1;\r\n        toBlock = fromBlock + 500\r\n\r\n        console.log('fromBlock', fromBlock)\r\n        console.log('toBlock', toBlock)\r\n    }\r\n\r\n    toBlock = endBlock;\r\n    \r\n    const subEvents_commitment = await tornadoPool.queryFilter(filter_commitment, fromBlock, toBlock)\r\n    const subEvents_nullifier = await tornadoPool.queryFilter(filter_nullifier, fromBlock, toBlock)\r\n    let tempEvents_commitment = [], tempEvents_nullifier = [];\r\n    for (const event of subEvents_commitment) {\r\n        tempEvents_commitment.push({blockNumber: event.blockNumber, encryptedOutput: event.args.encryptedOutput, commitment: event.args.commitment, index: event.args.index.toNumber()});\r\n    }\r\n    for (const event of subEvents_nullifier) {\r\n        tempEvents_nullifier.push({blockNumber: event.blockNumber, nullifier: event.args.nullifier});\r\n    }\r\n\r\n    await axios.post(relayerURL + '/v1/updateCommitmentAndNullifier', {\r\n        fromBlockNumber: fromBlock,\r\n        toBlockNumber: toBlock,\r\n        commitmentArr: tempEvents_commitment,\r\n        nullifierArr: tempEvents_nullifier\r\n    }, {});\r\n}\r\n\r\nexport function generateTxData(args, extData) {\r\n    const onTokenBridgedData = encodeDataForBridge({\r\n        proof: args,\r\n        extData,\r\n    })\r\n    return onTokenBridgedData;\r\n}\r\n\r\nexport async function getUserSignatureLog(HomeAMB, rpcUrl, blockNumber) {\r\n    let provider = new JsonRpcProvider(rpcUrl);\r\n    let HomeAMBContract = new ethers.Contract(HomeAMB.address, HomeAMB.abi, provider);\r\n    const filter = HomeAMBContract.filters.UserRequestForSignature();\r\n    const sigData = await HomeAMBContract.queryFilter(filter, blockNumber);\r\n    const { encodedData } = sigData[0].args;\r\n    return encodedData;\r\n}\r\n\r\nexport async function getSignatures(bridgeHelper, rpcUrl, message) {\r\n    let provider = new JsonRpcProvider(rpcUrl);\r\n    let HomeAMBContract = new ethers.Contract(bridgeHelper.address, bridgeHelper.abi, provider);\r\n    console.log('HomeAMBContract', HomeAMBContract);\r\n    console.log('message', message);\r\n    let signatures = null;\r\n    \r\n    const getSign = async () => {\r\n        try {\r\n            signatures = await HomeAMBContract.getSignatures(message);\r\n            console.log('signatures', signatures);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    while(!signatures) {\r\n        console.log('try');\r\n        await getSign();\r\n        if(!signatures) {\r\n            console.log('retry');\r\n            await new Promise(r => setTimeout(r, 6000));\r\n        }\r\n    }\r\n\r\n    return signatures;\r\n}","import { createCss } from '@stitches/react';\r\nimport { CSSProperties } from 'react';\r\n\r\nexport const { styled, css, global, keyframes } = createCss({\r\n  prefix: '',\r\n  insertionMethod: 'append',\r\n  theme: {\r\n    colors: {\r\n      primary: '#FF7518',\r\n      primary200: '#60E3DD',\r\n      primaryOpacity: 'rgba(56, 220, 213, 0.2)',\r\n      primary600: 'rgba(56, 220, 213, 0.6)',\r\n      info: '#ffffff24',\r\n      info200: '#414458',\r\n      info400: '#505360',\r\n      bg: '#191B29',\r\n      bg1: '#1C1F2E',\r\n      bg2: '#fafafa1a',\r\n      bg3: 'rgba(0, 0, 0, 0.2)',\r\n      bg4: '#ffffff4a',\r\n      bg5: '#ffffff1a',\r\n      bg6: 'rgba(0, 0, 0, 0.8)',\r\n      bg7: '#262A3B',\r\n      bg8: '#242838',\r\n      bg9: 'rgba(255, 255, 255, 0.1)',\r\n      textPrimary: '#fff',\r\n      textLight: 'rgba(250, 252, 255, 0.5)',\r\n      textInfo: '#E6BF93',\r\n      textGray: '#ccc',\r\n      textGray200: '#E0E0E0',\r\n      textGray900: '#999',\r\n      borderPrimary: 'rgba(255, 255, 255, 0.2)',\r\n      textWarn: '#E84D4D'\r\n    },\r\n    space: {\r\n      $0: '0',\r\n      $1: '0.25rem',\r\n      $2: '0.5rem',\r\n      $3: '0.75rem',\r\n      $4: '1rem',\r\n      $5: '1.25rem',\r\n      $6: '1.5rem',\r\n      $7: '1.75rem',\r\n      $8: '2rem',\r\n      autoX: '0 auto'\r\n    },\r\n    fontSizes: {\r\n      $xs: '0.75rem',\r\n      $sm: '0.875rem',\r\n      $base: '1rem',\r\n      $lg: '1.125rem',\r\n      $xl: '1.25rem',\r\n      $2xl: '1.5rem',\r\n      $3xl: '1.875rem',\r\n      $4xl: '2.25rem',\r\n      $5xl: '3rem',\r\n      $6xl: '4rem'\r\n    }\r\n  },\r\n  media: {\r\n    xss: `(min-width: 468px)`,\r\n    xs: `(min-width: 640px)`,\r\n    sm: `(min-width: 768px)`,\r\n    md: '(min-width: 992px)',\r\n    lg: `(min-width: 1024px)`,\r\n    xl: `(min-width: 1280px)`,\r\n    xxl: `(min-width: 1440px)`\r\n  },\r\n  utils: {\r\n    m: (config) => (value) => ({\r\n      marginTop: value,\r\n      marginBottom: value,\r\n      marginLeft: value,\r\n      marginRight: value\r\n    }),\r\n    mt: (config) => (value) => ({\r\n      marginTop: value\r\n    }),\r\n    mr: (config) => (value) => ({\r\n      marginRight: value\r\n    }),\r\n    mb: (config) => (value) => ({\r\n      marginBottom: value\r\n    }),\r\n    ml: (config) => (value) => ({\r\n      marginLeft: value\r\n    }),\r\n    mx: (config) => (value) => ({\r\n      marginLeft: value,\r\n      marginRight: value\r\n    }),\r\n    my: (config) => (value) => ({\r\n      marginTop: value,\r\n      marginBottom: value\r\n    }),\r\n    p: (config) => (value) => ({\r\n      paddingTop: value,\r\n      paddingBottom: value,\r\n      paddingLeft: value,\r\n      paddingRight: value\r\n    }),\r\n    pt: (config) => (value) => ({\r\n      paddingTop: value\r\n    }),\r\n    pr: (config) => (value) => ({\r\n      paddingRight: value\r\n    }),\r\n    pb: (config) => (value) => ({\r\n      paddingBottom: value\r\n    }),\r\n    pl: (config) => (value) => ({\r\n      paddingLeft: value\r\n    }),\r\n    px: (config) => (value) => ({\r\n      paddingLeft: value,\r\n      paddingRight: value\r\n    }),\r\n    py: (config) => (value) => ({\r\n      paddingTop: value,\r\n      paddingBottom: value\r\n    }),\r\n    size: (config) => (value) => ({\r\n      width: value,\r\n      height: value\r\n    }),\r\n    linearGradient: (config) => (value) => ({\r\n      backgroundImage: `linear-gradient(${value})`\r\n    }),\r\n    br: (config) => (value) => ({\r\n      borderRadius: value\r\n    }),\r\n    flexBetweenCenter: (config) => (value: CSSProperties['flexDirection'] = 'row') => ({\r\n      flexDirection: value,\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center'\r\n    }),\r\n    flexCenterCenter: (config) => (value: CSSProperties['flexDirection'] = 'row') => ({\r\n      flexDirection: value,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center'\r\n    })\r\n  }\r\n});\r\n","import get from 'lodash/get';\r\nimport keyBy from 'lodash/keyBy';\r\nimport debounce from 'lodash/debounce';\r\nimport each from 'lodash/each';\r\nimport flattenDeep from 'lodash/flattenDeep';\r\n\r\nexport const _ = {\r\n  get,\r\n  keyBy,\r\n  debounce,\r\n  each,\r\n  flattenDeep\r\n};\r\n","import { TokenState, LPTokenState } from '../store/lib/TokenState';\r\nimport { ContractState, AeolusContractState } from '../store/lib/ContractState';\r\nimport L1HelperABI from '../../public/contracts/L1Helper.json';\r\nimport XRC20ABI from '../../public/contracts/XRC20.json';\r\nimport HorizonABI from '../../public/contracts/HorizonPool.json';\r\nimport AMBABI from '../../public/contracts/AMBABI.json';\r\nimport BridgeHelperABI from '../../public/contracts/BridgeHelperABI.json';\r\nimport UniswapV2CycloneRouterABI from '../../public/contracts/UniswapV2CycloneRouter.json';\r\nimport { PoolState } from '../store/lib/PoolState';\r\nimport { ChainState } from '../store/lib/ChainState';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nexport const ETHMainnetConfig = new ChainState({\r\n  name: 'ETH Mainnet',\r\n  path: '/eth',\r\n  chainId: 1,\r\n  baseRpcUrl: 'https://mainnet.infura.io/v3/',\r\n  rpcUrl: 'https://nameless-spring-field.quiknode.pro/3313199c6778abecbc80fc7f7066931bbb743113/',\r\n  gnosisRpcUrl: 'https://purple-patient-grass.xdai.quiknode.pro/89a3d5052dcc953504bbc2ffdd4c830166513e9d/',\r\n  explorerURL: 'https://etherscan.io',\r\n  explorerName: 'EtherScan',\r\n  swapName: 'UniSwap',\r\n  swapURL: 'https://app.uniswap.org/#/swap/?inputCurrency=ETH&outputCurrency=0x8AF5FedC0f263841C18F31D9DbCC97A47e1aB462',\r\n  APIURL: 'https://analytics-eth.cyclone.xyz/query',\r\n  relayer: 'https://h-relayer.messier.app',\r\n  userRequestTopic: '0x482515ce3d9494a37ce83f18b72b363449458435fafdd7a53ddea7460fe01b58',\r\n  AffirmationCompletedTopic: '0xe194ef610f9150a2db4110b3db5116fd623175dca3528d7ae7046a1042f84fe7',\r\n  L2UserRequestTopic: '0x520d2afde79cbd5db58755ac9480f81bc658e5c517fcae7365a3d832590b0183',\r\n  L1FinalizationRate: 20,\r\n  L2FinalizationRate: 20,\r\n\r\n  Coin: new TokenState({\r\n    symbol: 'ETH',\r\n    decimals: 18\r\n  }),\r\n  MultiCall: new ContractState({\r\n    address: '0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\r\n  }),\r\n  CYCToken: new TokenState({\r\n    address: '0x8AF5FedC0f263841C18F31D9DbCC97A47e1aB462',\r\n    abi: XRC20ABI,\r\n    decimals: 18,\r\n    symbol: 'M87'\r\n  }),\r\n  L1Helper: new ContractState({\r\n    address: '0x52a78ec1c4e961e121F9b4c22C69a4fE71F1783C',\r\n    abi: L1HelperABI,\r\n    deployedBlock: 15406213\r\n  }),\r\n  HomeAMB: new ContractState({\r\n    address: '0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59',\r\n    abi: AMBABI,\r\n  }),\r\n  AMBBridgeHelper: new ContractState({\r\n    address: '0x7d94ece17e81355326e3359115D4B02411825EdD',\r\n    abi: BridgeHelperABI,\r\n  }),\r\n  pools: {\r\n    'ETH': new PoolState({\r\n      id: 'ETH',\r\n      set: 'Horizon (0.05 ETH - 10 ETH)',\r\n      maxDepositAmount: new BigNumber('10e+18'),\r\n      minDepositAmount: new BigNumber('0.05e+18'),\r\n      HorizonPool: new ContractState({\r\n        address: '0x64C507b80d2CcEd591a7708021d92E438015B1D5',\r\n        abi: HorizonABI,\r\n        deployedBlock: 23885729\r\n      }),\r\n      BridgeToken: new TokenState({\r\n        address: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',\r\n        abi: XRC20ABI,\r\n        decimals: 18,\r\n        symbol: 'WETH'\r\n      }),\r\n      symbol: 'ETH',\r\n      relayer: 'https://h-relayer.messier.app',\r\n      order: 0,\r\n    }),\r\n    'DAI': new PoolState({\r\n      id: 'DAI',\r\n      set: 'Horizon (0.05 DAI - 10 DAI)',\r\n      maxDepositAmount: new BigNumber('10e+18'),\r\n      minDepositAmount: new BigNumber('0.05e+18'),\r\n      HorizonPool: new ContractState({\r\n        address: '0xc711c79BE9ACBD4eB5838f2617d3d85b1b7a1e72',\r\n        abi: HorizonABI,\r\n        deployedBlock: 23895141\r\n      }),\r\n      XRCToken: new TokenState({\r\n        address: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\r\n        abi: XRC20ABI,\r\n        decimals: 18,\r\n        symbol: 'DAI'\r\n      }),\r\n      BridgeToken: new TokenState({\r\n        address: '0x44fA8E6f47987339850636F88629646662444217',\r\n        abi: XRC20ABI,\r\n        decimals: 18,\r\n        symbol: 'DAI'\r\n      }),\r\n      symbol: 'DAI',\r\n      relayer: 'https://h-relayer-dai.messier.app',\r\n      order: 1,\r\n    }),\r\n  }\r\n}); \r\n","import { TokenState, LPTokenState } from '../store/lib/TokenState';\r\nimport { ContractState, AeolusContractState } from '../store/lib/ContractState';\r\nimport L1HelperABI from '../../public/contracts/L1Helper.json';\r\nimport XRC20ABI from '../../public/contracts/XRC20.json';\r\nimport HorizonABI from '../../public/contracts/HorizonPool.json';\r\nimport AMBABI from '../../public/contracts/AMBABI.json';\r\nimport BridgeHelperABI from '../../public/contracts/BridgeHelperABI.json';\r\nimport UniswapV2CycloneRouterABI from '../../public/contracts/UniswapV2CycloneRouter.json';\r\nimport { PoolState } from '../store/lib/PoolState';\r\nimport { ChainState } from '../store/lib/ChainState';\r\nimport BigNumber from 'bignumber.js';\r\n\r\nexport const BSCMainnetConfig = new ChainState({\r\n  name: 'Binance Smart chain Mainnet',\r\n  path: '/bsc',\r\n  chainId: 56,\r\n  baseRpcUrl: 'https://bsc-dataseed.binance.org/',\r\n  rpcUrl: 'https://long-holy-paper.bsc.quiknode.pro/33be2cf79c78479f0340c0aadcd289a91a11122f/',\r\n  gnosisRpcUrl: 'https://purple-patient-grass.xdai.quiknode.pro/89a3d5052dcc953504bbc2ffdd4c830166513e9d/',\r\n  explorerURL: 'https://bscscan.com',\r\n  explorerName: 'BscScan',\r\n  swapName: 'PancakeSwap',\r\n  swapURL: 'https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x810ee35443639348adbbc467b33310d2ab43c168',\r\n  APIURL: 'https://analytics-bsc.cyclone.xyz/query',\r\n  relayer: 'https://h-relayer-bnb.messier.app',\r\n  userRequestTopic: '0x482515ce3d9494a37ce83f18b72b363449458435fafdd7a53ddea7460fe01b58',\r\n  AffirmationCompletedTopic: '0xe194ef610f9150a2db4110b3db5116fd623175dca3528d7ae7046a1042f84fe7',\r\n  L2UserRequestTopic: '0x520d2afde79cbd5db58755ac9480f81bc658e5c517fcae7365a3d832590b0183',\r\n  L1FinalizationRate: 12,\r\n  L2FinalizationRate: 20,\r\n\r\n  Coin: new TokenState({\r\n    symbol: 'BNB',\r\n    decimals: 18\r\n  }),\r\n  MultiCall: new ContractState({\r\n    address: '0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb'\r\n  }),\r\n  CYCToken: new TokenState({\r\n    address: '0x8AF5FedC0f263841C18F31D9DbCC97A47e1aB462',\r\n    abi: XRC20ABI,\r\n    decimals: 18,\r\n    symbol: 'M87'\r\n  }),\r\n  L1Helper: new ContractState({\r\n    address: '0xDFE8FB8faA4b4bb9F8d0A8135A1706104b3681c6',\r\n    abi: L1HelperABI,\r\n    deployedBlock: 20788442\r\n  }),\r\n  HomeAMB: new ContractState({\r\n    address: '0x162E898bD0aacB578C8D5F8d6ca588c13d2A383F',\r\n    abi: AMBABI,\r\n  }),\r\n  AMBBridgeHelper: new ContractState({\r\n    address: '0x68C69307a0975D2636fA9772c7633204648788A8',\r\n    abi: BridgeHelperABI,\r\n  }),\r\n  pools: {\r\n    'BNB': new PoolState({\r\n      id: 'BNB',\r\n      set: 'Horizon (0.05 BNB - 10 BNB)',\r\n      maxDepositAmount: new BigNumber('10e+18'),\r\n      minDepositAmount: new BigNumber('0.05e+18'),\r\n      HorizonPool: new ContractState({\r\n        address: '0x0F5C6E9DB258AA4B03f7B5e0FDAcAe8C973B4b96',\r\n        abi: HorizonABI,\r\n        deployedBlock: 23905172\r\n      }),\r\n      BridgeToken: new TokenState({\r\n        address: '0xCa8d20f3e0144a72C6B5d576e9Bd3Fd8557E2B04',\r\n        abi: XRC20ABI,\r\n        decimals: 18,\r\n        symbol: 'WBNB'\r\n      }),\r\n      symbol: 'BNB',\r\n      relayer: 'https://h-relayer-bnb.messier.app',\r\n      order: 0,\r\n    }),\r\n    'BUSD': new PoolState({\r\n      id: 'BUSD',\r\n      set: 'Horizon (0.05 BUSD - 10 BUSD)',\r\n      maxDepositAmount: new BigNumber('10e+18'),\r\n      minDepositAmount: new BigNumber('0.05e+18'),\r\n      HorizonPool: new ContractState({\r\n        address: '0x6d53bDBcffA60461b2F383C948448F95c791940E',\r\n        abi: HorizonABI,\r\n        deployedBlock: 23905460\r\n      }),\r\n      XRCToken: new TokenState({\r\n        address: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n        abi: XRC20ABI,\r\n        decimals: 18,\r\n        symbol: 'BUSD'\r\n      }),\r\n      BridgeToken: new TokenState({\r\n        address: '0xdd96B45877d0E8361a4DDb732da741e97f3191Ff',\r\n        abi: XRC20ABI,\r\n        decimals: 18,\r\n        symbol: 'BUSD'\r\n      }),\r\n      symbol: 'BUSD',\r\n      relayer: 'https://h-relayer-busd.messier.app',\r\n      order: 1,\r\n    }),\r\n  }\r\n}); \r\n","import { makeAutoObservable } from 'mobx';\r\nimport en from '../../public/translations/en.json';\r\nimport axios from 'axios';\r\n\r\ntype Translation = typeof en;\r\n\r\nconst fileNameMapping = {\r\n  'en-US': 'en',\r\n  'zh-CN': 'zh_CN'\r\n};\r\n\r\nexport class LangStore {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n  langPath = '/translations';\r\n  lang: string = 'en';\r\n  translations: { [key: string]: Translation } = {\r\n    en\r\n  };\r\n  get translation() {\r\n    return this.translations[this.lang];\r\n  }\r\n\r\n  async init() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const langFromQuery = urlParams.get('lang');\r\n    const broswerLang = navigator.languages ? navigator.languages[0] : navigator.language;\r\n    let lang = langFromQuery || localStorage.getItem('lang') || broswerLang;\r\n    if (fileNameMapping[lang]) {\r\n      lang = fileNameMapping[lang];\r\n    }\r\n    await this.loadTranslation(lang);\r\n    this.lang = lang;\r\n  }\r\n\r\n  async setLang(lang: string) {\r\n    await this.loadTranslation(lang);\r\n    localStorage.setItem('lang', lang);\r\n    this.lang = lang;\r\n  }\r\n\r\n  async loadTranslation(lang) {\r\n    if (this.translations[lang]) {\r\n      return;\r\n    }\r\n    const res = await axios.get(`${this.langPath}/${lang}.json`);\r\n    if (res.data) {\r\n      this.translations[lang] = res.data;\r\n    }\r\n  }\r\n\r\n  t(str: keyof Translation, data?: any) {\r\n    let processed = this.translation[str] || this.translations.en[str];\r\n    if (!processed) {\r\n      return str;\r\n    }\r\n    if (data) {\r\n      Object.keys(data).forEach((key) => {\r\n        processed = processed.replace(`\\${${key}}`, data[key]);\r\n      });\r\n    }\r\n\r\n    return processed;\r\n  }\r\n}\r\n","import BN from 'bignumber.js';\r\nexport const publicConfig = {\r\n  isProd: process.env.NODE_ENV == 'production',\r\n  maxApprove: new BN(1.157920892373162e59).toFixed(0),\r\n  iotexTVL: 10000000\r\n};\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { NetworkState, ETHNetworkState } from './lib/NetworkState';\r\nimport { EthereumConfigV2 } from '../config/NetowkConfig';\r\nimport BigNumber from 'bignumber.js';\r\nimport { ChainState } from './lib/ChainState';\r\nimport { PoolState, PoolStateStatus } from './lib/PoolState';\r\nimport { rootStore } from '.';\r\nimport { TokenState } from './lib/TokenState';\r\nimport { metamaskUtils } from '../utils/metamaskUtils';\r\nimport Config from '../Config';\r\nimport axios from 'axios';\r\nimport { publicConfig } from '../config/public';\r\nimport { _ } from '../lib/lodash';\r\nimport { AeolusContractState } from './lib/ContractState';\r\nimport { Int } from '../../generated/gql/schema';\r\nimport { hooks } from '../lib/hooks';\r\nimport Web3 from 'web3';\r\nimport { toBN } from 'web3-utils';\r\nimport merkleTree from 'fixed-merkle-tree';\r\nimport { getKeypairLog, getCommitmentAndNullifierLog } from './lib/GetLog';\r\nimport { TransactionState } from './lib/TransactionState';\r\nimport { BigNumberState } from '../store/type';\r\n\r\nexport type Network = 'eth';\r\n\r\nexport class GodStore {\r\n  isPublicInfoLoaded: boolean = false;\r\n  isPrivateInfoLoaded: boolean = false;\r\n  isRegistered: boolean = false;\r\n  myPublicKey: any = null;\r\n  myPrivteKey: any = null;\r\n  myAddress: any = null;\r\n  loginType: any = null;\r\n  connectingStatus: any = 'idle';\r\n  showLoadingView: boolean = false;\r\n  loadingText: any;\r\n  isOnProgress: boolean = false;\r\n  currentNetworkName: Network = 'eth';\r\n  currentPoolIndex: any = null;\r\n  currentNote: any;\r\n  eth: ETHNetworkState = EthereumConfigV2;\r\n  ABIs = new Map();\r\n  withdrawAnnoucement: any =  \"\";\r\n  isLockStatus: boolean = false;\r\n  currentPrivateKey: string = null;\r\n  constructor() {\r\n    this.eth.god = this;\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get chains() {\r\n    return [this.eth];\r\n  }\r\n\r\n  get isConnect() {\r\n    return !!this.currentNetwork.account;\r\n  }\r\n\r\n  get isETH() {\r\n    return this.currentNetworkName == 'eth';\r\n  }\r\n  get currentNetwork(): NetworkState {\r\n    return this.getNetwork(this.currentNetworkName);\r\n  }\r\n\r\n  get currentChain(): ChainState {\r\n    return this.currentNetwork.currentChain;\r\n  }\r\n\r\n  get Coin() {\r\n    return this.currentChain.Coin;\r\n  }\r\n\r\n  get CYCToken() {\r\n      return this.currentChain.CYCToken;\r\n  }\r\n\r\n  get Aeolus() {\r\n    return this.currentChain.Aeolus;\r\n  }\r\n  get AeolusV2() {\r\n    return this.currentChain.AeolusV2;\r\n  }\r\n\r\n  get LPToken() {\r\n    return this.currentChain.LPToken;\r\n  }\r\n\r\n  get Multicall() {\r\n    return this.currentChain.MultiCall;\r\n  }\r\n  \r\n  get latestEthProvider() {\r\n    return this.eth.connector.latestProvider;\r\n  }\r\n\r\n  get CurrentSet() {\r\n    return this.currentChain.pools[this.currentPoolIndex];\r\n  }\r\n\r\n  get account() {\r\n    return this.eth.account;\r\n  }\r\n\r\n  get web3() {\r\n    return this.eth.web3;\r\n  }\r\n\r\n  get balanceOfXRC() {\r\n    if(this.CurrentSet.XRCToken)\r\n      return this.CurrentSet.XRCToken.balance;\r\n  }\r\n\r\n  get balanceOfCoin() {\r\n    return this.currentChain.Coin.balance;\r\n  }\r\n\r\n  setLoadingView(isShown) {\r\n    this.showLoadingView = isShown;\r\n  }\r\n\r\n  setLoadingText(text) {\r\n    this.loadingText = text;\r\n  }\r\n\r\n  getNetwork(network: string) {\r\n      return this.eth;\r\n  }\r\n\r\n  findPool({ poolId }: { poolId: string }) {\r\n    let pool: PoolState;\r\n    this.chains.forEach((network) => {\r\n      Object.values(network.chains).forEach((chain) => {\r\n        if (chain.pools[poolId]) {\r\n          pool = chain.pools[poolId];\r\n        }\r\n      });\r\n    });\r\n    return pool;\r\n  }\r\n\r\n  getPool({\r\n    network = this.currentNetworkName,\r\n    chainId = this.currentChain.chainId,\r\n    poolId\r\n  }: {\r\n    network?: string;\r\n    chainId?: number | string;\r\n    poolId: number | string;\r\n  }) {\r\n    return this.getNetwork(network).chains[chainId].pools[poolId];\r\n  }\r\n\r\n  getChain({ network = this.currentNetworkName, chainId = this.currentChain.chainId }: { network?: string; chainId?: number | string }) {\r\n    return this.getNetwork(network).chains[chainId];\r\n  }\r\n\r\n  async getM87PriceETH() {\r\n    let price;\r\n    // console.log('getAmountsIn');\r\n    try { \r\n      await this.currentNetwork.mainnetMulticallV2([\r\n        await this.currentNetwork.uniswapMulticall({\r\n          method: 'getAmountsIn',\r\n          params: ['1000000000000000000', ['0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2', '0x8AF5FedC0f263841C18F31D9DbCC97A47e1aB462']],\r\n          handler: (v: any) => {\r\n            price = new BigNumber(v[0].toString());\r\n            // console.log('price', price.toString(), v.toString());\r\n          }\r\n        }),\r\n      ]);\r\n    } catch (error) {\r\n      price = new BigNumber(0);\r\n    }\r\n    // console.log('price', price.toString());\r\n    return price;\r\n  }\r\n\r\n  async loadPublichData() {\r\n    const xrcList = this.currentChain.poolList.filter((i) => i.XRCToken);\r\n\r\n    await this.currentNetwork.multicallV2([\r\n      ..._.flattenDeep(\r\n        xrcList.map((pool) => [\r\n          pool.XRCToken.preMulticall({\r\n            method: 'balanceOf',\r\n            params: [this.currentNetwork.account],\r\n            handler: (v: any) => {\r\n              const balance = new BigNumber(v.toString());\r\n              pool.balance.setValue(balance);\r\n              pool.XRCToken.balance.setValue(balance);\r\n            }\r\n          }),\r\n          pool.XRCToken.preMulticall({\r\n            method: 'allowance',\r\n            params: [this.currentNetwork.account, this.currentChain.L1Helper.address],\r\n            handler: (v: any) => {\r\n              const allowance = new BigNumber(v.toString());\r\n              pool.XRCToken.allownaceForRouter.setValue(allowance);\r\n            }\r\n          })\r\n        ])\r\n      ),\r\n    ]);\r\n  }\r\n\r\n  async loadBalance() {\r\n    const { poolList } = this.currentChain;\r\n    poolList.map((pool) => {\r\n      if(!pool.XRCToken) {\r\n        this.currentNetwork.loadBalance(pool.balance);\r\n      }\r\n    });\r\n  }\r\n\r\n  async approve({ token, spender, value }: { token: TokenState; spender: string; value: string }) {\r\n    // console.log('token', token);\r\n    // console.log('spender', spender);\r\n    // console.log('value', value);\r\n    token.metas.isApprovingAllowance = true;\r\n    const { approveMax } = rootStore.setting;\r\n    const approveValue = approveMax.value ? publicConfig.maxApprove : value;\r\n    // const approveValue = true ? publicConfig.maxApprove : value;\r\n    try {\r\n      const res = await this.currentNetwork.execContract({\r\n        address: token.address,\r\n        abi: token.abi,\r\n        method: 'approve',\r\n        params: [spender, approveValue]\r\n      });\r\n      const receipt = await res.wait();\r\n      if (receipt.status) {\r\n        token.metas.isApprovingAllowance = false;\r\n        token.allownaceForRouter.setValue(new BigNumber(approveValue).plus(token.allownaceForRouter.value));\r\n      }\r\n    } catch (error) {\r\n      token.metas.isApprovingAllowance = false;\r\n      throw new Error(\"Error while approving\");\r\n    }\r\n  }\r\n\r\n  async CliamToken({ aeolus }: { aeolus: AeolusContractState }) {\r\n    // console.log('aeolus', aeolus);\r\n    await this.currentNetwork.execContract({\r\n      address: aeolus.address,\r\n      abi: aeolus.abi,\r\n      method: 'deposit',\r\n      params: [0]\r\n    });\r\n  }\r\n\r\n  async deposit({ amount, data }: { amount: any, data: any }) {\r\n    // console.log('this.CurrentSet.address', this.CurrentSet.address);\r\n    // console.log('commitment', commitment);\r\n    // console.log('this.CurrentSet.allowBuyCYC', this.CurrentSet.allowBuyCYC);\r\n    const config = this.currentChain;\r\n    const tokenAddress = this.CurrentSet.XRCToken ? this.CurrentSet.XRCToken.address : '0x0000000000000000000000000000000000000000';\r\n    console.log('data', data);\r\n    try {\r\n      let res;\r\n      if(this.isRegistered) {\r\n        res = await this.currentNetwork.execContract({\r\n          address: config.L1Helper.address,\r\n          abi: config.L1Helper.abi,\r\n          method: 'wrapAndRelayTokens(address,address,uint256,bytes)',\r\n          params: [this.CurrentSet.HorizonPool.address, tokenAddress, amount.toString(), data],\r\n          options: {\r\n            value: this.CurrentSet.XRCToken ? 0 : amount.toString()\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        res = await this.currentNetwork.execContract({\r\n          address: config.L1Helper.address,\r\n          abi: config.L1Helper.abi,\r\n          method: 'wrapAndRelayTokens(address,address,uint256,bytes,(address,bytes))',\r\n          params: [this.CurrentSet.HorizonPool.address, tokenAddress, amount.toString(), data, { owner: this.myAddress, publicKey: this.myPublicKey }],\r\n          options: {\r\n            value: this.CurrentSet.XRCToken ? 0 : amount.toString()\r\n          }\r\n        });\r\n      }\r\n      // const curTx = new TransactionState({\r\n      //   createTime: new Date().getTime(),\r\n      //   amountToken: this.CurrentSet.XRCToken ? this.CurrentSet.tokenDenomination.format : '0',\r\n      //   amountCYC: '0',\r\n      //   amountCoin: this.CurrentSet.id,\r\n      //   txHash: res.hash,\r\n      //   note: this.currentNote,\r\n      //   commitment: commitment,\r\n      //   status: 2,\r\n      //   chainId: this.currentChain.chainId,\r\n      //   poolId: this.currentPoolIndex,\r\n      //   tokenSymbol: this.CurrentSet.XRCToken ? this.CurrentSet.XRCToken.symbol : null\r\n      // })\r\n      // const txStore = rootStore.transaction;\r\n      // txStore.addTransaction(curTx);\r\n      return res;\r\n      // const receipt = await res.wait();\r\n      // if (receipt.status) {\r\n      //   txStore.transactions[txStore.transactions.length - 1].status = 1;\r\n      //   txStore.save();\r\n      // };\r\n    } catch (error) {\r\n        console.log(error);\r\n        throw new Error(\"Error while depositing\");\r\n    }\r\n  }\r\n  \r\n  async register() {\r\n    const L1HelperContract = this.currentChain.L1Helper;\r\n    const address = this.currentNetwork.account;\r\n    const publicKey = this.myPublicKey;\r\n    console.log('L1HelperContract', L1HelperContract);\r\n    console.log('address', address);\r\n    console.log('publicKey', publicKey);\r\n    try {\r\n      const res = await this.currentNetwork.execContract({\r\n        address: L1HelperContract.address,\r\n        abi: L1HelperContract.abi,\r\n        method: 'register',\r\n        params: [{owner: address, publicKey: publicKey}],\r\n      });\r\n      // const curTx = new TransactionState({\r\n      //   createTime: new Date().getTime(),\r\n      //   amountToken: this.CurrentSet.XRCToken ? this.CurrentSet.tokenDenomination.format : '0',\r\n      //   amountCYC: '0',\r\n      //   amountCoin: this.CurrentSet.id,\r\n      //   txHash: res.hash,\r\n      //   note: this.currentNote,\r\n      //   commitment: commitment,\r\n      //   status: 2,\r\n      //   chainId: this.currentChain.chainId,\r\n      //   poolId: this.currentPoolIndex,\r\n      //   tokenSymbol: this.CurrentSet.XRCToken ? this.CurrentSet.XRCToken.symbol : null\r\n      // })\r\n      // const txStore = rootStore.transaction;\r\n      // txStore.addTransaction(curTx);\r\n      this.setLoadingText(rootStore.lang.t('registering'));\r\n      this.setLoadingView(true);\r\n      const receipt = await res.wait();\r\n      await this.checkRegistration(this.currentNetwork.account);\r\n      this.setLoadingView(false);\r\n      // if (receipt.status) {\r\n      //   txStore.transactions[txStore.transactions.length - 1].status = 1;\r\n      //   txStore.save();\r\n      // };\r\n      hooks.waitLoading({ msg: rootStore.lang.t('notification'), confirmText: rootStore.lang.t('signup.success') });\r\n    } catch (error) {\r\n        // console.log('error', error);\r\n        // throw new Error(\"Error while depositing\");\r\n    }\r\n  }\r\n\r\n  async checkRegistration(address) {\r\n    const config = this.currentChain;\r\n    let response = await axios.post(config.relayer + '/v1/getAccountStatus', {address: address}, {});\r\n    let res = response.data;\r\n    const { blockNumber, isExist, publicKey } = res;\r\n    if(isExist) {\r\n      this.isRegistered = true;\r\n      this.myPublicKey = publicKey;\r\n    }\r\n    else {\r\n      response = await axios.post(config.relayer + '/v1/getPubkey', {key: this.myPrivteKey}, {});\r\n      res = response.data;\r\n      this.myPublicKey = res.publicKey;\r\n    }\r\n    const event = await getKeypairLog(blockNumber, config.L1Helper, config.rpcUrl, config.relayer, this.myPublicKey);\r\n    console.log(event);\r\n    if(event) {\r\n      this.isRegistered = true;\r\n      this.myPublicKey = event.publicKey;\r\n    }\r\n  }\r\n\r\n  async checkPrivateKey(privateKey) {\r\n    const config = this.currentChain;\r\n\r\n    let response = await axios.post(config.relayer + '/v1/getPrivateKeyStatus', {key: privateKey}, {});\r\n    let res = response.data;\r\n    const { address, blockNumber, publicKey, isExist, invalid } = res;\r\n\r\n    if(invalid) {\r\n      return { invalid: true };\r\n    }\r\n    else {\r\n      this.myPublicKey = publicKey;\r\n      if(isExist) {\r\n        this.isRegistered = true;\r\n        this.myAddress = address;\r\n        this.myPrivteKey = privateKey; \r\n      }\r\n      const event = await getKeypairLog(blockNumber, config.L1Helper, config.rpcUrl, config.relayer, publicKey);\r\n      if(event) {\r\n        this.isRegistered = true;\r\n        this.myAddress = event.address;\r\n        this.myPrivteKey = privateKey; \r\n      }\r\n      return { invalid: false }\r\n    }\r\n  }\r\n\r\n  async checkCommitmentAndNullifer(pool) {\r\n    const config = this.currentChain;\r\n    let response = await axios.post(pool.relayer + '/v1/getCommitmentAndNullifierStatus');\r\n    let res = response.data;\r\n    const {commitmentblockNumber, nullifierBlockNumber} = res;\r\n    await getCommitmentAndNullifierLog(commitmentblockNumber, nullifierBlockNumber, pool.HorizonPool, config.gnosisRpcUrl, pool.relayer);\r\n    console.log('commentlog finished...');\r\n    response = await axios.post(pool.relayer + '/v1/getUTXOFromKey', {key: this.myPrivteKey}, {});\r\n    res = response.data;\r\n\r\n    const myUtxoArr = res.UTXOArr.sort((a, b) => new BigNumber(a.amount.hex).comparedTo(new BigNumber(b.amount.hex))).map((e) => {return {amount: new BigNumber(e.amount.hex), commitment: e._commitment.hex}});\r\n    let sumBalance = new BigNumber(0);\r\n    myUtxoArr.map((utxo) => {\r\n      sumBalance = sumBalance.plus(utxo.amount);\r\n    });\r\n    pool.shieldedBalance.setValue(sumBalance);\r\n    pool.utxoList = myUtxoArr;\r\n    rootStore.base.startRefetchForce();\r\n  }\r\n\r\n  clearAccountInfo() {\r\n    this.myAddress = this.myPrivteKey = this.myPublicKey = null;\r\n    this.isRegistered = false;\r\n    this.loginType = null;\r\n  }\r\n\r\n  async ApproveLP({ amount, aeolus }: { amount: string; aeolus: AeolusContractState }) {\r\n    const { LpToken } = aeolus;\r\n    LpToken.metas.isApprovingAllowance = true;\r\n    try {\r\n      const res = await this.currentNetwork.execContract({\r\n        address: LpToken.address,\r\n        abi: LpToken.abi,\r\n        method: 'approve',\r\n        params: [aeolus.address, amount]\r\n      });\r\n      const receipt = await res.wait();\r\n      if (receipt.status) {\r\n        LpToken.metas.isApprovingAllowance = false;\r\n        LpToken.allowanceForAeolus.setValue(new BigNumber(amount));\r\n      }\r\n    } catch (error) {\r\n      LpToken.metas.isApprovingAllowance = false;\r\n    }\r\n  }\r\n  async StakeLP({ amount, aeolus }: { amount: string; aeolus: AeolusContractState }) {\r\n    // console.log(aeolus);\r\n    const res = await this.currentNetwork.execContract({\r\n      address: aeolus.address,\r\n      abi: aeolus.abi,\r\n      method: 'deposit',\r\n      params: [amount]\r\n    });\r\n    const receipt = await res.wait();\r\n    if (receipt.status) {\r\n      rootStore.base.startRefetchForce();\r\n    }\r\n  }\r\n  async UnStakeLP({ amount, aeolus }: { amount: string; aeolus: AeolusContractState }) {\r\n    const res = await this.currentNetwork.execContract({\r\n      address: aeolus.address,\r\n      abi: aeolus.abi,\r\n      method: 'withdraw',\r\n      params: [amount]\r\n    });\r\n    const receipt = await res.wait();\r\n    if (receipt.status) {\r\n      rootStore.base.startRefetchForce();\r\n    }\r\n  }\r\n\r\n  setShowConnecter(value) {\r\n    this.currentNetwork.connector.showConnector = value;\r\n  }\r\n\r\n  setCurrentSelectedAmount(index) {\r\n    if (!this.isOnProgress) {\r\n      if(this.currentPoolIndex == index) {\r\n        this.isLockStatus = !this.isLockStatus;\r\n      }\r\n      else {\r\n        if( this.isLockStatus )\r\n          this.isLockStatus = false;\r\n        this.currentPoolIndex = index;\r\n      }\r\n    }\r\n  }\r\n\r\n  async addCYCToMetamask() {\r\n    if(this.currentChain.chainId == 1)\r\n      metamaskUtils.registerToken(this.CYCToken.address, this.CYCToken.symbol, this.CYCToken.decimals, Config.baseURL + '/images/M87Token.svg');\r\n  }\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\n\r\nexport class DevStore {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    const params = new URLSearchParams(window.location.search);\r\n    this.dev = !!params.get('dev');\r\n    this.devUI = !!params.get('devui');\r\n    this.devPool = !!params.get('devpool');\r\n  }\r\n  dev = false;\r\n  devUI = false;\r\n  devPool = false;\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { rootStore } from '../index';\r\nimport { Network } from '../god';\r\n\r\nexport class TransactionState {\r\n  createTime: number;\r\n  amountToken: string;\r\n  amountCYC: string;\r\n  amountCoin: string;\r\n  txHash: string;\r\n  note: string;\r\n  commitment: string;\r\n  // 0: waiting for receipt\r\n  // 1: deposited\r\n  // 2: sending\r\n  // 3: spent\r\n  status = 1;\r\n  network: Network;\r\n  chainId: number;\r\n  poolId: any;\r\n  subsequent: 0;\r\n  tokenSymbol?: string | null;\r\n  constructor(args: Partial<TransactionState>) {\r\n    Object.assign(this, args);\r\n    makeAutoObservable(this);\r\n\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      createTime: this.createTime,\r\n      amountToken: this.amountToken,\r\n      amountCYC: this.amountCYC,\r\n      amountCoin: this.amountCoin,\r\n      txHash: this.txHash,\r\n      note: this.note,\r\n      commitment: this.commitment,\r\n      status: this.status,\r\n      chainId: this.chainId,\r\n      poolId: this.poolId,\r\n      tokenSymbol: this.tokenSymbol\r\n    };\r\n  }\r\n\r\n  get txUrl() {\r\n      return this.chain.explorerURL + '/tx/' + this.txHash;\r\n  }\r\n\r\n  get chain() {\r\n    const { network, chainId, poolId } = this;\r\n    return rootStore.god.getChain({ network, chainId });\r\n  }\r\n\r\n  get pool() {\r\n    const { network, chainId, poolId } = this;\r\n    return rootStore.god.getPool({ network, chainId, poolId });\r\n  }\r\n\r\n  get statusLabel() {\r\n    switch (this.status) {\r\n      case 0:\r\n        return rootStore.lang.t('waiting.for.receipt');\r\n\r\n      case 1:\r\n        return rootStore.lang.t('Deposited');\r\n\r\n      case 2:\r\n        return rootStore.lang.t('Sending');\r\n\r\n      case 3:\r\n        return rootStore.lang.t('Spent');\r\n    }\r\n  }\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { TransactionState } from './lib/TransactionState';\r\nimport { rootStore } from './index';\r\n\r\nconst transactionsKey = 'transactions';\r\n\r\nexport class TransactionStore {\r\n  transactions: TransactionState[] = [];\r\n  constructor() {\r\n    // localStorage.setItem(transactionsKey, \"\");\r\n    makeAutoObservable(this);\r\n    const transaction = localStorage.getItem(transactionsKey);\r\n    if (transaction) {\r\n      this.transactions = JSON.parse(transaction).map((i) => new TransactionState(i));\r\n    }\r\n  }\r\n\r\n  get currentTransactions() {\r\n    // console.log('transactions', this.transactions.length);\r\n    return this.transactions.filter((i) => i.chainId == rootStore.god.currentChain.chainId);\r\n  }\r\n\r\n  fetchTxbyNote(note) {\r\n    // console.log('fetchTxbyNote', this.transactions.length);\r\n    return this.transactions.filter((i) => i.note == note);\r\n  }\r\n\r\n  addTransaction(transaciton: TransactionState) {\r\n    this.transactions.push(transaciton);\r\n    // console.log(this.transactions);\r\n    // console.log(JSON.stringify(this.transactions));\r\n    localStorage.setItem(transactionsKey, JSON.stringify(this.transactions));\r\n    // console.log('addTransaction', transaciton);\r\n  }\r\n\r\n  removeTransaction(transaciton: TransactionState) {\r\n    // console.log('transaciton.txHash', transaciton.txHash);\r\n    this.transactions = this.transactions.filter((i) => i.txHash !== transaciton.txHash);\r\n    localStorage.setItem(transactionsKey, JSON.stringify(this.transactions));\r\n  }\r\n\r\n  save() {\r\n    localStorage.setItem(transactionsKey, JSON.stringify(this.transactions));\r\n  }\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { StorageState } from './type';\r\n\r\nexport class SettingStore {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n  approveMax = new StorageState({ key: 'approveMax', default: true });\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport TimeAgo from 'javascript-time-ago';\r\nimport en from 'javascript-time-ago/locale/en';\r\nimport zh from 'javascript-time-ago/locale/zh';\r\nimport ru from 'javascript-time-ago/locale/ru';\r\nimport { rootStore } from './index';\r\nimport { analyticsETHClient } from '../lib/analytics-bsc-gql';\r\nimport { eventBus } from '../lib/event';\r\nimport { marketUtils } from '../utils/market';\r\nimport { isMobile } from \"react-device-detect\";\r\nimport BigNumber from 'bignumber.js';\r\nimport { BigNumberState } from '../store/type';\r\n\r\nTimeAgo.addDefaultLocale(en);\r\nTimeAgo.addLocale(ru);\r\nTimeAgo.addLocale(zh);\r\n\r\nexport class BaseStore {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    // console.log('BaseStore');\r\n    this.startRefetch();\r\n  }\r\n\r\n  timer: any;\r\n\r\n  downloadShieldedKey = (address, priavetKey) => {\r\n    if( isMobile )\r\n      return;\r\n      \r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([priavetKey], {\r\n      type: \"text/plain\"\r\n    });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = 'Horizon Shielded Key - ' + address.substring(0, 5) + '.txt';\r\n    document.body.appendChild(element);\r\n    element.click();\r\n  };\r\n\r\n  startRefetch() {\r\n    if (this.timer) clearInterval(this.timer);\r\n    this.timer = setInterval(() => {\r\n      eventBus.emit('amount.refetch');\r\n      this.refetchTimer += 1;\r\n    }, 15000);\r\n  }\r\n\r\n  startRefetchForce() {\r\n    eventBus.emit('amount.refetch');\r\n    this.refetchTimer += 1;\r\n    this.startRefetch();\r\n  }\r\n\r\n  tempIndex = Number(window.localStorage.getItem('tempIndex'));\r\n  timeAgos = {\r\n    en: new TimeAgo('en-US'),\r\n    ru: new TimeAgo('ru-RU'),\r\n    zh_CN: new TimeAgo('zh-CN')\r\n  };\r\n  get timeAgo() {\r\n    const timeAgo = this.timeAgos[rootStore.lang.lang];\r\n    return timeAgo || this.timeAgos.en;\r\n  }\r\n  ip = '';\r\n  geo = '';\r\n  apy = 0;\r\n  refetchTimer = 0;\r\n  cycPrice = 0;\r\n  ethPrice = 0;\r\n  coinPrice = [];\r\n  m87PriceETH = new BigNumber('0');\r\n  m87PriceUSD = new BigNumberState({ value: new BigNumber(0) });\r\n  tvl = 0;\r\n\r\n  loading = {\r\n    visible: false,\r\n    msg: '',\r\n    showConfirm: true,\r\n    showCancel: false,\r\n    showLoading: false,\r\n    confirmText: ''\r\n  };\r\n\r\n  pendingPool = {\r\n    visible: false,\r\n  };\r\n\r\n  modal = {\r\n    visible: false,\r\n    title: '',\r\n    msg: ''\r\n  };\r\n  setModal(args: Partial<BaseStore['modal']>) {\r\n    Object.assign(this.modal, { visible: true }, args);\r\n  }\r\n  closeModal() {\r\n    this.modal = {\r\n      visible: false,\r\n      title: '',\r\n      msg: ''\r\n    };\r\n  }\r\n\r\n  setPendingPool() {\r\n    Object.assign(this.pendingPool, { visible: true });\r\n  }\r\n  closePendingPool() {\r\n    this.pendingPool = {\r\n      visible: false,\r\n    };\r\n  }\r\n\r\n  closeLoading() {\r\n    this.loading = {\r\n      visible: false,\r\n      msg: '',\r\n      showConfirm: true,\r\n      showCancel: false,\r\n      showLoading: false,\r\n      confirmText: ''\r\n    };\r\n  }\r\n\r\n  setLoading(args: Partial<BaseStore['loading']>) {\r\n    Object.assign(this.loading, { visible: true, showLoading: false, showConfirm: true }, args);\r\n  }\r\n\r\n  async getCycPrice() {\r\n    const price = await analyticsETHClient.chain.query.price({ symbol: 'ETH' }).execute({ usd: 1 });\r\n    const priceBNB = await analyticsETHClient.chain.query.price({ symbol: 'BNB' }).execute({ usd: 1 });\r\n    const priceMatic = await analyticsETHClient.chain.query.price({ symbol: 'MATIC' }).execute({ usd: 1 });\r\n    this.coinPrice['ETH'] = price.usd;\r\n    this.coinPrice['BNB'] = priceBNB.usd;\r\n    this.coinPrice['MATIC'] = priceMatic.usd;\r\n    this.ethPrice = price.usd;\r\n    this.m87PriceETH = await rootStore.god.getM87PriceETH();\r\n    // console.log('this.m87PriceETH', this.m87PriceETH.toString());\r\n    this.m87PriceUSD.fixed = 9;\r\n    this.m87PriceUSD.setValue(this.m87PriceETH.multipliedBy(this.ethPrice));\r\n  }\r\n  init() {\r\n    this.getCycPrice();\r\n  }\r\n}","import React from 'react';\r\nimport { LangStore } from './lang';\r\nimport { GodStore } from './god';\r\nimport { DevStore } from './dev';\r\nimport { TransactionStore } from './transaction';\r\nimport { SettingStore } from './setting';\r\nimport { BaseStore } from './base';\r\n\r\nexport const rootStore = {\r\n  base: new BaseStore(),\r\n  lang: new LangStore(),\r\n  god: new GodStore(),\r\n  dev: new DevStore(),\r\n  transaction: new TransactionStore(),\r\n  setting: new SettingStore(),\r\n};\r\n\r\nconst StoresContext = React.createContext(rootStore);\r\n\r\nexport const useStore = () => React.useContext(StoresContext);\r\n\r\n//@ts-ignore\r\nwindow._store = rootStore;\r\n","import web3 from 'web3'\r\n\r\nexport const metamaskUtils = {\r\n  registerToken: async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number, tokenImage: string) => {\r\n    const tokenAdded = await window.ethereum.request({\r\n      method: 'wallet_watchAsset',\r\n      params: {\r\n        type: 'ERC20',\r\n        options: {\r\n          address: tokenAddress,\r\n          symbol: tokenSymbol,\r\n          decimals: tokenDecimals,\r\n          image: tokenImage\r\n        }\r\n      }\r\n    });\r\n\r\n    return tokenAdded;\r\n  },\r\n  setupNetwork: async ({\r\n    chainId,\r\n    chainName,\r\n    rpcUrls,\r\n    blockExplorerUrls,\r\n    nativeCurrency\r\n  }: {\r\n    chainId: number;\r\n    chainName: string;\r\n    rpcUrls: string[];\r\n    blockExplorerUrls: string[];\r\n    nativeCurrency: {\r\n      name: string;\r\n      symbol: string;\r\n      decimals: number;\r\n    };\r\n  }) => {\r\n    const provider = window.ethereum;\r\n    if (provider) {\r\n      try {\r\n        await provider.request({\r\n          method: 'wallet_switchEthereumChain',\r\n          params: [{ chainId: web3.utils.toHex(chainId) }]\r\n        });\r\n      } catch (err) {\r\n          // This error code indicates that the chain has not been added to MetaMask\r\n        if (err.code != 4001) {\r\n          await provider.request({\r\n            method: 'wallet_addEthereumChain',\r\n            params: [\r\n              {\r\n                chainId: `0x${chainId.toString(16)}`,\r\n                chainName,\r\n                nativeCurrency,\r\n                rpcUrls,\r\n                blockExplorerUrls\r\n              }\r\n            ]\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { styled } from '../../modules/index';\r\nimport { Icon } from '../../modules/globalStyle';\r\n\r\ninterface IComponentProps {\r\n  imgs?: any;\r\n}\r\n\r\nconst StackBox = styled('div', {\r\n  position: 'relative',\r\n  width: '1.25rem',\r\n  height: '1.25rem',\r\n  '@md': {\r\n    width: '2.5rem',\r\n    height: '2.5rem',\r\n  },\r\n  img: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    top: 0,\r\n    width: '1.25rem',\r\n    height: '1.25rem',\r\n    '@md': {\r\n      width: '2.5rem',\r\n      height: '2.5rem',\r\n    },\r\n    '&:nth-child(1)': {\r\n      zIndex: 2\r\n    },\r\n    '&:nth-child(2)': {\r\n      left: '0.9rem',\r\n      '@md': {\r\n        left: '1.875rem',\r\n      }\r\n    },\r\n\r\n  }\r\n})\r\n\r\nexport const SingleSymbol = (props: IComponentProps) => {\r\n  const { imgs } = props\r\n  return (\r\n    <StackBox>\r\n      <Icon src={imgs[0]} alt=\"\" />\r\n    </StackBox>\r\n  );\r\n}","import BigNumber from 'bignumber.js';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { helper } from '../../utils/helper';\r\nexport class BigNumberInputState {\r\n  value = new BigNumber(0);\r\n  format = '0';\r\n  loading: boolean;\r\n  decimals = 18;\r\n  formatter?: Function;\r\n  constructor(args: Partial<BigNumberInputState>) {\r\n    Object.assign(this, args);\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  setValue(value: BigNumber) {\r\n    this.value = value;\r\n    this.format = helper.number.toPrecisionFloor(new BigNumber(this.value).dividedBy(10 ** this.decimals).toFixed());\r\n    this.setLoading(false);\r\n  }\r\n  setFormat(val) {\r\n    this.format = val;\r\n    this.value = new BigNumber(val).multipliedBy(10 ** this.decimals);\r\n  }\r\n  setLoading(val) {\r\n    this.loading = val;\r\n  }\r\n}\r\n","import { createClient } from '../../generated/bsc/gql/createClient';\r\nimport { request } from 'graphql-request';\r\nimport Config from '../Config';\r\n\r\nexport const analyticsBscClient = createClient({\r\n  fetcher: ({ query, variables }) => request(Config.analyticsBscURL, query, variables).then((data) => ({ data }))\r\n});\r\n\r\nexport const analyticsETHClient = createClient({\r\n  fetcher: ({ query, variables }) => request(Config.analyticsETHURL, query, variables).then((data) => ({ data }))\r\n});\r\n\r\nexport const createAnalyticsEthCilent = ({ APIURL }) =>\r\n  createClient({\r\n    fetcher: ({ query, variables }) => request(APIURL, query, variables).then((data) => ({ data }))\r\n  });\r\n","import { makeAutoObservable, toJS } from 'mobx';\r\nimport { TokenState } from './TokenState';\r\nimport { NetworkState } from './NetworkState';\r\nimport { LoadingState } from './LoadingState';\r\nimport { _ } from '../../lib/lodash';\r\nimport { BigNumberState, MulticallParams } from '../type';\r\nimport { ChainState } from './ChainState';\r\nimport { rootStore } from '../index';\r\nimport BigNumber from 'bignumber.js';\r\nimport { DepositCYCAmountState } from './DepositCYCAmountState';\r\nimport VerifierABI from '../../../public/contracts/Verifier.json';\r\nimport { ContractState } from './ContractState';\r\n\r\nexport enum PoolStateStatus {\r\n  init = 'init',\r\n  onDeposit = 'onDeposit'\r\n}\r\n\r\nexport class PoolState {\r\n  constructor(args: Partial<PoolState>) {\r\n    Object.assign(this, args);\r\n    makeAutoObservable(this, { network: false, chain: false });\r\n  }\r\n  // data\r\n  network: NetworkState;\r\n  chain: ChainState;\r\n  id: any;\r\n  set: string;\r\n  XRCToken?: TokenState;\r\n  relayer: string;\r\n  HorizonPool: ContractState;\r\n  BridgeToken: TokenState;\r\n  symbol: string;\r\n  balance = new BigNumberState({ loading: true });\r\n  shieldedBalance = new BigNumberState({ value: new BigNumber(0) });\r\n  utxoList: any = [];\r\n  maxDepositAmount: BigNumber;\r\n  minDepositAmount: BigNumber;\r\n\r\n  status: PoolStateStatus = PoolStateStatus.init;\r\n  isShow = false;\r\n\r\n  order: Number;\r\n\r\n  get icon() {\r\n    return this.symbol.toLowerCase();\r\n  }\r\n  \r\n  get tvl() {\r\n    return '';\r\n  }\r\n\r\n}\r\n","const Config = {\r\n  rpcURL: 'https://node.cyclone.xyz:443',\r\n  infuraId: 'b92caba4c2f34967814d82d6b0f8a5ee',\r\n  backendServiceURL: 'https://cyclone-backend-server.herokuapp.com/',\r\n  // backendServiceURL: 'http://localhost:3001/',\r\n  iotexRpcURL: 'https://api.iotex.one:443',\r\n  analyticsURL: 'https://analytics.cyclone.xyz/query',\r\n  analyticsBscURL: 'https://analytics-bsc.cyclone.xyz/query',\r\n  analyticsETHURL: 'https://analytics-eth.cyclone.xyz/query',\r\n\r\n  merkleTreeHeight: 20,\r\n  version: 'v1.0',\r\n  donations: {\r\n    address: 'io1sakkyd90hujz8qdtn9g5s33rh5u78ca5hvwrnl'\r\n  },\r\n  baseURL: 'https://blackhole.messier.app',\r\n  // ipAPI: \"http://api.ipstack.com/check?access_key=c3e6ba7f3caf08fb34d8fc5c05bc58f7&fields=ip\",\r\n  defaultAccount: 'io18klsywn05cncek6892uuuq0hhyacqrsh0ep575',\r\n  ipAPI: 'https://freegeoip.app/json/',\r\n  GeoAPI: 'http://api.ipstack.com/{ip}?access_key=c3e6ba7f3caf08fb34d8fc5c05bc58f7',\r\n  intervalForContract: 180000,\r\n  relayer: 'https://relayer.cyclone.xyz',\r\n  assetURL: '',\r\n  retry: 10,\r\n  mimoExchange: {\r\n    address: 'io1z2wmt6y74ctc9l4y4ly73gkynp0p4haj2d326m',\r\n    abi: 'contracts/MimoExchange.json'\r\n  },\r\n  Aeolus: {\r\n    address: 'io1j2rwjfcm7jt7cwdnlkh0203chlrtfnc59424xc',\r\n    abi: 'contracts/Aeolus.json'\r\n  },\r\n  LPToken: {\r\n    address: 'io1z2wmt6y74ctc9l4y4ly73gkynp0p4haj2d326m',\r\n    abi: 'contracts/XRC20.json',\r\n    decimals: 18\r\n  },\r\n  CYCToken: {\r\n    address: 'io1f4acssp65t6s90egjkzpvrdsrjjyysnvxgqjrh',\r\n    tokenName: 'CYC',\r\n    abi: 'contracts/XRC20.json',\r\n    decimals: 18,\r\n    bsc_address: '0x810ee35443639348adbbc467b33310d2ab43c168'\r\n  },\r\n  tokens: [\r\n    {\r\n      name: 'IOTX',\r\n      decimals: 18,\r\n      networkID: 1,\r\n      address: '',\r\n      abi: 'contracts/XRC20.json',\r\n      amountSteps: [\r\n        {\r\n          set: 'Pool 1- Squid',\r\n          poolId: 3,\r\n          address: 'io15w9kwskwl9tn7luhcwrj0rarzjp988pafg07uf',\r\n          abi: 'contracts/IOTXCyclone.json'\r\n        },\r\n        {\r\n          set: 'Pool 2- Dolphin',\r\n          poolId: 4,\r\n          address: 'io1wcd67wk36e3r8eku8scv7g7azsfnqs7z3e38xg',\r\n          abi: 'contracts/IOTXCyclone.json'\r\n        },\r\n        {\r\n          set: 'Pool 3- Shark',\r\n          poolId: 5,\r\n          address: 'io1v667xgkux8uv0gell53ew5tr090c69k85deezn',\r\n          abi: 'contracts/IOTXCyclone.json'\r\n        },\r\n        {\r\n          set: 'Pool 4- Whale',\r\n          poolId: 6,\r\n          address: 'io1wnaks7kectrkxk5v4d7mh97jkqjl4p0690jxfx',\r\n          abi: 'contracts/IOTXCyclone.json'\r\n        },\r\n        {\r\n          set: 'Early Sparrow',\r\n          poolId: 0,\r\n          deprecated: true,\r\n          address: 'io1rqm2keejw4jypgl0w6hr96r054ns63u0hqrfuy',\r\n          abi: 'contracts/IOTXCyclone.json'\r\n        },\r\n        {\r\n          set: 'Early Raven',\r\n          poolId: 1,\r\n          deprecated: true,\r\n          address: 'io1gkeeljp4grwskgq3tl2xqglqy546nhhmytnqqp',\r\n          abi: 'contracts/IOTXCyclone.json'\r\n        },\r\n        {\r\n          set: 'Early Eagle',\r\n          poolId: 2,\r\n          deprecated: true,\r\n          address: 'io1mlcgsv4ma0t6gffpxg2gva3lwqnlj5msradxk6',\r\n          abi: 'contracts/IOTXCyclone.json'\r\n        }\r\n      ]\r\n    }\r\n    // {\r\n    //   name: 'VITA',\r\n    //   decimals: 18,\r\n    //   networkID: 1,\r\n    //   address: 'io1hp6y4eqr90j7tmul4w2wa8pm7wx462hq0mg4tw',\r\n    //   abi: 'contracts/XRC20.json',\r\n    //   amountSteps: [\r\n    //     {\r\n    //       amount: 1,\r\n    //       amoutnValue: '1000000000000000000',\r\n    //       set: 'Pool 1 - 1 VITA',\r\n    //       address: 'io1r73g576mz9l8fruytar07dack8mqe93zafnl9e',\r\n    //       abi: require('./contracts/IOTXCyclone.json'),\r\n    //     },\r\n    //     {\r\n    //       amount: 2,\r\n    //       amoutnValue: '200000000000000000000',\r\n    //       set: 'Pool 2 - 2 VITA',\r\n    //       address: '',\r\n    //       abi: '',\r\n    //     },\r\n    //     {\r\n    //       amount: 3,\r\n    //       amoutnValue: '300000000000000000000',\r\n    //       set: 'Pool 3 - 3 VITA',\r\n    //       address: '',\r\n    //       abi: '',\r\n    //     },\r\n    //   ],\r\n    // },\r\n  ]\r\n};\r\n\r\nexport default Config;\r\n","import { makeAutoObservable, toJS } from 'mobx';\r\nimport { ChainState } from './ChainState';\r\nimport { GodStore } from '../god';\r\nimport { providers as EthersProviders, ethers, Contract, Signer } from 'ethers';\r\nimport { JsonRpcProvider, TransactionResponse, Web3Provider } from '@ethersproject/providers';\r\nimport BigNumber from 'bignumber.js';\r\nimport { analyticsBscClient, createAnalyticsEthCilent } from '../../lib/analytics-bsc-gql';\r\nimport { _ } from '../../lib/lodash';\r\nimport { Contract as MuticallContract, Provider } from '@iotexproject/ethers-multicall';\r\nimport { PoolState } from './PoolState';\r\nimport { StorageState, MulticallParams } from '../type';\r\nimport UniswapABI from '../../../public/contracts/pancakeswap.json';\r\n\r\nexport interface NetworkState {\r\n  god: GodStore;\r\n  chainId: number;\r\n  defaultChainId: number;\r\n  allowChains: number[];\r\n  chains: {\r\n    [key: string]: ChainState;\r\n  };\r\n  currentChain: ChainState;\r\n  metas: {\r\n    [key: string]: any;\r\n  };\r\n  account: string;\r\n  web3: any;\r\n  apyMap: Record<string, { apy: string; adderss: string }>;\r\n  poolTvl: Record<string, { apy: string; adderss: string }>;\r\n\r\n  connector: { latestProvider: StorageState<string>; showConnector: boolean };\r\n  walletInfo: { visible: boolean };\r\n\r\n  findLogs: (args: {\r\n    contractAddress: string;\r\n    first?: number;\r\n  }) => Promise<{\r\n    totalCount: number;\r\n    deposits: Partial<{\r\n      commitment: any;\r\n      leafIndex: any;\r\n      timestamp: any;\r\n      tokenDenomination: any;\r\n      coinDenomination: any;\r\n      cycDenomination: any;\r\n    }>[];\r\n  }>;\r\n  loadBalance: Function;\r\n  loadAnalyticsData: Function;\r\n  multicall(calls: Partial<MulticallParams>[]): Promise<any[]>;\r\n  multicallV2?(calls: Partial<MulticallParams>[]): Promise<any[]>;\r\n  mainnetMulticallV2?(calls: Partial<MulticallParams>[]): Promise<any[]>;\r\n  useMulticallV2(calls: Partial<MulticallParams>[], chainID: number): Promise<any[]>;\r\n  execContract(call: MulticallParams): Promise<Partial<TransactionResponse>>;\r\n  isAddressaVailable(address: string): boolean;\r\n  uniswapMulticall(args: Partial<MulticallParams>);\r\n  test: Function;\r\n}\r\n\r\nexport class ETHNetworkState implements NetworkState {\r\n  constructor(args: Partial<ETHNetworkState>) {\r\n    Object.assign(this, args);\r\n    this.chainId = args.defaultChainId;\r\n    Object.values(this.chains).forEach((chain) => {\r\n      // setup network\r\n      chain.network = this;\r\n      chain.Coin.network = this;\r\n      // chain.LPToken.network = this;\r\n      // chain.CYCToken.network = this;\r\n      // if (chain.LPTokenV2) {\r\n        // chain.LPTokenV2.network = this;\r\n      // }\r\n\r\n      //setup aeolus\r\n      // chain.Aeolus.network = this;\r\n      // chain.Aeolus.LpToken = chain.LPToken;\r\n      // if (chain.AeolusV2) {\r\n        // chain.AeolusV2.network = this;\r\n        // chain.AeolusV2.LpToken = chain.LPTokenV2;\r\n      // }\r\n\r\n      // Object.values(chain.pools).forEach((pool) => {\r\n        // pool.network = this;\r\n        // pool.chain = chain;\r\n      // });\r\n    });\r\n    makeAutoObservable(this, {\r\n      god: false\r\n    });\r\n  }\r\n  ethers: Web3Provider;\r\n  multiCall: Provider;\r\n  signer: Signer;\r\n  god: GodStore;\r\n  chainId: number;\r\n  defaultChainId: number;\r\n  chianId: number;\r\n  allowChains: number[];\r\n  chains: {\r\n    [key: string]: ChainState;\r\n  };\r\n  metas: {\r\n    [key: string]: any;\r\n  } = {};\r\n  account: string;\r\n  web3: any;\r\n  // ui\r\n  connector = {\r\n    latestProvider: new StorageState({ key: 'latestEthProvider' }),\r\n    showConnector: false\r\n  };\r\n  walletInfo = {\r\n    visible: false\r\n  };\r\n  apyMap = {};\r\n  poolTvl = {};\r\n  \r\n  get defaultEthers() {\r\n    const provider = new JsonRpcProvider(this.currentChain.rpcUrl);\r\n    // console.log('this.currentChain.rpcUrl', this.currentChain.rpcUrl);\r\n    return provider;\r\n  }\r\n\r\n  get MainEthers() {\r\n    const provider = new JsonRpcProvider(this.chains[1].rpcUrl);\r\n    // console.log('this.currentChain.rpcUrl', this.currentChain.rpcUrl);\r\n    return provider;\r\n  }\r\n\r\n  get currentChain() {\r\n    return this.chains[this.chainId];\r\n  }\r\n\r\n  get analyticsClient(): ReturnType<typeof createAnalyticsEthCilent> {\r\n    if (!this.currentChain.analyicsClient) {\r\n      this.currentChain.analyicsClient = createAnalyticsEthCilent({ APIURL: this.currentChain.APIURL });\r\n    }\r\n    return this.currentChain.analyicsClient;\r\n  }\r\n\r\n  async findLogs({ contractAddress, first = 0 }: { contractAddress: string; first: number }) {\r\n    const res = await this.analyticsClient.query({\r\n      deposits: [\r\n        {\r\n          //@ts-ignore\r\n          sort: 'timestamp',\r\n          //@ts-ignore\r\n          orderDirection: 'desc',\r\n          first,\r\n          where: { contract: contractAddress }\r\n        },\r\n        {\r\n          totalCount: 1,\r\n          deposits: {\r\n            commitment: 1,\r\n            leafIndex: 1,\r\n            timestamp: 1,\r\n            tokenDenomination: 1,\r\n            coinDenomination: 1,\r\n            cycDenomination: 1\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    res.data.deposits.deposits.sort((a, b) => a.leafIndex - b.leafIndex);\r\n    res.data.deposits.deposits.forEach((i) => {\r\n      i.commitment = `0x${i.commitment}`;\r\n    });\r\n    return res.data.deposits;\r\n  }\r\n\r\n  uniswapMulticall(args: Partial<MulticallParams>) {\r\n    return Object.assign({ address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D', abi: UniswapABI }, args);\r\n  }\r\n\r\n  async loadBalance(coinBalance) {\r\n    if (!this.ethers || !this.account) return;\r\n    const balance = await this.ethers.getBalance(this.account);\r\n    coinBalance.setValue(new BigNumber(balance.toString()));\r\n  }\r\n  async loadAnalyticsData() {\r\n    const res = await this.analyticsClient.query({\r\n      apy: {\r\n        address: 1,\r\n        apy: 1\r\n      },\r\n      total: {\r\n        lpLocked: 1,\r\n        lpOldLocked: 1\r\n      },\r\n      tokensInPoolPerDay: [\r\n        { count: 1 },\r\n        {\r\n          address: 1,\r\n          values: {\r\n            value: 1\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    if (res.data) {\r\n      this.apyMap = _.keyBy(\r\n        res.data.apy.map((i) => {\r\n          //@ts-ignore\r\n          i.apy = new BigNumber(i.apy).multipliedBy(100 * 365).toFixed(2);\r\n          i.address = i.address.toLowerCase();\r\n          return i;\r\n        }),\r\n        'address'\r\n      );\r\n      this.poolTvl = _.keyBy(\r\n        res.data.tokensInPoolPerDay.map((i) => ({ address: i.address.toLowerCase(), value: i.values[0].value })),\r\n        'address'\r\n      );\r\n\r\n      if (res.data.total.lpOldLocked) {\r\n        this.currentChain.AeolusV2.lpLocked = res.data.total.lpLocked;\r\n        this.currentChain.Aeolus.lpLocked = res.data.total.lpOldLocked;\r\n      } else {\r\n        this.currentChain.Aeolus.lpLocked = res.data.total.lpLocked;\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  readMultiContract({ address, abi, method, params = [] }: MulticallParams) {\r\n    const contract = new MuticallContract(address, abi);\r\n    return contract[method](...params);\r\n  }\r\n  async execContract({ address, abi, method, params = [], options = {} }: MulticallParams): Promise<Partial<TransactionResponse>> {\r\n    const contract = new Contract(address, abi, this.signer || this.ethers);\r\n    return contract[method](...params, options);\r\n  }\r\n  async multicall(calls: MulticallParams[]): Promise<any[]> {\r\n    //@ts-ignore\r\n    return this.multiCall.all(calls.map((i) => this.readMultiContract(i)));\r\n  }\r\n\r\n  async multicallV2(calls: MulticallParams[]): Promise<any[]> {\r\n    // console.log('this.multiCall', this.multiCall);\r\n    // console.log(calls);\r\n    //@ts-ignore\r\n    const res = await this.multiCall.all(calls.map((i) => this.readMultiContract(i)));\r\n    res.forEach((v, i) => {\r\n      const callback = calls[i].handler;\r\n      if (typeof callback == 'function') {\r\n        //@ts-ignore\r\n        callback(v);\r\n      } else {\r\n        if (callback.setValue) {\r\n          callback.setValue(new BigNumber(v.toString()));\r\n        }\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  async mainnetMulticallV2(calls: MulticallParams[]): Promise<any[]> {\r\n    // console.log('this.multiCall', this.multiCall);\r\n    // console.log(calls);\r\n    //@ts-ignore\r\n    let mainnetMulticall = new Provider(this.MainEthers);\r\n    //@ts-ignore\r\n    mainnetMulticall._multicallAddress = this.chains[1].MultiCall.address;\r\n    const res = await mainnetMulticall.all(calls.map((i) => this.readMultiContract(i)));\r\n    res.forEach((v, i) => {\r\n      const callback = calls[i].handler;\r\n      if (typeof callback == 'function') {\r\n        //@ts-ignore\r\n        callback(v);\r\n      } else {\r\n        if (callback.setValue) {\r\n          callback.setValue(new BigNumber(v.toString()));\r\n        }\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  async useMulticallV2(calls: MulticallParams[], chainID: number): Promise<any[]> {\r\n    // console.log('this.multiCall', this.multiCall);\r\n    // console.log(calls);\r\n    //@ts-ignore\r\n    let mainnetMulticall = new Provider(new JsonRpcProvider(this.chains[chainID].rpcUrl));\r\n    //@ts-ignore\r\n    mainnetMulticall._multicallAddress = this.chains[chainID].MultiCall.address;\r\n    const res = await mainnetMulticall.all(calls.map((i) => this.readMultiContract(i)));\r\n    res.forEach((v, i) => {\r\n      const callback = calls[i].handler;\r\n      if (typeof callback == 'function') {\r\n        //@ts-ignore\r\n        callback(v);\r\n      } else {\r\n        if (callback.setValue) {\r\n          callback.setValue(new BigNumber(v.toString()));\r\n        }\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  isAddressaVailable(address: string): boolean {\r\n    return ethers.utils.isAddress(address);\r\n  }\r\n\r\n  async test() {}\r\n}\r\n","import { ETHNetworkState } from '../store/lib/NetworkState';\r\nimport { BSCMainnetConfig } from './BSCMainnetConfig';\r\n// import { BSCTestnetConfig } from './BSCTestnetConfig';\r\n// import { ETHRopstenConfig } from './ETHRopstenConfig';\r\nimport { ETHMainnetConfig } from './ETHMainConfig';\r\n// import { ETHRinkebyConfig } from './ETHRinkebyConfig';\r\n// import { PolygonMainnetConfig } from './PolygonMainnetConfig';\r\n\r\n// latest poolId: 15\r\n\r\nexport const EthereumConfigV2 = new ETHNetworkState({\r\n  defaultChainId: ETHMainnetConfig.chainId,\r\n  allowChains: [ETHMainnetConfig.chainId, BSCMainnetConfig.chainId/*, PolygonMainnetConfig.chainId*/],\r\n  chains: {\r\n    [BSCMainnetConfig.chainId]: BSCMainnetConfig,\r\n    // [PolygonMainnetConfig.chainId]: PolygonMainnetConfig,\r\n    [ETHMainnetConfig.chainId]: ETHMainnetConfig,\r\n  }\r\n});","import BigNumber from 'bignumber.js';\r\nimport { makeAutoObservable } from 'mobx';\r\nimport { helper } from '../utils/helper';\r\n\r\nBigNumber.config({ EXPONENTIAL_AT: 30 })\r\n\r\nexport class BigNumberState {\r\n  value = new BigNumber(0);\r\n  loading: boolean;\r\n  decimals = 18;\r\n  fixed = this.decimals;\r\n  \r\n  formatter?: Function = () => {\r\n    const fixednum = this.speFixed > 5 ? 5 : this.speFixed;\r\n    return this.getRawFormat({fixed: fixednum});\r\n  }\r\n  constructor(args: Partial<BigNumberState>) {\r\n    Object.assign(this, args);\r\n    makeAutoObservable(this);\r\n  }\r\n  get format() {\r\n    if (this.loading) return '...';\r\n    return this.getFormat();\r\n  }\r\n\r\n  get speFixed() {\r\n    const str = this.value.toString();\r\n    let idx = str.length - 1;\r\n    while(str[idx] == '0') {\r\n      idx --;\r\n    }\r\n    const num = this.decimals - (str.length - idx - 1);\r\n    return str == '0' || num < 0 ? 0 : num \r\n  }\r\n\r\n  getFormat({ decimals = this.decimals, fixed = this.fixed }: { decimals?: number; fixed?: number } = {}) {\r\n    if (this.loading) return '...';\r\n    if (this.formatter) return this.formatter(this);\r\n    return helper.number.toPrecisionFloor(new BigNumber(this.value).dividedBy(10 ** decimals).toFixed(fixed), {\r\n      decimals: this.fixed\r\n    });\r\n  }\r\n  getRawFormat({ decimals = this.decimals, fixed = this.fixed }: { decimals?: number; fixed?: number } = {}) {\r\n    return helper.number.toPrecisionFloor(new BigNumber(this.value).dividedBy(10 ** decimals).toFixed(fixed), {\r\n      decimals: this.fixed\r\n    });\r\n  }\r\n  setDecimals(decimals: number) {\r\n    this.decimals = decimals;\r\n  }\r\n  setValue(value: BigNumber) {\r\n    this.value = value;\r\n    this.setLoading(false);\r\n  }\r\n  setLoading(val) {\r\n    this.loading = val;\r\n  }\r\n}\r\n\r\nexport class StorageState<T> {\r\n  key: string;\r\n  value: T | any;\r\n  default: T | any;\r\n  constructor(args: Partial<StorageState<T>>) {\r\n    Object.assign(this, args);\r\n    makeAutoObservable(this);\r\n    this.load();\r\n  }\r\n\r\n  load() {\r\n    const value = localStorage.getItem(this.key);\r\n    this.value = helper.json.safeParse(value);\r\n    if (this.value == null) {\r\n      this.value = this.default;\r\n    }\r\n  }\r\n\r\n  save(value: any) {\r\n    this.value = value;\r\n    localStorage.setItem(this.key, JSON.stringify(value));\r\n  }\r\n\r\n  clear() {\r\n    localStorage.removeItem(this.key);\r\n  }\r\n}\r\n\r\nexport class LazyState<T> {\r\n  _value: T;\r\n  defaultValue: T;\r\n  loading = false;\r\n  loader: Function;\r\n  constructor(args: Partial<LazyState<T>>) {\r\n    Object.assign(this, args);\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get value() {\r\n    if (!this._value) {\r\n      this.update();\r\n      return this.defaultValue;\r\n    }\r\n    return this._value;\r\n  }\r\n  async update() {\r\n    if (this.loading) return;\r\n    this.loading = true;\r\n    const data = await this.loader();\r\n    this.setValue(data);\r\n    this.loading = false;\r\n  }\r\n  setValue(val: any) {\r\n    this._value = val;\r\n  }\r\n}\r\n\r\nexport interface MulticallParams {\r\n  address: string;\r\n  abi: any;\r\n  method: string;\r\n  params?: any[];\r\n  options?: any;\r\n  handler?: any;\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\nimport { TokenState, LPTokenState } from './TokenState';\r\nimport { PoolState } from './PoolState';\r\nimport { ContractState, AeolusContractState } from './ContractState';\r\nimport { NetworkState } from './NetworkState';\r\nimport { BigNumberState } from '../type';\r\nimport { rootStore } from '../index';\r\nimport { _ } from '../../lib/lodash';\r\n\r\nexport class ChainState {\r\n  name: string;\r\n  path: string;\r\n  network: NetworkState;\r\n  chainId: number;\r\n  rpcUrl: string;\r\n  gnosisRpcUrl: string;\r\n  baseRpcUrl: string;\r\n  explorerURL: string;\r\n  explorerName: string;\r\n  swapName: string;\r\n  swapURL: string;\r\n  APIURL: string;\r\n  relayer: string;\r\n  L1FinalizationRate: number;\r\n  L2FinalizationRate: number;\r\n  userRequestTopic: string;\r\n  AffirmationCompletedTopic: string;\r\n  L2UserRequestTopic: string;\r\n  pools: {\r\n    [key: string]: PoolState;\r\n  };\r\n  metas: {\r\n    rewardPerBlock?: number;\r\n    [key: string]: any;\r\n  } = {};\r\n  Aeolus: AeolusContractState;\r\n  AeolusV2: AeolusContractState;\r\n  UniswapV2CycloneRouter: ContractState;\r\n  MultiCall: ContractState;\r\n  LPToken: LPTokenState;\r\n  LPTokenV2: LPTokenState;\r\n  CYCToken: TokenState;\r\n  XRCToken: TokenState;\r\n  L1Helper: ContractState;\r\n  HorizonPool: ContractState;\r\n  HomeAMB: ContractState;\r\n  AMBBridgeHelper: ContractState;\r\n  Coin: TokenState;\r\n  analyicsClient: any;\r\n  sort = {\r\n    apy: 'desc',\r\n    tvl: null\r\n  };\r\n\r\n  constructor(args: Partial<ChainState>) {\r\n    Object.assign(this, args);\r\n    makeAutoObservable(this, { network: false });\r\n  }\r\n\r\n  getPool(key: string): PoolState {\r\n    return this.pools[key];\r\n  }\r\n\r\n  get poolList() {\r\n    let pools = Object.values(this.pools)\r\n\r\n    _.each(this.sort, (v, k) => {\r\n      if (!v) return;\r\n      pools = pools.sort((a, b) => (v == 'desc' ? Number(a.order) - Number(b.order) : Number(b.order) - Number(a.order)));\r\n    });\r\n\r\n    return pools;\r\n  }\r\n\r\n  setSort(key: string) {\r\n    const _val = this.sort[key];\r\n    //@ts-ignore\r\n    this.sort = {};\r\n    this.sort[key] = _val == 'desc' ? 'asc' : 'desc';\r\n  }\r\n}\r\n","'use strict'\r\nvar __assign =\r\n  (this && this.__assign) ||\r\n  function() {\r\n    __assign =\r\n      Object.assign ||\r\n      function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n          s = arguments[i]\r\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p]\r\n        }\r\n        return t\r\n      }\r\n    return __assign.apply(this, arguments)\r\n  }\r\nObject.defineProperty(exports, '__esModule', { value: true })\r\nvar __1 = require('graphql-typed-client-hotfix')\r\n\r\nexports.createClient = function(options) {\r\n  var typeMap = __1.linkTypeMap(require('./typeMap.json'))\r\n  return __1.createClient(\r\n    __assign({}, options, {\r\n      queryRoot: typeMap.Query,\r\n    }),\r\n  )\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\n\r\nexport const Button = observer(props => {\r\n  return (\r\n    <div\r\n      className={props.avaliable ? 'button' : 'buttonDisable'}\r\n      style={{\r\n        pointerEvents: props.avaliable ? 'initial' : 'none',\r\n        width: props.fullWidth ? '100%' : props.width ? props.width : 'none',\r\n        fontSize: props.fontSize ? props.fontSize : 'none',\r\n        height: props.height ? props.height : 'none',\r\n        padding: '0 10px'\r\n      }}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.href ? (\r\n        <a\r\n          href={props.href}\r\n          rel=\"noopener noreferrer\"\r\n          style={{\r\n            textOverflow: 'ellipsis',\r\n            overflow: 'hidden',\r\n            whiteSpace: 'nowrap',\r\n            padding: '0, 10px',\r\n            boxSizing: 'border-box',\r\n            color: '#fff',\r\n            '&:hover': {\r\n              color: '$primary'\r\n            }\r\n          }}\r\n        >\r\n          {props.disable && props.disabledLabel ? props.disabledLabel : props.label}\r\n        </a>\r\n      ) : (\r\n        <>{props.disable && props.disabledLabel ? props.disabledLabel : props.label}</>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Button;\r\n","import { styled, keyframes, global } from './index';\r\n\r\nexport const antdPopoverStyle = global({\r\n  '.ant-popover-placement-top>.ant-popover-content>.ant-popover-arrow': {\r\n    borderColor: '#00ff99cf !important'\r\n  },\r\n  '.ant-popover-placement-right>.ant-popover-content>.ant-popover-arrow': {\r\n    borderColor: '#00ff99cf !important'\r\n  },\r\n  '.ant-popover-placement-bottom>.ant-popover-content>.ant-popover-arrow': {\r\n    borderColor: '#00ff99cf !important'\r\n  },\r\n  '.ant-popover-inner': {\r\n    backgroundColor: '#00ff99cf !important'\r\n  },\r\n  '.ant-popover-inner-content': {\r\n    fontSize: '13px !important',\r\n    color: '#fff !important'\r\n  }\r\n});\r\n\r\nexport const Wrapper = styled('div', {\r\n  height: '100%',\r\n  margin: 'auto',\r\n  maxWidth: '90%',\r\n  '@md': {\r\n    maxWidth: '942px'\r\n  },\r\n  a: {\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n      color: '$primary'\r\n    }\r\n  }\r\n});\r\n\r\nconst rotate = keyframes({\r\n  from: { transform: 'rotatez(0deg)' },\r\n  to: { transform: 'rotatez(360deg)' }\r\n});\r\n\r\nexport const Button = styled('button', {\r\n  outline: 'none',\r\n  height: '40px',\r\n  fontSize: '1rem',\r\n  cursor: 'pointer',\r\n  border: 'none',\r\n  fontFamily: 'Montserrat',\r\n  variants: {\r\n    size: {\r\n      mini: {\r\n        width: '94px'\r\n      },\r\n      small: {\r\n        width: '125px'\r\n      },\r\n      medium: {\r\n        width: '180px'\r\n      },\r\n      large: {\r\n        width: '390px'\r\n      }\r\n    },\r\n    color: {\r\n      primary: {\r\n        backgroundColor: '$primary',\r\n        color: '$dark1',\r\n        fontWeight: 600,\r\n        '&:hover': {\r\n          backgroundColor: '$primary600'\r\n        },\r\n        '&:disabled': {\r\n          backgroundColor: '$info400',\r\n          color: '$textGray900',\r\n          cursor: 'not-allowed'\r\n        },\r\n        '&:focus': {\r\n          backgroundColor: '$primary200'\r\n        }\r\n      },\r\n      info: {\r\n        backgroundColor: '$info',\r\n        color: '$primary',\r\n        '&:hover': {\r\n          backgroundColor: '$info'\r\n        },\r\n        '&:disabled': {\r\n          backgroundColor: '$info400',\r\n          color: '$textGray900',\r\n          cursor: 'not-allowed'\r\n        }\r\n      },\r\n      normal: {\r\n        backgroundColor: '$info',\r\n        color: '$textLight',\r\n        borderLeft: '1px solid $borderPrimary',\r\n        fontWeight: 600,\r\n        '&:hover': {\r\n          background: '$bg4',\r\n          color: '$primary',\r\n          borderLeft: '1px solid $primary'\r\n        }\r\n      },\r\n      active: {\r\n        background: '$bg4',\r\n        color: '$primary',\r\n        borderLeft: '1px solid $primary',\r\n        fontWeight: 600\r\n      },\r\n      approve: {\r\n        background: '$bg4',\r\n        color: '$primary',\r\n        border: '1px solid $primary',\r\n        fontWeight: 600,\r\n        '&:hover': {\r\n          background: '$bg4',\r\n          color: '$primary',\r\n          border: '1px solid $primary'\r\n        },\r\n        '&:disabled': {\r\n          backgroundColor: '$info',\r\n          color: '$textLight',\r\n          border: '1px solid $borderPrimary',\r\n          cursor: 'not-allowed'\r\n        }\r\n      }\r\n    },\r\n    responsive: {\r\n      mini: {\r\n        width: '56px',\r\n        height: '24px',\r\n        '@md': {\r\n          width: '94px',\r\n          height: 40\r\n        }\r\n      },\r\n      medium: {\r\n        width: 106,\r\n        height: 33,\r\n        fontSize: '0.875rem',\r\n        '@md': {\r\n          width: 180,\r\n          height: 40,\r\n          fontSize: '1rem'\r\n        }\r\n      },\r\n      lg: {\r\n        width: 138,\r\n        height: 30,\r\n        fontSize: '0.75rem',\r\n        '@md': {\r\n          width: 180,\r\n          height: 40,\r\n          fontSize: '1rem'\r\n        }\r\n      },\r\n      large: {\r\n        width: '100%',\r\n        height: 30,\r\n        '@md': {\r\n          width: 390,\r\n          height: 40\r\n        }\r\n      }\r\n    },\r\n    status: {\r\n      normal: {\r\n        opacity: 1,\r\n        pointerEvents: 'auto',\r\n        cursor: 'pointer',\r\n        '&:before': {\r\n          width: 0\r\n        }\r\n      },\r\n      loading: {\r\n        opacity: 0.8,\r\n        cursor: 'default',\r\n        pointerEvents: 'none',\r\n        '&:before': {\r\n          display: 'inline-block',\r\n          content: '',\r\n          width: '1rem',\r\n          height: '1rem',\r\n          marginRight: '0.5rem',\r\n          borderRadius: '50%',\r\n          verticalAlign: '-10%',\r\n          clipPath: 'polygon(0% 0%, 100% 0%, 100% 50%, 0% 50%)',\r\n          border: '2px solid $textPrimary',\r\n          animation: `${rotate} 1s linear infinite`\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const LoadingIcon = styled('div', {\r\n  opacity: 0.8,\r\n  cursor: 'default',\r\n  pointerEvents: 'none',\r\n  '&:before': {\r\n    display: 'inline-block',\r\n    content: '',\r\n    width: '1.5rem',\r\n    height: '1.5rem',\r\n    marginRight: '0.5rem',\r\n    borderRadius: '50%',\r\n    verticalAlign: '-10%',\r\n    clipPath: 'polygon(0% 0%, 100% 0%, 100% 70%, 0% 70%)',\r\n    border: '2px solid $primary',\r\n    animation: `${rotate} 1s linear infinite`\r\n  }\r\n})\r\n\r\nexport const Text = styled('div', {\r\n  fontFamily: 'IBM Plex Sans',\r\n  fontWeight: 'normal',\r\n  textAlign: 'left',\r\n  cursor: 'default',\r\n  variants: {\r\n    size: {\r\n      mini: {\r\n        fontSize: '0.75rem'\r\n      },\r\n      md: {\r\n        fontSize: '0.875rem'\r\n      },\r\n      small: {\r\n        fontSize: '1rem'\r\n      },\r\n      lg: {\r\n        fontSize: '1.125rem'\r\n      },\r\n      medium: {\r\n        fontSize: '1.5rem'\r\n      },\r\n      large: {\r\n        fontSize: '2.25rem'\r\n      }\r\n    },\r\n    color: {\r\n      primary: {\r\n        color: '$primary'\r\n      },\r\n      yellow: {\r\n        color: '$textInfo'\r\n      },\r\n      gray: {\r\n        color: '$textGray'\r\n      },\r\n      white: {\r\n        color: '$textPrimary'\r\n      },\r\n      light: {\r\n        color: '$textLight'\r\n      },\r\n      black: {\r\n        color: '$bg1'\r\n      },\r\n      warning: {\r\n        color: '$textWarn'\r\n      },\r\n      lightGray: {\r\n        color: '$textGray200'\r\n      }\r\n    },\r\n    weight: {\r\n      light: {\r\n        fontWeight: 300\r\n      },\r\n      normal: {\r\n        fontWeight: 400\r\n      },\r\n      medium: {\r\n        fontWeight: 500\r\n      },\r\n      semibold: {\r\n        fontWeight: 600\r\n      },\r\n      bold: {\r\n        fontWeight: 'bold'\r\n      }\r\n    },\r\n    family: {\r\n      ibm: {\r\n        fontFamily: 'IBM Plex Sans'\r\n      },\r\n      Montserrat: {\r\n        fontFamily: 'Montserrat'\r\n      }\r\n    },\r\n    cursor: {\r\n      pointer: {\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n          color: '$primary'\r\n        }\r\n      },\r\n      none: {\r\n        cursor: 'auto'\r\n      }\r\n    },\r\n    hover: {\r\n      light: {\r\n        '&:hover': {\r\n          color: '$primary'\r\n        }\r\n      },\r\n      white: {\r\n        '&:hover': {\r\n          color: '$textPrimary'\r\n        }\r\n      }\r\n    },\r\n    display: {\r\n      inline: {\r\n        display: 'inline-block'\r\n      }\r\n    },\r\n    loading: {\r\n      show: {\r\n        position: 'relative',\r\n        '&::before': {}\r\n      }\r\n    },\r\n    align: {\r\n      center: {\r\n        textAlign: 'center'\r\n      },\r\n      left: {\r\n        textAlign: 'left'\r\n      },\r\n      right: {\r\n        textAlign: 'right'\r\n      }\r\n    },\r\n    overflow: {\r\n      truncate: {\r\n        width: '100%',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whitespace: 'nowrap'\r\n      }\r\n    },\r\n    responsive: {\r\n      base: {\r\n        display: 'none',\r\n        '@md': {\r\n          width: '20%',\r\n          display: 'block'\r\n        }\r\n      },\r\n      sm: {\r\n        fontSize: '0.75rem',\r\n        '@md': {\r\n          fontSize: '0.875rem'\r\n        }\r\n      },\r\n      md: {\r\n        fontSize: '0.75rem',\r\n        '@md': {\r\n          fontSize: '1rem'\r\n        }\r\n      },\r\n      lg: {\r\n        fontSize: '0.875rem',\r\n        '@md': {\r\n          fontSize: '1.125rem'\r\n        }\r\n      },\r\n      large: {\r\n        fontSize: '2rem',\r\n        '@md': {\r\n          fontSize: '2.25rem'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const FlexBox = styled('div', {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  variants: {\r\n    direction: {\r\n      row: {\r\n        flexDirection: 'row'\r\n      },\r\n      column: {\r\n        flexDirection: 'column'\r\n      }\r\n    },\r\n    justify: {\r\n      between: {\r\n        justifyContent: 'space-between'\r\n      },\r\n      start: {\r\n        justifyContent: 'flex-start'\r\n      },\r\n      center: {\r\n        justifyContent: 'center'\r\n      },\r\n      end: {\r\n        justifyContent: 'flex-end'\r\n      }\r\n    },\r\n    items: {\r\n      start: {\r\n        alignItems: 'flex-start'\r\n      },\r\n      end: {\r\n        alignItems: 'flex-end'\r\n      },\r\n      center: {\r\n        alignItems: 'center'\r\n      }\r\n    },\r\n    responsive: {\r\n      rc: {\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start',\r\n        '@md': {\r\n          flexDirection: 'row',\r\n          alignItems: 'center'\r\n        }\r\n      },\r\n      cr: {\r\n        flexDirection: 'row',\r\n        '@md': {\r\n          flexDirection: 'column'\r\n        }\r\n      },\r\n      base: {\r\n        mb: '1rem',\r\n        '@md': {\r\n          mb: 0\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const Icon = styled('img', {\r\n  width: '1.375rem',\r\n  cursor: 'pointer'\r\n});\r\n\r\nexport const BorderBox = styled('div', {\r\n  padding: '0.75rem 0',\r\n  borderBottom: '1px solid $borderPrimary',\r\n  '@md': {\r\n    padding: '1.25rem 0'\r\n  }\r\n});\r\n\r\nexport const Input = styled('input', {\r\n  width: '100%',\r\n  color: '$textPrimary',\r\n  border: '1px solid $textLight',\r\n  backgroundColor: '$bg3',\r\n  height: '40px',\r\n  padding: '0 1.25rem',\r\n  outline: 'none',\r\n  '&::placeholder': {\r\n    color: '$textLight'\r\n  },\r\n  '&:hover': {\r\n    borderColor: '$primary'\r\n  },\r\n  '&:focus': {\r\n    borderColor: '$primary'\r\n  }\r\n});\r\n\r\nexport const TextArea = styled('textarea', {\r\n  width: '100%',\r\n  border: '1px solid $textLight',\r\n  color: '$textPrimary',\r\n  backgroundColor: '$bg3',\r\n  height: '100px',\r\n  padding: '0 1.25rem',\r\n  '&::placeholder': {\r\n    color: '$textLight'\r\n  },\r\n  '&:hover': {\r\n    borderColor: '$primary'\r\n  },\r\n  '&:focus': {\r\n    borderColor: '$primary'\r\n  }\r\n});\r\n\r\nexport const Section = styled('div', {\r\n  variants: {\r\n    responsive: {\r\n      base: {\r\n        width: '100%',\r\n        '@md': {\r\n          width: '46%'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const DropBox = styled('div', {\r\n  height: 'auto',\r\n  willChange: 'max-height',\r\n  transition: 'height 0.3s ease',\r\n  padding: '0.75rem 0.75rem 1.25rem 0.75rem',\r\n  '@md': {\r\n    padding: '1.5rem 3.125rem'\r\n  },\r\n  variants: {\r\n    color: {\r\n      primary: {\r\n        backgroundColor: '$bg5'\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { EventEmitter } from 'events';\r\nimport TypedEmitter from 'typed-emitter';\r\nimport Web3 from 'web3';\r\n\r\ninterface MessageEvents {\r\n  'web3.onConnect': (web3: Web3) => void;\r\n  'web3.onAccount': (web3: string) => void;\r\n  'amount.refetch': () => void;\r\n  'loading.confirm': () => void;\r\n  'loading.cancel': () => void;\r\n  'wallet.logout': () => void;\r\n  'pendingPool.confirm': () => void;\r\n  'pendingPool.cacel': () => void;\r\n  'modal.confirm': () => void;\r\n  'modal.cancel': () => void;\r\n}\r\n\r\nexport const eventBus = new EventEmitter() as TypedEmitter<MessageEvents>;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport Button from './Button';\r\nimport { Popover } from 'antd';\r\nimport { css } from '../modules/index';\r\nimport { useStore } from '../store';\r\nimport { observer, useLocalStore, useObserver } from 'mobx-react-lite';\r\nimport BigNumber from 'bignumber.js';\r\nimport { toast } from 'react-toastify';\r\nimport { debounce } from 'lodash';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { BigNumberState } from '../store/type';\r\nimport { Icon, Text, FlexBox, Wrapper, BorderBox, DropBox, Section, Input } from '../modules/globalStyle';\r\nimport { SingleSymbol } from './SingleSymbol';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { injectedConnector } from '../lib/web3-react-bsc';\r\nimport { GasPriceOracle } from 'gas-price-oracle';\r\nimport { toWei, toBN, BN } from 'web3-utils';\r\nimport { BigNumberInputState } from '../store/lib/BignumberInputState';\r\nimport bigInt from 'big-integer';\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\n\r\nexport function toHex(number, length = 32) {\r\n  const str = number instanceof Buffer ? number.toString('hex') : bigInt(number).toString(16);\r\n  return '0x' + str.padStart(length * 2, '0');\r\n}\r\n\r\nfunction gasPricesETH(value = 80) {\r\n  const tenPercent = (Number(value) * 5) / 100;\r\n  const max = Math.max(tenPercent, 3);\r\n  const bumped = Math.floor(Number(value) + max);\r\n  return toHex(toWei(bumped.toString(), 'gwei'));\r\n}\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    MessierOrange: {\r\n      main: '#FF7518',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nlet clipboardy = null;\r\n\r\nexport const DepositViewForBSC = observer(props => {\r\n  const { lang, god: pageStore, base: baseStore } = useStore();\r\n  const { activate, error, deactivate } = useWeb3React();\r\n  \r\n  const store = useLocalStore(() => ({\r\n    tokens: null,\r\n    // indexOfToken: 0,\r\n    // indexOfAmountSet: 0,\r\n    isShowDetail: false,\r\n    indexOfPool: null,\r\n    currentAmount: new BigNumberState({ loading: true }),\r\n    currentShieldedAmount: new BigNumberState({ value: new BigNumber(0), fixed: 5 }),\r\n    currentCYCDenomination: new BigNumberState({ loading: true }),\r\n    currentCoinDenomination: new BigNumberState({ loading: true }),\r\n    poolSize: -1,\r\n    anonymityFee: new BigNumberState({ loading: true }),\r\n    ApproveStatus: \"disabled\",\r\n    TokenApproveStatus: \"disabled\",\r\n    DepositStatus: \"disabled\",\r\n    WithdrawStatus: \"disabled\",\r\n    isConnecting: false,\r\n    gasPrice: '0',\r\n    depositAmountInput: new BigNumberInputState({}),\r\n\r\n    setDepositAmount(val) {\r\n      if(store.currentAmount.loading || store.gasPrice == '0')\r\n        return;\r\n      const subArr = val.split(\".\");\r\n      if(subArr[1]) {\r\n        if(subArr[1].length > store.depositAmountInput.decimals)\r\n          return;\r\n      }\r\n      store.depositAmountInput.setFormat(val);\r\n    },\r\n\r\n    setMaxLimitAmount() {\r\n      if(store.currentAmount.loading || store.gasPrice == '0')\r\n        return;\r\n      const value = new BigNumber(this.maxLimitAmount.toString());\r\n      store.depositAmountInput.setValue(value);\r\n    },\r\n\r\n    getAnonymityFee() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n      this.anonymityFee.setValue(pageStore.CurrentSet.anonymityPoolFee.value);\r\n    },\r\n\r\n    // get currentCYCDenominationLabel() {\r\n    //   return '...';\r\n    // },\r\n\r\n    get xrcApproved() {\r\n      if( pageStore.CurrentSet.XRCToken ) {\r\n        return (\r\n          new BigNumber(pageStore.CurrentSet.XRCToken.allownaceForRouter.value).comparedTo(store.depositAmountInput.value) >= 0 &&\r\n          store.depositAmountInput.value.comparedTo('0') > 0\r\n        );\r\n      }\r\n      return false;\r\n    },\r\n\r\n    async fetchGasPrice(netId) {\r\n      try {\r\n        const options = {\r\n        chainId: netId,\r\n        defaultRpc: pageStore.currentChain.rpcUrl,\r\n        timeout: 10000,\r\n        defaultFallbackGasPrices: {\r\n          instant: 28,\r\n          fast: 22,\r\n          standard: 17,\r\n          low: 11,\r\n        },\r\n        };\r\n        // Bump fees for Ethereum network\r\n        if (netId == 1 || netId == 56 || netId == 137) {\r\n          const oracle = new GasPriceOracle(options);\r\n          const fallbackGasPrices = {\r\n            instant: 70,\r\n            fast: 31,\r\n            standard: 20,\r\n            low: 7,\r\n          };\r\n          const gas = await oracle.gasPrices(fallbackGasPrices);\r\n          return gasPricesETH(gas.instant);\r\n        }\r\n      } catch (err) {\r\n        return '0x0';\r\n      }\r\n    },\r\n    \r\n    init(chainID) {\r\n      // console.log('EthereumConfig.tokensOnEthereum[chainID] =', EthereumConfig.tokensOnEthereum[chainID]);\r\n\r\n      store.tokens = pageStore.currentChain.pools;\r\n      // console.log('store.tokens =', store.tokens);\r\n      // console.log('cyc denomination', store.currentCYCDenomination.format);\r\n      // console.log(store.tokens.length);\r\n      if( store.tokens ) {\r\n        // console.log('ininin');\r\n        this.indexOfPool = props.indexOfPool;\r\n      }\r\n      // console.log('this.indexOfPool =', this.indexOfPool);\r\n      this.loadAmount();\r\n    },\r\n\r\n    loadAmount() {\r\n      if (pageStore.web3) {\r\n        store.getCurrentAmount();\r\n        // store.getPoolSize();\r\n        // store.getAnonymityFee();\r\n        // store.getCurrentCYCDenomination();\r\n        // store.getCurrentCoinDenomination();\r\n      }\r\n      store.getCurrentShieldedAmount();\r\n      if (pageStore.account) {\r\n        // pageStore.getBalanceOfXRC();\r\n        // pageStore.getBNBtoBuyCYC();\r\n        // pageStore.getBalanceOfCoin();\r\n      }\r\n    },\r\n\r\n    // onSelectAmount(id) {\r\n    //   pageStore.setCurrentSelectedAmount(id);\r\n    // },\r\n\r\n    // onSelectToken(event) {\r\n    //   const idx = event.target.value;\r\n    //   store.indexOfToken = idx;\r\n    //   props.onSelectToken(idx);\r\n    // },\r\n\r\n    onSelectPool() {\r\n      pageStore.setCurrentSelectedAmount(store.indexOfPool);\r\n      if(pageStore.CurrentSet.XRCToken)\r\n        store.currentAmount.setDecimals(pageStore.CurrentSet.XRCToken.decimals);\r\n      this.loadAmount();\r\n    },\r\n\r\n    async onConnect() {\r\n      pageStore.connectingStatus = \"connecting\";\r\n      await activate(injectedConnector);\r\n      pageStore.eth.connector.latestProvider.save('inject');\r\n      if(!pageStore.isConnect && pageStore.connectingStatus == 'connecting') {\r\n        pageStore.connectingStatus = 'idle';\r\n      }\r\n      if(pageStore.isConnect) {\r\n        baseStore.startRefetchForce();\r\n      }\r\n      \r\n    },\r\n\r\n    logout() {\r\n      deactivate();\r\n      pageStore.latestEthProvider.clear();\r\n    },\r\n\r\n    // onSelectPool(event) {\r\n    //   const tempInt = event.target.value;\r\n    //   store.indexOfPool = tempInt;\r\n    //   props.onSelectAmount(tempInt);\r\n    // },\r\n\r\n    async onApproveXRC() {\r\n      store.TokenApproveStatus = \"loading\";\r\n      pageStore.isOnProgress = true;\r\n      try {\r\n        await props.onApproveXRC(pageStore.CurrentSet.XRCToken, store.depositAmountInput.value.toString());\r\n        store.TokenApproveStatus = \"disabled\";\r\n        pageStore.isOnProgress = false;\r\n      } catch (error) {\r\n        store.TokenApproveStatus = \"notApproved\";\r\n        pageStore.isOnProgress = false;\r\n      }\r\n    },\r\n\r\n    async deposit() {\r\n      store.DepositStatus = \"loading\";\r\n      pageStore.isOnProgress = true;\r\n      try {\r\n        await props.onDeposit(store.depositAmountInput.value);\r\n        store.DepositStatus = \"notActive\";\r\n        store.depositAmountInput.setValue(new BigNumber(0));\r\n        pageStore.isOnProgress = false;\r\n      } catch (error) {\r\n        store.DepositStatus = \"active\";\r\n        pageStore.isOnProgress = false;\r\n      }\r\n    },\r\n\r\n    async getCurrentAmount() {\r\n      if (!store.indexOfPool || pageStore.CurrentSet.balance.loading) {\r\n        return;\r\n      }\r\n      const value = pageStore.CurrentSet.balance.value;\r\n      store.currentAmount.setValue(value);\r\n      store.currentAmount.setLoading(false);\r\n    },\r\n\r\n    getCurrentShieldedAmount() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n      const value = pageStore.CurrentSet.shieldedBalance.value;\r\n      store.currentShieldedAmount.setValue(value);\r\n    },\r\n\r\n    getCurrentCoinDenomination() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n\r\n      const value = pageStore.CurrentSet.coinDenomination.value;\r\n      store.currentCoinDenomination.setValue(value);\r\n      store.currentCoinDenomination.setLoading(false);\r\n    },\r\n\r\n    async getCurrentCYCDenomination() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n\r\n      // const set = store.tokens[store.indexOfToken].amountSteps[store.indexOfPool];\r\n      const value = pageStore.CurrentSet.depositCYCAmount.value;\r\n      store.currentCYCDenomination.setValue(value);\r\n      store.currentCYCDenomination.setLoading(false);\r\n    },\r\n\r\n    async getPoolSize() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n\r\n      store.poolSize = -1;\r\n      if (store.tokens) {\r\n        store.poolSize = pageStore.CurrentSet.numOfShare;\r\n      }\r\n    },\r\n\r\n    onClickCopyButton(event) {\r\n      if (clipboardy) {\r\n        clipboardy.focus();\r\n        clipboardy.select();\r\n        const result = document.execCommand('copy');\r\n        if (result === 'unsuccessful') {\r\n          clipboardy.blur();\r\n        } else {\r\n          clipboardy.blur();\r\n          toast.dark(lang.t('address.copied'), {\r\n            position: 'bottom-center',\r\n            autoClose: 3000,\r\n            hideProgressBar: true,\r\n            closeOnClick: false,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            progress: undefined\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    onChangeBuyCYCCheckBox(event) {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n      \r\n      pageStore.CurrentSet.allowBuyCYC = event.target.checked && !event.target.disabled;\r\n    },\r\n\r\n    get allowDeposit() {\r\n      if(pageStore.CurrentSet.XRCToken && !store.xrcApproved)\r\n        return false;\r\n      if (store.depositAmountInput.value.comparedTo(pageStore.CurrentSet.minDepositAmount) >= 0 && \r\n          store.depositAmountInput.value.comparedTo(store.maxLimitAmount) <= 0 && \r\n          store.depositAmountInput.value.comparedTo(pageStore.CurrentSet.maxDepositAmount) <= 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    \r\n    get maxLimitAmount() {\r\n      if(pageStore.CurrentSet.XRCToken) {\r\n        const totalBalance = toBN(this.currentAmount.value.toString());\r\n        let maxValue = totalBalance\r\n        return maxValue;\r\n      }\r\n      else {\r\n        const expense = toBN(this.gasPrice).mul(toBN(3e5));\r\n        const totalBalance = toBN(this.currentAmount.value.toString());\r\n        let maxValue = totalBalance.sub(expense);\r\n\r\n        if(maxValue.lt(toBN(0)))\r\n          maxValue = toBN(0);\r\n\r\n        return maxValue;\r\n      }\r\n    }\r\n  }));\r\n\r\n  const ActionButton = useObserver(() => {\r\n    return (\r\n      <div>\r\n        \r\n      </div>\r\n    );\r\n  });\r\n\r\n  const AnonymityPool = useObserver(() => {\r\n    if(store.isShowDetail)\r\n    {\r\n      if (!pageStore.isConnect) {\r\n        return (\r\n          <DropBox color=\"primary\">\r\n            <FlexBox justify=\"center\" items=\"center\">\r\n              <ThemeProvider theme={theme}>\r\n                <LoadingButton\r\n                  color=\"MessierOrange\"\r\n                  loadingPosition='start'\r\n                  loading={store.isConnecting}\r\n                  variant=\"outlined\"\r\n                  onClick={store.onConnect}\r\n                  sx={{\r\n                    height: '40px',\r\n                    fontWeight: 'bold',\r\n                    maxWidth: '200px'\r\n                  }}\r\n                  fullWidth\r\n                  >\r\n                  {lang.t('connect')}\r\n                </LoadingButton>\r\n              </ThemeProvider>\r\n            </FlexBox>\r\n          </DropBox>\r\n        );\r\n      }\r\n      return (\r\n        <div>\r\n        <DropBox color=\"primary\">\r\n          <FlexBox justify=\"between\" responsive=\"rc\">\r\n            <Section css={{ width: '100%', mb: '1.5rem', '@md': { width: '46%', mb: 0 } }}>\r\n              <div\r\n                style={{\r\n                  marginTop: '1rem'\r\n                }}\r\n              >\r\n                {/* {store.currentAmount.value.comparedTo(0) <= 0 && (\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;\r\n                      {pageStore.balanceOfCoin.getFormat({ decimals: pageStore.currentChain.Coin.decimals }) + ' ' + pageStore.currentChain.Coin.symbol}  &nbsp;\r\n                      {store.currentCoinDenomination.value.comparedTo(pageStore.balanceOfCoin.value) > 0 && (\r\n                        <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('amount.invalid')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                ></div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div\r\n                      className={styles.denomenation.className}\r\n                      style={{\r\n                        marginBottom: '0.5rem'\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        {pageStore.currentChain.Coin.symbol} &nbsp;{lang.t('Denomination')}:&nbsp;\r\n                        {store.currentCoinDenomination.getFormat({\r\n                        decimals: pageStore.currentChain.Coin.decimals,\r\n                        fixed: 8\r\n                      })}\r\n                      </div>\r\n                    </div>\r\n                  </BorderBox>\r\n                )} */}\r\n\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;{store.currentAmount.format}&nbsp;{store.indexOfPool}&nbsp;&nbsp;\r\n                        {/* <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('amount.invalid')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                ></div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </> */}\r\n                    </div>\r\n\r\n                    <div\r\n                      className={styles.denomenation.className}\r\n                      style={{\r\n                        marginBottom: '0.5rem'\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        {lang.t('shielded')}&nbsp;{lang.t('balance')}&nbsp;:&nbsp;{store.currentShieldedAmount.format}&nbsp;{store.indexOfPool}\r\n                      </div>\r\n                    </div>\r\n                  </BorderBox>\r\n\r\n                {/* {store.currentCYCDenomination.value.comparedTo(0) > 0 && pageStore.account && (\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;\r\n                      {pageStore.balanceOfCYC.format}\r\n                      &nbsp;M87&nbsp;\r\n                      {store.currentCYCDenomination.value.comparedTo(pageStore.balanceOfCYC.value) > 0 ? (\r\n                        <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('cyc.tips')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                >\r\n                                  <a\r\n                                    style={{\r\n                                      color: 'black',\r\n                                      textDecoration: 'underline'\r\n                                    }}\r\n                                    href={pageStore.currentChain.swapURL}\r\n                                  >\r\n                                    {lang.t('click.buy')}\r\n                                  </a>\r\n                                </div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className={styles.denomenation.className}>\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        {lang.t('cyc.denomenation')}:&nbsp;{store.currentCYCDenomination.format}\r\n                        <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('cyc.reward')}\r\n                                </div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/reward.png\" style={{ cursor: 'pointer', paddingLeft: 5, marginTop: -2 }} alt=\"\" />\r\n                        </Popover>\r\n                      </div>\r\n\r\n                      \r\n                    </div>\r\n\r\n                    {pageStore.balanceOfCYC.value.comparedTo(store.currentCYCDenomination.value) < 0 && pageStore.account && (\r\n                      <div\r\n                        className=\"flex item-center\"\r\n                        style={{\r\n                          marginTop: '0.5rem'\r\n                        }}\r\n                      >\r\n                        <input\r\n                          disabled={\r\n                            pageStore.balanceOfCoin.value.comparedTo(\r\n                              store.currentCoinDenomination.value.plus(pageStore.BNBtoBuyCYC.value)\r\n                            ) < 0\r\n                          }\r\n                          id=\"check\"\r\n                          type=\"checkbox\"\r\n                          style={{ verticalAlign: 'middle' }}\r\n                          onChange={store.onChangeBuyCYCCheckBox}\r\n                        />\r\n                        <label htmlFor=\"check\" style={{ marginLeft: 10, verticalAlign: 'middle', color: 'white' }}>\r\n                          {lang.t('use.coin.to.buy.cyc', {\r\n                            amount: pageStore.BNBtoBuyCYC.format,\r\n                            symbol: pageStore.currentChain.Coin.symbol\r\n                          })}\r\n                        </label>\r\n                      </div>\r\n                    )}\r\n                  </BorderBox>\r\n                )} */}\r\n\r\n                {/* {store.currentAmount.value.comparedTo(0) > 0 && (\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;\r\n                      {pageStore.balanceOfCoin.getFormat({ decimals: pageStore.currentChain.Coin.decimals })} ETH\r\n                      {store.currentCoinDenomination.value.comparedTo(pageStore.balanceOfCoin.value) > 0 ? (\r\n                        <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('amount.invalid')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                ></div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div\r\n                      className={styles.denomenation.className}\r\n                      style={{\r\n                        marginBottom: '0.5rem'\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        ETH&nbsp;{lang.t('Denomination')}:&nbsp;\r\n                        {store.currentCoinDenomination.getFormat({ decimals: pageStore.currentChain.Coin.decimals })}\r\n                      </div>\r\n                    </div>\r\n                  </BorderBox>\r\n                )} */}\r\n              </div>\r\n            </Section>\r\n            \r\n            <Section css={{ width: '100%', '@md': { width: '46%' } }}>\r\n              {/* <Button\r\n                avaliable={\r\n                  pageStore.isConnect &&\r\n                  !store.cycApproved &&\r\n                  new BigNumber(pageStore.balanceOfCYC.value).comparedTo('0') &&\r\n                  store.currentCYCDenomination.value.comparedTo(0) > 0\r\n                }\r\n                label={lang.t('approve') + ' M87'}\r\n                disabledLabel={lang.t('approved')}\r\n                disable={store.cycApproved}\r\n                onClick={store.onApproveCYC}\r\n\r\n                LoadingButton\r\n              /> */}\r\n              <div style={{ flexDirection: 'column', justifyContent: 'space-between', height: '160px', display: 'flex' }}>\r\n                <Section css={{ position: 'relative', mb: '1.5rem' }}>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    step={0.1}\r\n                    css={{ pr: '50px' }}\r\n                    value={store.depositAmountInput.format}\r\n                    onChange={(e) => store.setDepositAmount(e.target.value)}\r\n                  />\r\n                  <Text\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    cursor=\"pointer\"\r\n                    onClick={store.setMaxLimitAmount}\r\n                    css={{ position: 'absolute', lineHeight: '40px', top: 0, right: 11 }}\r\n                  >\r\n                    {lang.t('Max')}\r\n                  </Text>\r\n                </Section>\r\n                <Section css={{ position: 'relative', mb: '1.5rem' }}>\r\n                  <Input\r\n                    css={{ pr: '50px' }}\r\n                    disabled\r\n                    value={pageStore.myAddress}\r\n                    onChange={(e) => {console.log(\"changed\")}}\r\n                  />\r\n                </Section>\r\n                <ThemeProvider theme={theme}>\r\n                  {/* {\r\n                    pageStore.CurrentSet.XRCToken && store.currentAmount.value.comparedTo(0) > 0 ?\r\n                      <LoadingButton\r\n                      color=\"MessierOrange\"\r\n                      loadingPosition='start'\r\n                      loading={store.TokenApproveStatus == \"loading\"}\r\n                      disabled={store.TokenApproveStatus != \"notApproved\"}\r\n                      variant=\"outlined\"\r\n                      onClick={store.onApproveXRC}\r\n                      sx={{\r\n                        height: '40px',\r\n                        fontWeight: 'bold',\r\n                        color: store.TokenApproveStatus != \"notApproved\" ? '#acb3bb !important' : '',\r\n                        background: store.TokenApproveStatus != \"notApproved\" ? '#b9b9b952 !important' : ''\r\n                      }}\r\n                      fullWidth\r\n                      >\r\n                        { store.TokenApproveStatus == \"approved\" ? lang.t('approved') : lang.t('approve.token', { token: pageStore.CurrentSet.XRCToken.symbol })}\r\n                      </LoadingButton> : (\r\n                          <LoadingButton\r\n                          color=\"MessierOrange\"\r\n                          loadingPosition='start'\r\n                          loading={store.ApproveStatus == \"loading\"}\r\n                          disabled={store.ApproveStatus != \"notApproved\"}\r\n                          variant=\"outlined\"\r\n                          onClick={store.onApproveCYC}\r\n                          sx={{\r\n                            height: '40px',\r\n                            fontWeight: 'bold',\r\n                            color: store.ApproveStatus != \"notApproved\" ? '#acb3bb !important' : '',\r\n                            background: store.ApproveStatus != \"notApproved\" ? '#b9b9b952 !important' : ''\r\n                          }}\r\n                          fullWidth\r\n                          >\r\n                            { store.ApproveStatus == \"approved\" ? lang.t('approved') : lang.t('approve')}\r\n                          </LoadingButton>\r\n                      )\r\n                  } */}\r\n                  <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                  {\r\n                    pageStore.CurrentSet.XRCToken && store.TokenApproveStatus != \"approved\" &&\r\n                      <LoadingButton\r\n                        color=\"MessierOrange\"\r\n                        loadingPosition='start'\r\n                        loading={store.TokenApproveStatus == \"loading\"}\r\n                        disabled={store.TokenApproveStatus != \"notApproved\"}\r\n                        variant=\"outlined\"\r\n                        onClick={store.onApproveXRC}\r\n                        sx={{\r\n                          height: '40px',\r\n                          width: '48%',\r\n                          fontWeight: 'bold',\r\n                          color: store.TokenApproveStatus != \"notApproved\" ? '#acb3bb !important' : '',\r\n                          background: store.TokenApproveStatus != \"notApproved\" ? '#b9b9b952 !important' : ''\r\n                        }}\r\n                        fullWidth\r\n                      >\r\n                          { store.TokenApproveStatus == \"approved\" ? lang.t('approved') : lang.t('approve.token', { token: store.indexOfPool })}\r\n                      </LoadingButton>\r\n                  }\r\n                    <LoadingButton\r\n                      color=\"MessierOrange\"\r\n                      loadingPosition='start'\r\n                      loading={store.DepositStatus == \"loading\"}\r\n                      disabled={store.DepositStatus != \"active\"}\r\n                      variant=\"outlined\"\r\n                      sx={{\r\n                        height: '40px',\r\n                        width: store.TokenApproveStatus == \"approved\" || !pageStore.CurrentSet.XRCToken ? '100%' : '48%',\r\n                        fontWeight: 'bold',\r\n                        color: store.DepositStatus != \"active\" ? '#acb3bb !important' : '',\r\n                        background: store.DepositStatus != \"active\" ? '#b9b9b952 !important' : ''\r\n                      }}\r\n                      onClick={store.deposit}\r\n                      fullWidth\r\n                    >\r\n                      {lang.t('Deposit')}\r\n                    </LoadingButton>\r\n                  </div>\r\n                </ThemeProvider>\r\n              </div>\r\n             {/* <div className={styles.buttonPanel.className}>{ActionButton}</div> */}\r\n            </Section>\r\n          </FlexBox>\r\n        </DropBox>\r\n      </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // console.log('props.chainID', props.chainID);\r\n    store.init(props.chainID);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(pageStore.connectingStatus);\r\n    if(pageStore.connectingStatus == 'idle')\r\n      store.isConnecting = false;\r\n    else\r\n      store.isConnecting = true;\r\n  }, [pageStore.connectingStatus]);\r\n\r\n  useEffect(() => {\r\n    store.isShowDetail = (store.indexOfPool == pageStore.currentPoolIndex) && !pageStore.isLockStatus;\r\n  }, [pageStore.currentPoolIndex, pageStore.isLockStatus]);\r\n\r\n  useEffect(() => {\r\n    // console.log('DepositStatus', store.DepositStatus);\r\n    if(store.DepositStatus == \"loading\")\r\n      return;\r\n    if( store.allowDeposit )\r\n      store.DepositStatus = \"active\";\r\n    else\r\n      store.DepositStatus = 'notActive';\r\n  }, [ store.allowDeposit, baseStore.refetchTimer ]);\r\n\r\n  useEffect(() => {\r\n    if( !pageStore.CurrentSet.XRCToken )\r\n      return;\r\n    // console.log(\"Approve consider\");\r\n    if(store.TokenApproveStatus == \"loading\")\r\n      return;\r\n    // console.log(store.ApproveStatus);\r\n    if( store.xrcApproved ) {\r\n      store.TokenApproveStatus = \"approved\";\r\n      // console.log('1');\r\n    }\r\n    else {\r\n      // console.log('2'); \r\n      const isActive = pageStore.isConnect &&\r\n        new BigNumber(pageStore.balanceOfXRC.value).comparedTo('0') > 0 &&\r\n        store.depositAmountInput.value.comparedTo(0) > 0 &&\r\n        store.depositAmountInput.value.comparedTo(pageStore.CurrentSet.minDepositAmount) >= 0 && \r\n        store.depositAmountInput.value.comparedTo(store.maxLimitAmount) <= 0 && \r\n        store.depositAmountInput.value.comparedTo(pageStore.CurrentSet.maxDepositAmount) <= 0;\r\n        \r\n        console.log(new BigNumber(pageStore.balanceOfXRC.value).comparedTo('0') > 0);\r\n        console.log(store.depositAmountInput.value.comparedTo(0) > 0);\r\n        console.log(store.depositAmountInput.value.comparedTo(pageStore.CurrentSet.minDepositAmount) >= 0);\r\n        console.log(store.depositAmountInput.value.comparedTo(store.maxLimitAmount) <= 0);\r\n        console.log(store.depositAmountInput.value.comparedTo(pageStore.CurrentSet.maxDepositAmount) <= 0);\r\n\r\n      if( isActive )\r\n        store.TokenApproveStatus = \"notApproved\";\r\n      else\r\n        store.TokenApproveStatus = \"disabled\";\r\n    }\r\n  }, [pageStore.isConnect, store.xrcApproved, pageStore.balanceOfXRC, store.depositAmountInput.value ]);\r\n\r\n  useEffect(() => {\r\n    // console.log('props.chainID =', props.chainID);\r\n\r\n    store.init(props.chainID);\r\n  }, [props.chainID, pageStore.web3, pageStore.account]);\r\n\r\n  useEffect(() => {\r\n    store.loadAmount();\r\n    const doNecessary = async () => {\r\n      store.gasPrice = await store.fetchGasPrice(pageStore.currentChain.chainId);\r\n    }\r\n    doNecessary();\r\n  }, [baseStore.refetchTimer, pageStore.CurrentSet.balance.value]);\r\n\r\n  return (\r\n    <>\r\n    { \r\n      <Section>\r\n        <BorderBox css={{ padding: '0.6rem 0', cursor: 'pointer' }}\r\n        onClick={\r\n          () => {\r\n              store.onSelectPool(); \r\n          }\r\n        }>\r\n          <FlexBox justify=\"between\">\r\n            <FlexBox css={{ width: 'max-content', cursor: 'pointer', '@md': { width: '32%' } }}>\r\n              {\r\n                <SingleSymbol imgs={['/images/home/' + (store.indexOfPool ? store.indexOfPool.toLowerCase() : '') + '.png']} />\r\n              }\r\n              <Text size=\"small\" color=\"primary\" css={{ ml: '0.8rem' }}>\r\n                <span>\r\n                  {store.tokens &&\r\n                    store.tokens[store.indexOfPool].set\r\n                  }\r\n                </span>\r\n              </Text>\r\n            </FlexBox>\r\n            <Text size=\"small\" color=\"white\" css={{ flex: 1, textAlign: 'right', cursor: 'pointer' }}>\r\n              {/* { (pageStore.currentChain.chainId == 1) && (store.indexOfPool == 1 || store.indexOfPool == 10) && store.tokens[store.indexOfPool].Apy.format + ' % / ' + store.tokens[store.indexOfPool].dailyApy.getFormat({fixed: 3}) + ' %' } */}\r\n            </Text>\r\n            <FlexBox justify=\"end\" css={{ width: 'max-content', cursor: 'pointer', '@md': { width: '40%' } }}>\r\n              <Text size=\"small\" color=\"white\" css={{ display: 'none', '@md': { display: 'block' } }}>\r\n                {/* ${store.tokens[store.indexOfPool].tvl.format} */}\r\n              </Text>\r\n              <Icon\r\n                css={{ width: '1rem', ml: '1rem', '@md': { width: '1.375rem', ml: '1.5rem' } }}\r\n                src={`/images/home/${store.isShowDetail ? 'dropup' : 'dropdown'}.png`}\r\n              ></Icon>\r\n            </FlexBox>\r\n          </FlexBox>\r\n        </BorderBox>\r\n        {AnonymityPool}\r\n      </Section>\r\n    }\r\n    </>\r\n  );\r\n});\r\n\r\nconst styles = {\r\n  depositView: css({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'column',\r\n    height: '530',\r\n    '@md': {\r\n      minHeight: '390px'\r\n    }\r\n  }),\r\n  token: css({\r\n    marginTop: '1.2rem',\r\n    marginLeft: '7vw',\r\n    '@xs': {\r\n      marginTop: '25px',\r\n      marginLeft: '40px'\r\n    },\r\n    '.select': {\r\n      border: '1px solid #45BCB8',\r\n      color: 'white',\r\n      background: 'transparent',\r\n      height: '40px',\r\n      width: '95%',\r\n      appearance: 'none',\r\n      fontSize: '18px',\r\n      fontFamily: \"'IBM Plex Mono', monospace\",\r\n      paddingLeft: '0.5rem'\r\n    }\r\n  }),\r\n  amount: css({\r\n    width: '95%',\r\n    overflow: 'hidden',\r\n    marginTop: '2rem',\r\n    marginLeft: '7vw',\r\n    marginBottom: '2rem',\r\n    '@xs': {\r\n      width: '94%',\r\n      overflow: 'auto',\r\n      marginLeft: '40px',\r\n      paddingRight: '40px'\r\n    },\r\n    '.stepperTrack': {\r\n      width: '100%',\r\n      borderWidth: '2px',\r\n      borderStyle: 'solid',\r\n      borderColor: '#45bcb8',\r\n      marginTop: '20px'\r\n    }\r\n  }),\r\n  buttonPanel: css({\r\n    height: '40px',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ffffff12',\r\n    color: '#44ee95',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    cursor: 'pointer',\r\n    textTransform: 'uppercase',\r\n    border: 'solid 1px',\r\n    borderColor: '#44ee95',\r\n    '&:hover': {\r\n      backgroundColor: '#00ff0312'\r\n    },\r\n    marginBottom: '1rem',\r\n    marginTop: '2.5rem',\r\n  }),\r\n  bottomTips: css({\r\n    marginLeft: '10%',\r\n    marginRight: '4vw',\r\n    fontSize: '12px',\r\n    padding: '0 0 0.3rem 3rem',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    '@md': {\r\n      marginLeft: '64px',\r\n      marginRight: '28px',\r\n      fontSize: '12px',\r\n      paddingLeft: '40px',\r\n      paddingBottom: '0.35rem',\r\n      whiteSpace: 'nowrap'\r\n    }\r\n  }),\r\n  poolInfos: css({\r\n      marginTop: '0.7rem'\r\n  }),\r\n  poolAudio: css({\r\n    paddingRight: '5%',\r\n    ul: {\r\n      listStyleType: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      flexWrap: 'wrap',\r\n      padding: 0,\r\n      margin: 0,\r\n      li: {\r\n        width: '100%',\r\n        padding: '4px 0',\r\n        border: '1px solid #45BCB8',\r\n        textAlign: 'left',\r\n        marginBottom: '8px',\r\n        paddingLeft: '4px',\r\n        fontSize: '0.875rem',\r\n        cursor: 'pointer',\r\n        '@md': {\r\n          width: '48%'\r\n        },\r\n        '&:hover': {\r\n          background: 'rgba(69, 188, 184, 0.35)'\r\n        }\r\n      },\r\n      '.active': {\r\n        fontWeight: 'bold',\r\n        color: '#38DCD5',\r\n        borderColor: '#45BCB8',\r\n        background: 'rgba(69, 188, 184, 0.35)'\r\n      }\r\n    }\r\n  }),\r\n  logo: css({\r\n    width: '24px',\r\n    height: '24px'\r\n  }),\r\n  denomenation: css({\r\n    width: '95%',\r\n    rowGap: '0.5rem',\r\n    flexBetweenCenter: 'column',\r\n    '.input': {\r\n      marginBottom: '8px'\r\n    },\r\n    '.button': {\r\n      width: '100%'\r\n    },\r\n    '.buttonDisable': {\r\n      width: '100%'\r\n    },\r\n    '@xs': {\r\n      columnGap: '1rem',\r\n      flexBetweenCenter: 'row',\r\n      '.input': {\r\n        marginBottom: 0\r\n      },\r\n      '.button': {\r\n        width: 'max-content'\r\n      },\r\n      '.buttonDisable': {\r\n        width: 'max-content'\r\n      }\r\n    },\r\n    '@md': {\r\n      '.input': {\r\n        marginBottom: 0\r\n      }\r\n    }\r\n  }),\r\n  approveBtn: css({\r\n    padding: '0 10px',\r\n    width: '100%',\r\n    height: '34px',\r\n    outline: 'none',\r\n    border: '1px solid #45BCB8',\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: '0.875rem',\r\n    backgroundColor: '#45BCB8',\r\n    '@xs': {\r\n      height: '40px',\r\n      maxWidth: '152px'\r\n    },\r\n    '@md': {\r\n      maxWidth: '90px',\r\n      fontSize: '12px'\r\n    },\r\n    xl: {\r\n      maxWidth: '152px',\r\n      fontSize: '1rem'\r\n    },\r\n    '&:disabled': {\r\n      backgroundColor: 'black'\r\n    }\r\n  }),\r\n  loginOut: css({\r\n    flexCenterCenter: 'row',\r\n    paddingLeft: '8%',\r\n    marginBottom: '2rem',\r\n    '@md': {\r\n      marginBottom: '3rem'\r\n    },\r\n    span: {\r\n      textDecoration: 'underline',\r\n      fontSize: '1',\r\n      cursor: 'pointer',\r\n      fontWeight: 'bold'\r\n    }\r\n  })\r\n};\r\n\r\nexport default DepositViewForBSC;\r\n","import React, { useEffect, useMemo } from 'react';\r\nimport Button from './Button';\r\nimport { Popover } from 'antd';\r\nimport { css } from '../modules/index';\r\nimport { useStore } from '../store';\r\nimport { observer, useLocalStore, useObserver } from 'mobx-react-lite';\r\nimport BigNumber from 'bignumber.js';\r\nimport { toast } from 'react-toastify';\r\nimport { debounce } from 'lodash';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { BigNumberState } from '../store/type';\r\nimport { Icon, Text, FlexBox, Wrapper, BorderBox, DropBox, Section, Input } from '../modules/globalStyle';\r\nimport { SingleSymbol } from './SingleSymbol';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { injectedConnector } from '../lib/web3-react-bsc';\r\nimport { GasPriceOracle } from 'gas-price-oracle';\r\nimport { toWei, toBN, BN } from 'web3-utils';\r\nimport { BigNumberInputState } from '../store/lib/BignumberInputState';\r\nimport bigInt from 'big-integer';\r\nimport axios from 'axios';\r\nimport { hooks } from '../lib/hooks';\r\nimport { isAddress } from 'web3-utils'\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { display } from '@mui/system';\r\n\r\nexport function toHex(number, length = 32) {\r\n  const str = number instanceof Buffer ? number.toString('hex') : bigInt(number).toString(16);\r\n  return '0x' + str.padStart(length * 2, '0');\r\n}\r\n\r\nfunction gasPricesETH(value = 80) {\r\n  const tenPercent = (Number(value) * 5) / 100;\r\n  const max = Math.max(tenPercent, 3);\r\n  const bumped = Math.floor(Number(value) + max);\r\n  return toHex(toWei(bumped.toString(), 'gwei'));\r\n}\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    MessierOrange: {\r\n      main: '#FF7518',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nlet clipboardy = null;\r\n\r\nexport const WithdrawViewForETH = observer(props => {\r\n  const { lang, god: pageStore, base: baseStore } = useStore();\r\n  const { activate, error, deactivate } = useWeb3React();\r\n  \r\n  const store = useLocalStore(() => ({\r\n    tokens: null,\r\n    // indexOfToken: 0,\r\n    // indexOfAmountSet: 0,\r\n    isShowDetail: false,\r\n    indexOfPool: null,\r\n    currentAmount: new BigNumberState({ loading: true }),\r\n    currentShieldedAmount: new BigNumberState({ value: new BigNumber(0), fixed: 5 }),\r\n    currentCYCDenomination: new BigNumberState({ loading: true }),\r\n    currentCoinDenomination: new BigNumberState({ loading: true }),\r\n    poolSize: -1,\r\n    anonymityFee: new BigNumberState({ loading: true }),\r\n    ApproveStatus: \"disabled\",\r\n    TokenApproveStatus: \"disabled\",\r\n    DepositStatus: \"disabled\",\r\n    WithdrawStatus: \"disabled\",\r\n    isConnecting: false,\r\n    gasPrice: '0',\r\n    depositAmountInput: new BigNumberInputState({}),\r\n    recipientAddress: null,\r\n    isUsingMax: false,\r\n    \r\n    setDepositAmount(val) {\r\n      store.isUsingMax = false;\r\n      if(store.currentShieldedAmount.loading || store.gasPrice == '0')\r\n        return;\r\n      const subArr = val.split(\".\");\r\n      if(subArr[1]) {\r\n        if(subArr[1].length > store.depositAmountInput.decimals)\r\n          return;\r\n      }\r\n      store.depositAmountInput.setFormat(val);\r\n    },\r\n\r\n    setMaxLimitAmount() {\r\n      if(store.currentShieldedAmount.loading || store.gasPrice == '0')\r\n        return;\r\n      store.isUsingMax = true;\r\n      store.depositAmountInput.setValue(this.maxLimitAmount);\r\n    },\r\n\r\n    getAnonymityFee() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n      this.anonymityFee.setValue(pageStore.CurrentSet.anonymityPoolFee.value);\r\n    },\r\n    \r\n    async checkValidAccount(recipient) {\r\n      if(!isAddress(recipient)) {\r\n        store.recipientAddress = '';\r\n        return;\r\n      }\r\n      store.recipientAddress = recipient;\r\n    },\r\n\r\n    // get currentCYCDenominationLabel() {\r\n    //   return '...';\r\n    // },\r\n\r\n    get xrcApproved() {\r\n      if( pageStore.CurrentSet.XRCToken ) {\r\n        return (\r\n          new BigNumber(pageStore.CurrentSet.XRCToken.allownaceForRouter.value).comparedTo(store.currentAmount.value) >= 0 &&\r\n          store.currentAmount.value.comparedTo('0') > 0\r\n        );\r\n      }\r\n      return false;\r\n    },\r\n\r\n    async fetchGasPrice(netId) {\r\n      try {\r\n        const options = {\r\n        chainId: netId,\r\n        defaultRpc: pageStore.currentChain.rpcUrl,\r\n        timeout: 10000,\r\n        defaultFallbackGasPrices: {\r\n          instant: 28,\r\n          fast: 22,\r\n          standard: 17,\r\n          low: 11,\r\n        },\r\n        };\r\n        // Bump fees for Ethereum network\r\n        if (netId == 1 || netId == 56 || netId == 137) {\r\n          const oracle = new GasPriceOracle(options);\r\n          const fallbackGasPrices = {\r\n            instant: 70,\r\n            fast: 31,\r\n            standard: 20,\r\n            low: 7,\r\n          };\r\n          const gas = await oracle.gasPrices(fallbackGasPrices);\r\n          return gasPricesETH(gas.instant);\r\n        }\r\n      } catch (err) {\r\n        return '0x0';\r\n      }\r\n    },\r\n    \r\n    init(chainID) {\r\n      // console.log('EthereumConfig.tokensOnEthereum[chainID] =', EthereumConfig.tokensOnEthereum[chainID]);\r\n\r\n      store.tokens = pageStore.currentChain.pools;\r\n      // console.log('store.tokens =', store.tokens);\r\n      // console.log('cyc denomination', store.currentCYCDenomination.format);\r\n      // console.log(store.tokens.length);\r\n      if( store.tokens ) {\r\n        // console.log('ininin');\r\n        this.indexOfPool = props.indexOfPool;\r\n      }\r\n      // console.log('this.indexOfPool =', this.indexOfPool);\r\n      this.loadAmount();\r\n    },\r\n\r\n    loadAmount() {\r\n      if (pageStore.web3) {\r\n        store.getCurrentAmount();\r\n        // store.getPoolSize();\r\n        // store.getAnonymityFee();\r\n        // store.getCurrentCYCDenomination();\r\n        // store.getCurrentCoinDenomination();\r\n      }\r\n      store.getCurrentShieldedAmount();\r\n      if (pageStore.account) {\r\n        // pageStore.getBalanceOfXRC();\r\n        // pageStore.getBNBtoBuyCYC();\r\n        // pageStore.getBalanceOfCoin();\r\n      }\r\n    },\r\n\r\n    // onSelectAmount(id) {\r\n    //   pageStore.setCurrentSelectedAmount(id);\r\n    // },\r\n\r\n    // onSelectToken(event) {\r\n    //   const idx = event.target.value;\r\n    //   store.indexOfToken = idx;\r\n    //   props.onSelectToken(idx);\r\n    // },\r\n\r\n    onSelectPool() {\r\n      pageStore.setCurrentSelectedAmount(store.indexOfPool);\r\n      if(pageStore.CurrentSet.XRCToken)\r\n        store.currentAmount.setDecimals(pageStore.CurrentSet.XRCToken.decimals);\r\n      this.loadAmount();\r\n    },\r\n\r\n    async onConnect() {\r\n      pageStore.connectingStatus = \"connecting\";\r\n      await activate(injectedConnector);\r\n      pageStore.eth.connector.latestProvider.save('inject');\r\n      if(!pageStore.isConnect && pageStore.connectingStatus == 'connecting') {\r\n        pageStore.connectingStatus = 'idle';\r\n      }\r\n      if(pageStore.isConnect) {\r\n        baseStore.startRefetchForce();\r\n      }\r\n      \r\n    },\r\n\r\n    logout() {\r\n      deactivate();\r\n      pageStore.latestEthProvider.clear();\r\n    },\r\n\r\n    // onSelectPool(event) {\r\n    //   const tempInt = event.target.value;\r\n    //   store.indexOfPool = tempInt;\r\n    //   props.onSelectAmount(tempInt);\r\n    // },\r\n\r\n    async onApproveXRC() {\r\n      store.TokenApproveStatus = \"loading\";\r\n      pageStore.isOnProgress = true;\r\n      try {\r\n        await props.onApproveXRC(pageStore.CurrentSet.XRCToken, store.currentAmount.value.toString());\r\n        store.TokenApproveStatus = \"disabled\";\r\n        pageStore.isOnProgress = false;\r\n      } catch (error) {\r\n        store.TokenApproveStatus = \"notApproved\";\r\n        pageStore.isOnProgress = false;\r\n      }\r\n    },\r\n\r\n    async deposit() {\r\n      store.DepositStatus = \"loading\";\r\n      pageStore.isOnProgress = true;\r\n      try {\r\n        await props.onDeposit(store.totalReceiveAmount, store.relayerFeeAmount, store.recipientAddress, store.withdrawFeeAmount);\r\n        store.DepositStatus = \"notActive\";\r\n        store.depositAmountInput.setValue(new BigNumber(0));\r\n        pageStore.isOnProgress = false;\r\n      } catch (error) {\r\n        store.DepositStatus = \"active\";\r\n        pageStore.isOnProgress = false;\r\n      }\r\n    },\r\n\r\n    async getCurrentAmount() {\r\n      if (!store.indexOfPool || pageStore.CurrentSet.balance.loading) {\r\n        return;\r\n      }\r\n      const value = pageStore.CurrentSet.balance.value;\r\n      store.currentAmount.setValue(value);\r\n      store.currentAmount.setLoading(false);\r\n    },\r\n\r\n    getCurrentShieldedAmount() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n      const value = pageStore.CurrentSet.shieldedBalance.value;\r\n      store.currentShieldedAmount.setValue(value);\r\n    },\r\n\r\n    getCurrentCoinDenomination() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n\r\n      const value = pageStore.CurrentSet.coinDenomination.value;\r\n      store.currentCoinDenomination.setValue(value);\r\n      store.currentCoinDenomination.setLoading(false);\r\n    },\r\n\r\n    async getCurrentCYCDenomination() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n\r\n      // const set = store.tokens[store.indexOfToken].amountSteps[store.indexOfPool];\r\n      const value = pageStore.CurrentSet.depositCYCAmount.value;\r\n      store.currentCYCDenomination.setValue(value);\r\n      store.currentCYCDenomination.setLoading(false);\r\n    },\r\n\r\n    async getPoolSize() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n\r\n      store.poolSize = -1;\r\n      if (store.tokens) {\r\n        store.poolSize = pageStore.CurrentSet.numOfShare;\r\n      }\r\n    },\r\n\r\n    onClickCopyButton(event) {\r\n      if (clipboardy) {\r\n        clipboardy.focus();\r\n        clipboardy.select();\r\n        const result = document.execCommand('copy');\r\n        if (result === 'unsuccessful') {\r\n          clipboardy.blur();\r\n        } else {\r\n          clipboardy.blur();\r\n          toast.dark(lang.t('address.copied'), {\r\n            position: 'bottom-center',\r\n            autoClose: 3000,\r\n            hideProgressBar: true,\r\n            closeOnClick: false,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            progress: undefined\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    onChangeBuyCYCCheckBox(event) {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n      \r\n      pageStore.CurrentSet.allowBuyCYC = event.target.checked && !event.target.disabled;\r\n    },\r\n\r\n    get allowDeposit() {\r\n      if (store.depositAmountInput.value.comparedTo(0) > 0 && store.depositAmountInput.value.comparedTo(store.maxLimitAmount) <= 0 && this.recipientAddress && this.recipientAddress.length >= 3) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    \r\n    get maxLimitAmount() {\r\n      if(pageStore.CurrentSet.XRCToken) {\r\n        const totalBalance = store.currentShieldedAmount.value;\r\n        const fee = totalBalance.dividedBy(1000);\r\n        let tempBalance = totalBalance.minus(fee);\r\n\r\n        tempBalance = tempBalance.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR).multipliedBy(999);\r\n\r\n        if(tempBalance.lte(store.rawWithdrawFee)) {\r\n          return new BigNumber(0);\r\n        }\r\n        else {\r\n          return tempBalance.minus(store.rawWithdrawFee);\r\n        }\r\n\r\n      }\r\n      else {\r\n        const totalBalance = store.currentShieldedAmount.value;\r\n        const realBalance = totalBalance.minus(store.withdrawFeeAmount).minus(this.bridgeFeeAmount);\r\n        const fee = realBalance.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR);\r\n\r\n        let maxValue = realBalance.minus(fee)\r\n\r\n        if(maxValue.lt(0))\r\n          return new BigNumber(0);\r\n\r\n        return maxValue;\r\n      }\r\n    },\r\n\r\n    get bridgeFeeAmount() {\r\n      if(pageStore.CurrentSet.XRCToken) {\r\n        if(store.depositAmountInput.value.eq(store.maxLimitAmount)) {\r\n          const totalBalance = store.currentShieldedAmount.value;\r\n          const fee = totalBalance.dividedBy(1000);\r\n          let tempBalance = totalBalance.minus(fee);\r\n\r\n          tempBalance = tempBalance.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR).multipliedBy(1000);\r\n\r\n          if(tempBalance.lte(store.rawWithdrawFee)) {\r\n            return new BigNumber(0);\r\n          }\r\n          else {\r\n            return tempBalance.dividedBy(1000);\r\n          }\r\n        }\r\n        else {\r\n          const realBalance = store.depositAmountInput.value.plus(store.rawWithdrawFee).dividedBy(999).dp(0, BigNumber.ROUND_FLOOR);\r\n          return realBalance;\r\n        }\r\n      }\r\n      else {\r\n        return new BigNumber(0);\r\n      }\r\n    },\r\n    \r\n    get bridgeFeeFormat() {\r\n      return new BigNumberState({value: this.bridgeFeeAmount}).format;\r\n    },\r\n\r\n    get withdrawFeeAmount() {\r\n      const expense = toBN(this.gasPrice).mul(toBN(3e5));\r\n      if(pageStore.CurrentSet.XRCToken) {\r\n        if(store.depositAmountInput.value.eq(store.maxLimitAmount)) {\r\n          const expenseUSD = new BigNumber(expense.toString()).multipliedBy(baseStore.coinPrice[pageStore.currentChain.Coin.symbol]).dp(0, BigNumber.ROUND_FLOOR);\r\n          return expenseUSD;\r\n        }\r\n        else {\r\n          const withdrawfee = store.depositAmountInput.value.plus(store.rawWithdrawFee).dividedBy(999).dp(0, BigNumber.ROUND_FLOOR).multipliedBy(999).minus(store.depositAmountInput.value);\r\n          return withdrawfee;\r\n        }\r\n      }\r\n      else {\r\n        return new BigNumber(expense.toString());\r\n      }\r\n    },\r\n\r\n    get rawWithdrawFee() {\r\n      const expense = toBN(this.gasPrice).mul(toBN(3e5));\r\n      if(pageStore.CurrentSet.XRCToken) {\r\n        const expenseUSD = new BigNumber(expense.toString()).multipliedBy(baseStore.coinPrice[pageStore.currentChain.Coin.symbol]).dp(0, BigNumber.ROUND_FLOOR);\r\n        return expenseUSD;\r\n      }\r\n    },\r\n    \r\n    get withdrawFeeFormat() {\r\n      return new BigNumberState({value: this.withdrawFeeAmount}).format;\r\n    },\r\n\r\n    get relayerFeeAmount() {\r\n      if(pageStore.CurrentSet.XRCToken) {\r\n        if(store.depositAmountInput.value.eq(store.maxLimitAmount)) {\r\n          const totalBalance = store.currentShieldedAmount.value;\r\n          const fee = totalBalance.dividedBy(1000);\r\n          let tempBalance = totalBalance.minus(fee);\r\n\r\n          tempBalance = tempBalance.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR).multipliedBy(1000);\r\n\r\n          if(tempBalance.lte(store.rawWithdrawFee)) {\r\n            return new BigNumber(0);\r\n          }\r\n          else {\r\n            return totalBalance.minus(tempBalance);\r\n          }\r\n        }\r\n        else {\r\n          const realBalance = store.depositAmountInput.value.plus(store.rawWithdrawFee).plus(store.bridgeFeeAmount);\r\n          return realBalance.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR);\r\n        }\r\n      }\r\n      else {\r\n        const totalBalance = store.currentShieldedAmount.value;\r\n        console.log('totalBalance', totalBalance.toString());\r\n        const realBalance = totalBalance.minus(store.withdrawFeeAmount).minus(this.bridgeFeeAmount);\r\n        const myRealBalance = store.depositAmountInput.value.minus(store.withdrawFeeAmount).minus(this.bridgeFeeAmount);\r\n        \r\n        console.log('realBalance.toString()', realBalance.toString());\r\n        console.log(realBalance.lt(0));\r\n        if(myRealBalance.lt(0)) {\r\n          return new BigNumber(0);\r\n        }\r\n        else if(store.depositAmountInput.value.eq(store.maxLimitAmount)) {\r\n          return realBalance.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR);\r\n        }\r\n        else {\r\n          return myRealBalance.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR);\r\n        }\r\n      }\r\n    },\r\n\r\n    get relayerFeeFormat() {\r\n      return new BigNumberState({value: this.relayerFeeAmount}).format;\r\n    },\r\n\r\n    get totalReceiveAmount() {\r\n      console.log('L1 Amount', store.depositAmountInput.value.plus(store.withdrawFeeAmount).toString());\r\n      console.log('Bridge Amount', store.bridgeFeeAmount.toString());\r\n      return store.depositAmountInput.value.plus(store.relayerFeeAmount).plus(store.bridgeFeeAmount).plus(store.withdrawFeeAmount);\r\n    },\r\n\r\n    get totalReceiveFormat() {\r\n      return new BigNumberState({value: this.totalReceiveAmount}).format;\r\n    },\r\n    \r\n  }));\r\n\r\n  const ActionButton = useObserver(() => {\r\n    return (\r\n      <div>\r\n        \r\n      </div>\r\n    );\r\n  });\r\n\r\n  const AnonymityPool = useObserver(() => {\r\n    if(store.isShowDetail)\r\n    {\r\n      if (!pageStore.isRegistered) {\r\n        return (\r\n          <DropBox color=\"primary\">\r\n            <FlexBox justify=\"center\" items=\"center\">\r\n              <ThemeProvider theme={theme}>\r\n                <LoadingButton\r\n                  color=\"MessierOrange\"\r\n                  loadingPosition='start'\r\n                  loading={store.isConnecting}\r\n                  variant=\"outlined\"\r\n                  onClick={store.onConnect}\r\n                  sx={{\r\n                    height: '40px',\r\n                    fontWeight: 'bold',\r\n                    maxWidth: '200px'\r\n                  }}\r\n                  fullWidth\r\n                  >\r\n                  {lang.t('connect')}\r\n                </LoadingButton>\r\n              </ThemeProvider>\r\n            </FlexBox>\r\n          </DropBox>\r\n        );\r\n      }\r\n      return (\r\n        <div>\r\n        <DropBox color=\"primary\">\r\n          <FlexBox justify=\"between\" responsive=\"rc\">\r\n            <Section css={{ width: '100%', mb: '1.5rem', '@md': { width: '46%', mb: 0 } }}>\r\n              <div\r\n                style={{\r\n                  marginTop: '0.5rem'\r\n                }}\r\n              >\r\n                {/* {store.currentAmount.value.comparedTo(0) <= 0 && (\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;\r\n                      {pageStore.balanceOfCoin.getFormat({ decimals: pageStore.currentChain.Coin.decimals }) + ' ' + pageStore.currentChain.Coin.symbol}  &nbsp;\r\n                      {store.currentCoinDenomination.value.comparedTo(pageStore.balanceOfCoin.value) > 0 && (\r\n                        <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('amount.invalid')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                ></div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div\r\n                      className={styles.denomenation.className}\r\n                      style={{\r\n                        marginBottom: '0.5rem'\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        {pageStore.currentChain.Coin.symbol} &nbsp;{lang.t('Denomination')}:&nbsp;\r\n                        {store.currentCoinDenomination.getFormat({\r\n                        decimals: pageStore.currentChain.Coin.decimals,\r\n                        fixed: 8\r\n                      })}\r\n                      </div>\r\n                    </div>\r\n                  </BorderBox>\r\n                )} */}\r\n\r\n                  <BorderBox css={{ padding: '0.2rem 0'}}>\r\n                    <div\r\n                      className={styles.denomenation.className}\r\n                      style={{\r\n                        marginBottom: '0.5rem'\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        {lang.t('shielded')}&nbsp;{lang.t('balance')}&nbsp;:&nbsp;{store.currentShieldedAmount.format}&nbsp;{store.indexOfPool}\r\n                      </div>\r\n                    </div>\r\n                  </BorderBox>\r\n\r\n                  <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingTop: '35px',\r\n                          display: 'flex',\r\n                          width: '100%',\r\n                          flexDirection: 'column'\r\n                    }}>\r\n                        <div style={{display: 'flex', justifyContent: \"space-between\", width: '100%'}}>\r\n                          <div>{lang.t('relayer.fee')}</div>\r\n                          <div>{store.relayerFeeFormat}&nbsp;{ store.indexOfPool }</div>\r\n                        </div>\r\n                        <div style={{display: 'flex', justifyContent: \"space-between\", width: '100%'}}>\r\n                          <div>{lang.t('bridge.fee')}</div>\r\n                          <div>{store.bridgeFeeFormat}&nbsp;{ store.indexOfPool }</div>\r\n                        </div>\r\n                        <div style={{display: 'flex', justifyContent: \"space-between\", width: '100%'}}>\r\n                          <div>{lang.t('l1.tx.fee')}</div>\r\n                          <div>{store.withdrawFeeFormat}&nbsp;{ store.indexOfPool }</div>\r\n                        </div>\r\n                        <div style={{display: 'flex', justifyContent: \"space-between\", width: '100%'}}>\r\n                          <div>{lang.t('total.received')}</div>\r\n                          <div>{store.totalReceiveFormat}&nbsp;{ store.indexOfPool }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                {/* {store.currentCYCDenomination.value.comparedTo(0) > 0 && pageStore.account && (\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;\r\n                      {pageStore.balanceOfCYC.format}\r\n                      &nbsp;M87&nbsp;\r\n                      {store.currentCYCDenomination.value.comparedTo(pageStore.balanceOfCYC.value) > 0 ? (\r\n                        <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('cyc.tips')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                >\r\n                                  <a\r\n                                    style={{\r\n                                      color: 'black',\r\n                                      textDecoration: 'underline'\r\n                                    }}\r\n                                    href={pageStore.currentChain.swapURL}\r\n                                  >\r\n                                    {lang.t('click.buy')}\r\n                                  </a>\r\n                                </div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className={styles.denomenation.className}>\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        {lang.t('cyc.denomenation')}:&nbsp;{store.currentCYCDenomination.format}\r\n                        <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('cyc.reward')}\r\n                                </div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/reward.png\" style={{ cursor: 'pointer', paddingLeft: 5, marginTop: -2 }} alt=\"\" />\r\n                        </Popover>\r\n                      </div>\r\n\r\n                      \r\n                    </div>\r\n\r\n                    {pageStore.balanceOfCYC.value.comparedTo(store.currentCYCDenomination.value) < 0 && pageStore.account && (\r\n                      <div\r\n                        className=\"flex item-center\"\r\n                        style={{\r\n                          marginTop: '0.5rem'\r\n                        }}\r\n                      >\r\n                        <input\r\n                          disabled={\r\n                            pageStore.balanceOfCoin.value.comparedTo(\r\n                              store.currentCoinDenomination.value.plus(pageStore.BNBtoBuyCYC.value)\r\n                            ) < 0\r\n                          }\r\n                          id=\"check\"\r\n                          type=\"checkbox\"\r\n                          style={{ verticalAlign: 'middle' }}\r\n                          onChange={store.onChangeBuyCYCCheckBox}\r\n                        />\r\n                        <label htmlFor=\"check\" style={{ marginLeft: 10, verticalAlign: 'middle', color: 'white' }}>\r\n                          {lang.t('use.coin.to.buy.cyc', {\r\n                            amount: pageStore.BNBtoBuyCYC.format,\r\n                            symbol: pageStore.currentChain.Coin.symbol\r\n                          })}\r\n                        </label>\r\n                      </div>\r\n                    )}\r\n                  </BorderBox>\r\n                )} */}\r\n\r\n                {/* {store.currentAmount.value.comparedTo(0) > 0 && (\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;\r\n                      {pageStore.balanceOfCoin.getFormat({ decimals: pageStore.currentChain.Coin.decimals })} ETH\r\n                      {store.currentCoinDenomination.value.comparedTo(pageStore.balanceOfCoin.value) > 0 ? (\r\n                        <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('amount.invalid')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                ></div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div\r\n                      className={styles.denomenation.className}\r\n                      style={{\r\n                        marginBottom: '0.5rem'\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        ETH&nbsp;{lang.t('Denomination')}:&nbsp;\r\n                        {store.currentCoinDenomination.getFormat({ decimals: pageStore.currentChain.Coin.decimals })}\r\n                      </div>\r\n                    </div>\r\n                  </BorderBox>\r\n                )} */}\r\n              </div>\r\n            </Section>\r\n            \r\n            <Section css={{ width: '100%', '@md': { width: '46%' } }}>\r\n              {/* <Button\r\n                avaliable={\r\n                  pageStore.isConnect &&\r\n                  !store.cycApproved &&\r\n                  new BigNumber(pageStore.balanceOfCYC.value).comparedTo('0') &&\r\n                  store.currentCYCDenomination.value.comparedTo(0) > 0\r\n                }\r\n                label={lang.t('approve') + ' M87'}\r\n                disabledLabel={lang.t('approved')}\r\n                disable={store.cycApproved}\r\n                onClick={store.onApproveCYC}\r\n\r\n                LoadingButton\r\n              /> */}\r\n              <div style={{ flexDirection: 'column', justifyContent: 'space-between', height: '160px', display: 'flex' }}>\r\n                <Section css={{ position: 'relative', mb: '1.5rem' }}>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    step={0.1}\r\n                    css={{ pr: '50px' }}\r\n                    value={store.depositAmountInput.format}\r\n                    onChange={(e) => store.setDepositAmount(e.target.value)}\r\n                  />\r\n                  <Text\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    cursor=\"pointer\"\r\n                    onClick={store.setMaxLimitAmount}\r\n                    css={{ position: 'absolute', lineHeight: '40px', top: 0, right: 11 }}\r\n                  >\r\n                    {lang.t('Max')}\r\n                  </Text>\r\n                </Section>\r\n                <Section css={{ position: 'relative', mb: '1.5rem' }}>\r\n                  <Input\r\n                    css={{ pr: '50px' }}\r\n                    value={store.recipientAddress}\r\n                    placeholder={lang.t('copy.recipient.address')}\r\n                    onChange={(e) => {store.checkValidAccount(e.target.value)}}\r\n                  />\r\n                </Section>\r\n                <ThemeProvider theme={theme}>\r\n                  {/* {\r\n                    pageStore.CurrentSet.XRCToken && store.currentAmount.value.comparedTo(0) > 0 ?\r\n                      <LoadingButton\r\n                      color=\"MessierOrange\"\r\n                      loadingPosition='start'\r\n                      loading={store.TokenApproveStatus == \"loading\"}\r\n                      disabled={store.TokenApproveStatus != \"notApproved\"}\r\n                      variant=\"outlined\"\r\n                      onClick={store.onApproveXRC}\r\n                      sx={{\r\n                        height: '40px',\r\n                        fontWeight: 'bold',\r\n                        color: store.TokenApproveStatus != \"notApproved\" ? '#acb3bb !important' : '',\r\n                        background: store.TokenApproveStatus != \"notApproved\" ? '#b9b9b952 !important' : ''\r\n                      }}\r\n                      fullWidth\r\n                      >\r\n                        { store.TokenApproveStatus == \"approved\" ? lang.t('approved') : lang.t('approve.token', { token: pageStore.CurrentSet.XRCToken.symbol })}\r\n                      </LoadingButton> : (\r\n                          <LoadingButton\r\n                          color=\"MessierOrange\"\r\n                          loadingPosition='start'\r\n                          loading={store.ApproveStatus == \"loading\"}\r\n                          disabled={store.ApproveStatus != \"notApproved\"}\r\n                          variant=\"outlined\"\r\n                          onClick={store.onApproveCYC}\r\n                          sx={{\r\n                            height: '40px',\r\n                            fontWeight: 'bold',\r\n                            color: store.ApproveStatus != \"notApproved\" ? '#acb3bb !important' : '',\r\n                            background: store.ApproveStatus != \"notApproved\" ? '#b9b9b952 !important' : ''\r\n                          }}\r\n                          fullWidth\r\n                          >\r\n                            { store.ApproveStatus == \"approved\" ? lang.t('approved') : lang.t('approve')}\r\n                          </LoadingButton>\r\n                      )\r\n                  } */}\r\n                  \r\n                  <LoadingButton\r\n                    color=\"MessierOrange\"\r\n                    loadingPosition='start'\r\n                    loading={store.DepositStatus == \"loading\"}\r\n                    disabled={store.DepositStatus != \"active\"}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      height: '40px',\r\n                      fontWeight: 'bold',\r\n                      color: store.DepositStatus != \"active\" ? '#acb3bb !important' : '',\r\n                      background: store.DepositStatus != \"active\" ? '#b9b9b952 !important' : ''\r\n                    }}\r\n                    onClick={store.deposit}\r\n                    fullWidth\r\n                  >\r\n                    {lang.t('Withdraw')}\r\n                  </LoadingButton>\r\n                </ThemeProvider>\r\n              </div>\r\n             {/* <div className={styles.buttonPanel.className}>{ActionButton}</div> */}\r\n            </Section>\r\n          </FlexBox>\r\n        </DropBox>\r\n      </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // console.log('props.chainID', props.chainID);\r\n    store.init(props.chainID);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(pageStore.connectingStatus);\r\n    if(pageStore.connectingStatus == 'idle')\r\n      store.isConnecting = false;\r\n    else\r\n      store.isConnecting = true;\r\n  }, [pageStore.connectingStatus]);\r\n\r\n  useEffect(() => {\r\n    store.isShowDetail = (store.indexOfPool == pageStore.currentPoolIndex) && !pageStore.isLockStatus;\r\n  }, [pageStore.currentPoolIndex, pageStore.isLockStatus]);\r\n\r\n  useEffect(() => {\r\n    // console.log('DepositStatus', store.DepositStatus);\r\n    if(store.DepositStatus == \"loading\")\r\n      return;\r\n    if( store.allowDeposit )\r\n      store.DepositStatus = \"active\";\r\n    else\r\n      store.DepositStatus = 'notActive';\r\n  }, [ store.allowDeposit, baseStore.refetchTimer ]);\r\n\r\n  useEffect(() => {\r\n    if( !pageStore.CurrentSet.XRCToken )\r\n      return;\r\n    // console.log(\"Approve consider\");\r\n    if(store.TokenApproveStatus == \"loading\")\r\n      return;\r\n    // console.log(store.ApproveStatus);\r\n    if( store.xrcApproved ) {\r\n      store.TokenApproveStatus = \"approved\";\r\n      // console.log('1');\r\n    }\r\n    else {\r\n      // console.log('2'); \r\n      const isActive = pageStore.isConnect &&\r\n        new BigNumber(pageStore.balanceOfXRC.value).comparedTo('0') &&\r\n        store.currentAmount.value.comparedTo(0) > 0;\r\n      if( isActive )\r\n        store.TokenApproveStatus = \"notApproved\";\r\n      else\r\n        store.TokenApproveStatus = \"disabled\";\r\n    }\r\n  }, [pageStore.isConnect, store.xrcApproved, pageStore.balanceOfXRC, store.currentAmount ]);\r\n\r\n  useEffect(() => {\r\n    // console.log('props.chainID =', props.chainID);\r\n\r\n    store.init(props.chainID);\r\n  }, [props.chainID, pageStore.web3, pageStore.account]);\r\n\r\n  useEffect(() => {\r\n    store.loadAmount();\r\n    const doNecessary = async () => {\r\n      store.gasPrice = await store.fetchGasPrice(pageStore.currentChain.chainId);\r\n    }\r\n    doNecessary();\r\n  }, [baseStore.refetchTimer, pageStore.CurrentSet.balance.value]);\r\n\r\n  useEffect(() => {\r\n    if(!store.isUsingMax)\r\n        return;\r\n    if(store.currentShieldedAmount.loading || store.gasPrice == '0')\r\n        return;\r\n    store.depositAmountInput.setValue(store.maxLimitAmount);\r\n  }, [store.maxLimitAmount]);\r\n\r\n  return (\r\n    <>\r\n    { \r\n      <Section>\r\n        <BorderBox css={{ padding: '0.6rem 0', cursor: 'pointer' }}\r\n        onClick={\r\n          () => {\r\n              store.onSelectPool(); \r\n          }\r\n        }>\r\n          <FlexBox justify=\"between\">\r\n            <FlexBox css={{ width: 'max-content', cursor: 'pointer', '@md': { width: '32%' } }}>\r\n              {\r\n                <SingleSymbol imgs={['/images/home/' + (store.indexOfPool ? store.indexOfPool.toLowerCase() : '') + '.png']} />\r\n              }\r\n              <Text size=\"small\" color=\"primary\" css={{ ml: '0.8rem' }}>\r\n                <span>\r\n                  {store.tokens &&\r\n                    store.tokens[store.indexOfPool].set\r\n                  }\r\n                </span>\r\n              </Text>\r\n            </FlexBox>\r\n            <Text size=\"small\" color=\"white\" css={{ flex: 1, textAlign: 'right', cursor: 'pointer' }}>\r\n              {/* { (pageStore.currentChain.chainId == 1) && (store.indexOfPool == 1 || store.indexOfPool == 10) && store.tokens[store.indexOfPool].Apy.format + ' % / ' + store.tokens[store.indexOfPool].dailyApy.getFormat({fixed: 3}) + ' %' } */}\r\n            </Text>\r\n            <FlexBox justify=\"end\" css={{ width: 'max-content', cursor: 'pointer', '@md': { width: '40%' } }}>\r\n              <Text size=\"small\" color=\"white\" css={{ display: 'none', '@md': { display: 'block' } }}>\r\n                {/* ${store.tokens[store.indexOfPool].tvl.format} */}\r\n              </Text>\r\n              <Icon\r\n                css={{ width: '1rem', ml: '1rem', '@md': { width: '1.375rem', ml: '1.5rem' } }}\r\n                src={`/images/home/${store.isShowDetail ? 'dropup' : 'dropdown'}.png`}\r\n              ></Icon>\r\n            </FlexBox>\r\n          </FlexBox>\r\n        </BorderBox>\r\n        {AnonymityPool}\r\n      </Section>\r\n    }\r\n    </>\r\n  );\r\n});\r\n\r\nconst styles = {\r\n  depositView: css({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'column',\r\n    height: '530',\r\n    '@md': {\r\n      minHeight: '390px'\r\n    }\r\n  }),\r\n  token: css({\r\n    marginTop: '1.2rem',\r\n    marginLeft: '7vw',\r\n    '@xs': {\r\n      marginTop: '25px',\r\n      marginLeft: '40px'\r\n    },\r\n    '.select': {\r\n      border: '1px solid #45BCB8',\r\n      color: 'white',\r\n      background: 'transparent',\r\n      height: '40px',\r\n      width: '95%',\r\n      appearance: 'none',\r\n      fontSize: '18px',\r\n      fontFamily: \"'IBM Plex Mono', monospace\",\r\n      paddingLeft: '0.5rem'\r\n    }\r\n  }),\r\n  amount: css({\r\n    width: '95%',\r\n    overflow: 'hidden',\r\n    marginTop: '2rem',\r\n    marginLeft: '7vw',\r\n    marginBottom: '2rem',\r\n    '@xs': {\r\n      width: '94%',\r\n      overflow: 'auto',\r\n      marginLeft: '40px',\r\n      paddingRight: '40px'\r\n    },\r\n    '.stepperTrack': {\r\n      width: '100%',\r\n      borderWidth: '2px',\r\n      borderStyle: 'solid',\r\n      borderColor: '#45bcb8',\r\n      marginTop: '20px'\r\n    }\r\n  }),\r\n  buttonPanel: css({\r\n    height: '40px',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ffffff12',\r\n    color: '#44ee95',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    cursor: 'pointer',\r\n    textTransform: 'uppercase',\r\n    border: 'solid 1px',\r\n    borderColor: '#44ee95',\r\n    '&:hover': {\r\n      backgroundColor: '#00ff0312'\r\n    },\r\n    marginBottom: '1rem',\r\n    marginTop: '2.5rem',\r\n  }),\r\n  bottomTips: css({\r\n    marginLeft: '10%',\r\n    marginRight: '4vw',\r\n    fontSize: '12px',\r\n    padding: '0 0 0.3rem 3rem',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    '@md': {\r\n      marginLeft: '64px',\r\n      marginRight: '28px',\r\n      fontSize: '12px',\r\n      paddingLeft: '40px',\r\n      paddingBottom: '0.35rem',\r\n      whiteSpace: 'nowrap'\r\n    }\r\n  }),\r\n  poolInfos: css({\r\n      marginTop: '0.7rem'\r\n  }),\r\n  poolAudio: css({\r\n    paddingRight: '5%',\r\n    ul: {\r\n      listStyleType: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      flexWrap: 'wrap',\r\n      padding: 0,\r\n      margin: 0,\r\n      li: {\r\n        width: '100%',\r\n        padding: '4px 0',\r\n        border: '1px solid #45BCB8',\r\n        textAlign: 'left',\r\n        marginBottom: '8px',\r\n        paddingLeft: '4px',\r\n        fontSize: '0.875rem',\r\n        cursor: 'pointer',\r\n        '@md': {\r\n          width: '48%'\r\n        },\r\n        '&:hover': {\r\n          background: 'rgba(69, 188, 184, 0.35)'\r\n        }\r\n      },\r\n      '.active': {\r\n        fontWeight: 'bold',\r\n        color: '#38DCD5',\r\n        borderColor: '#45BCB8',\r\n        background: 'rgba(69, 188, 184, 0.35)'\r\n      }\r\n    }\r\n  }),\r\n  logo: css({\r\n    width: '24px',\r\n    height: '24px'\r\n  }),\r\n  denomenation: css({\r\n    width: '95%',\r\n    rowGap: '0.5rem',\r\n    flexBetweenCenter: 'column',\r\n    '.input': {\r\n      marginBottom: '8px'\r\n    },\r\n    '.button': {\r\n      width: '100%'\r\n    },\r\n    '.buttonDisable': {\r\n      width: '100%'\r\n    },\r\n    '@xs': {\r\n      columnGap: '1rem',\r\n      flexBetweenCenter: 'row',\r\n      '.input': {\r\n        marginBottom: 0\r\n      },\r\n      '.button': {\r\n        width: 'max-content'\r\n      },\r\n      '.buttonDisable': {\r\n        width: 'max-content'\r\n      }\r\n    },\r\n    '@md': {\r\n      '.input': {\r\n        marginBottom: 0\r\n      }\r\n    }\r\n  }),\r\n  approveBtn: css({\r\n    padding: '0 10px',\r\n    width: '100%',\r\n    height: '34px',\r\n    outline: 'none',\r\n    border: '1px solid #45BCB8',\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: '0.875rem',\r\n    backgroundColor: '#45BCB8',\r\n    '@xs': {\r\n      height: '40px',\r\n      maxWidth: '152px'\r\n    },\r\n    '@md': {\r\n      maxWidth: '90px',\r\n      fontSize: '12px'\r\n    },\r\n    xl: {\r\n      maxWidth: '152px',\r\n      fontSize: '1rem'\r\n    },\r\n    '&:disabled': {\r\n      backgroundColor: 'black'\r\n    }\r\n  }),\r\n  loginOut: css({\r\n    flexCenterCenter: 'row',\r\n    paddingLeft: '8%',\r\n    marginBottom: '2rem',\r\n    '@md': {\r\n      marginBottom: '3rem'\r\n    },\r\n    span: {\r\n      textDecoration: 'underline',\r\n      fontSize: '1',\r\n      cursor: 'pointer',\r\n      fontWeight: 'bold'\r\n    }\r\n  })\r\n};\r\n\r\nexport default WithdrawViewForETH;","import React, { useEffect, useMemo } from 'react';\r\nimport Button from './Button';\r\nimport { Popover } from 'antd';\r\nimport { css } from '../modules/index';\r\nimport { useStore } from '../store';\r\nimport { observer, useLocalStore, useObserver } from 'mobx-react-lite';\r\nimport BigNumber from 'bignumber.js';\r\nimport { toast } from 'react-toastify';\r\nimport { debounce } from 'lodash';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { BigNumberState } from '../store/type';\r\nimport { Icon, Text, FlexBox, Wrapper, BorderBox, DropBox, Section, Input } from '../modules/globalStyle';\r\nimport { SingleSymbol } from './SingleSymbol';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { injectedConnector } from '../lib/web3-react-bsc';\r\nimport { GasPriceOracle } from 'gas-price-oracle';\r\nimport { toWei, toBN, BN } from 'web3-utils';\r\nimport { BigNumberInputState } from '../store/lib/BignumberInputState';\r\nimport bigInt from 'big-integer';\r\nimport axios from 'axios';\r\nimport { hooks } from '../lib/hooks';\r\nimport { isAddress } from 'web3-utils'\r\n\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { display } from '@mui/system';\r\n\r\nexport function toHex(number, length = 32) {\r\n  const str = number instanceof Buffer ? number.toString('hex') : bigInt(number).toString(16);\r\n  return '0x' + str.padStart(length * 2, '0');\r\n}\r\n\r\nfunction gasPricesETH(value = 80) {\r\n  const tenPercent = (Number(value) * 5) / 100;\r\n  const max = Math.max(tenPercent, 3);\r\n  const bumped = Math.floor(Number(value) + max);\r\n  return toHex(toWei(bumped.toString(), 'gwei'));\r\n}\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    MessierOrange: {\r\n      main: '#FF7518',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nlet clipboardy = null;\r\n\r\nexport const TransferView = observer(props => {\r\n  const { lang, god: pageStore, base: baseStore } = useStore();\r\n  const { activate, error, deactivate } = useWeb3React();\r\n  \r\n  const store = useLocalStore(() => ({\r\n    tokens: null,\r\n    // indexOfToken: 0,\r\n    // indexOfAmountSet: 0,\r\n    isShowDetail: false,\r\n    indexOfPool: null,\r\n    currentAmount: new BigNumberState({ loading: true }),\r\n    currentShieldedAmount: new BigNumberState({ value: new BigNumber(0), fixed: 5 }),\r\n    currentCYCDenomination: new BigNumberState({ loading: true }),\r\n    currentCoinDenomination: new BigNumberState({ loading: true }),\r\n    poolSize: -1,\r\n    anonymityFee: new BigNumberState({ loading: true }),\r\n    ApproveStatus: \"disabled\",\r\n    TokenApproveStatus: \"disabled\",\r\n    DepositStatus: \"disabled\",\r\n    WithdrawStatus: \"disabled\",\r\n    isConnecting: false,\r\n    gasPrice: '0',\r\n    depositAmountInput: new BigNumberInputState({}),\r\n    recipientAddress: null,\r\n    recipientPublicKey: null,\r\n    \r\n    setDepositAmount(val) {\r\n      if(store.currentShieldedAmount.loading)\r\n        return;\r\n      const subArr = val.split(\".\");\r\n      if(subArr[1]) {\r\n        if(subArr[1].length > store.depositAmountInput.decimals)\r\n          return;\r\n      }\r\n      store.depositAmountInput.setFormat(val);\r\n    },\r\n\r\n    setMaxLimitAmount() {\r\n      if(store.currentShieldedAmount.loading)\r\n        return;\r\n      store.depositAmountInput.setValue(this.maxLimitAmount);\r\n    },\r\n\r\n    getAnonymityFee() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n      this.anonymityFee.setValue(pageStore.CurrentSet.anonymityPoolFee.value);\r\n    },\r\n    \r\n    async checkRegisteredAccount(recipient) {\r\n      if(!isAddress(recipient) || recipient == pageStore.myAddress) {\r\n        store.recipientAddress = '';\r\n        return;\r\n      }\r\n      store.recipientAddress = recipient;\r\n      pageStore.setLoadingText(lang.t('request.registered.account'));\r\n      pageStore.setLoadingView(true);\r\n      let response = await axios.post(pageStore.currentChain.relayer + '/v1/getAccountStatus', {address: recipient}, {});\r\n      let res = response.data;\r\n      const { blockNumber, isExist, publicKey } = res;\r\n      pageStore.setLoadingView(false);\r\n      if(isExist) {\r\n        store.recipientPublicKey = publicKey;\r\n        store.recipientAddress = recipient;\r\n      }\r\n      else {\r\n        store.recipientPublicKey = null;\r\n        await hooks.waitModal({title: lang.t('notification'), msg: lang.t('not.registered')});\r\n        store.recipientAddress = '';\r\n      }\r\n    },\r\n\r\n    // get currentCYCDenominationLabel() {\r\n    //   return '...';\r\n    // },\r\n\r\n    get xrcApproved() {\r\n      if( pageStore.CurrentSet.XRCToken ) {\r\n        return (\r\n          new BigNumber(pageStore.CurrentSet.XRCToken.allownaceForRouter.value).comparedTo(store.currentAmount.value) >= 0 &&\r\n          store.currentAmount.value.comparedTo('0') > 0\r\n        );\r\n      }\r\n      return false;\r\n    },\r\n\r\n    async fetchGasPrice(netId) {\r\n      try {\r\n        const options = {\r\n        chainId: netId,\r\n        defaultRpc: pageStore.currentChain.rpcUrl,\r\n        timeout: 10000,\r\n        defaultFallbackGasPrices: {\r\n          instant: 28,\r\n          fast: 22,\r\n          standard: 17,\r\n          low: 11,\r\n        },\r\n        };\r\n        // Bump fees for Ethereum network\r\n        if (netId == 1 || netId == 56 || netId == 137) {\r\n          const oracle = new GasPriceOracle(options);\r\n          const fallbackGasPrices = {\r\n            instant: 70,\r\n            fast: 31,\r\n            standard: 20,\r\n            low: 7,\r\n          };\r\n          const gas = await oracle.gasPrices(fallbackGasPrices);\r\n          return gasPricesETH(gas.instant);\r\n        }\r\n      } catch (err) {\r\n        return '0x0';\r\n      }\r\n    },\r\n    \r\n    init(chainID) {\r\n      // console.log('EthereumConfig.tokensOnEthereum[chainID] =', EthereumConfig.tokensOnEthereum[chainID]);\r\n\r\n      store.tokens = pageStore.currentChain.pools;\r\n      // console.log('store.tokens =', store.tokens);\r\n      // console.log('cyc denomination', store.currentCYCDenomination.format);\r\n      // console.log(store.tokens.length);\r\n      if( store.tokens ) {\r\n        // console.log('ininin');\r\n        this.indexOfPool = props.indexOfPool;\r\n      }\r\n      // console.log('this.indexOfPool =', this.indexOfPool);\r\n      this.loadAmount();\r\n    },\r\n\r\n    loadAmount() {\r\n      if (pageStore.web3) {\r\n        store.getCurrentAmount();\r\n        // store.getPoolSize();\r\n        // store.getAnonymityFee();\r\n        // store.getCurrentCYCDenomination();\r\n        // store.getCurrentCoinDenomination();\r\n      }\r\n      store.getCurrentShieldedAmount();\r\n      if (pageStore.account) {\r\n        // pageStore.getBalanceOfXRC();\r\n        // pageStore.getBNBtoBuyCYC();\r\n        // pageStore.getBalanceOfCoin();\r\n      }\r\n    },\r\n\r\n    // onSelectAmount(id) {\r\n    //   pageStore.setCurrentSelectedAmount(id);\r\n    // },\r\n\r\n    // onSelectToken(event) {\r\n    //   const idx = event.target.value;\r\n    //   store.indexOfToken = idx;\r\n    //   props.onSelectToken(idx);\r\n    // },\r\n\r\n    onSelectPool() {\r\n      pageStore.setCurrentSelectedAmount(store.indexOfPool);\r\n      if(pageStore.CurrentSet.XRCToken)\r\n        store.currentAmount.setDecimals(pageStore.CurrentSet.XRCToken.decimals);\r\n      this.loadAmount();\r\n    },\r\n\r\n    async onConnect() {\r\n      pageStore.connectingStatus = \"connecting\";\r\n      await activate(injectedConnector);\r\n      pageStore.eth.connector.latestProvider.save('inject');\r\n      if(!pageStore.isConnect && pageStore.connectingStatus == 'connecting') {\r\n        pageStore.connectingStatus = 'idle';\r\n      }\r\n      if(pageStore.isConnect) {\r\n        baseStore.startRefetchForce();\r\n      }\r\n      \r\n    },\r\n\r\n    logout() {\r\n      deactivate();\r\n      pageStore.latestEthProvider.clear();\r\n    },\r\n\r\n    // onSelectPool(event) {\r\n    //   const tempInt = event.target.value;\r\n    //   store.indexOfPool = tempInt;\r\n    //   props.onSelectAmount(tempInt);\r\n    // },\r\n\r\n    async onApproveXRC() {\r\n      store.TokenApproveStatus = \"loading\";\r\n      pageStore.isOnProgress = true;\r\n      try {\r\n        await props.onApproveXRC(pageStore.CurrentSet.XRCToken, store.currentAmount.value.toString());\r\n        store.TokenApproveStatus = \"disabled\";\r\n        pageStore.isOnProgress = false;\r\n      } catch (error) {\r\n        store.TokenApproveStatus = \"notApproved\";\r\n        pageStore.isOnProgress = false;\r\n      }\r\n    },\r\n\r\n    async deposit() {\r\n      store.DepositStatus = \"loading\";\r\n      pageStore.isOnProgress = true;\r\n      try {\r\n        await props.onDeposit(store.totalSendAmount, store.recipientPublicKey, store.relayerFeeAmount);\r\n        store.DepositStatus = \"notActive\";\r\n        store.depositAmountInput.setValue(new BigNumber(0));\r\n        pageStore.isOnProgress = false;\r\n      } catch (error) {\r\n        store.DepositStatus = \"active\";\r\n        pageStore.isOnProgress = false;\r\n      }\r\n    },\r\n\r\n    async getCurrentAmount() {\r\n      if (!store.indexOfPool || pageStore.CurrentSet.balance.loading) {\r\n        return;\r\n      }\r\n      const value = pageStore.CurrentSet.balance.value;\r\n      store.currentAmount.setValue(value);\r\n      store.currentAmount.setLoading(false);\r\n    },\r\n\r\n    getCurrentShieldedAmount() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n      const value = pageStore.CurrentSet.shieldedBalance.value;\r\n      store.currentShieldedAmount.setValue(value);\r\n    },\r\n\r\n    getCurrentCoinDenomination() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n\r\n      const value = pageStore.CurrentSet.coinDenomination.value;\r\n      store.currentCoinDenomination.setValue(value);\r\n      store.currentCoinDenomination.setLoading(false);\r\n    },\r\n\r\n    async getCurrentCYCDenomination() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n\r\n      // const set = store.tokens[store.indexOfToken].amountSteps[store.indexOfPool];\r\n      const value = pageStore.CurrentSet.depositCYCAmount.value;\r\n      store.currentCYCDenomination.setValue(value);\r\n      store.currentCYCDenomination.setLoading(false);\r\n    },\r\n\r\n    async getPoolSize() {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n\r\n      store.poolSize = -1;\r\n      if (store.tokens) {\r\n        store.poolSize = pageStore.CurrentSet.numOfShare;\r\n      }\r\n    },\r\n\r\n    onClickCopyButton(event) {\r\n      if (clipboardy) {\r\n        clipboardy.focus();\r\n        clipboardy.select();\r\n        const result = document.execCommand('copy');\r\n        if (result === 'unsuccessful') {\r\n          clipboardy.blur();\r\n        } else {\r\n          clipboardy.blur();\r\n          toast.dark(lang.t('address.copied'), {\r\n            position: 'bottom-center',\r\n            autoClose: 3000,\r\n            hideProgressBar: true,\r\n            closeOnClick: false,\r\n            pauseOnHover: false,\r\n            draggable: false,\r\n            progress: undefined\r\n          });\r\n        }\r\n      }\r\n    },\r\n\r\n    onChangeBuyCYCCheckBox(event) {\r\n      if (!store.indexOfPool) {\r\n        return;\r\n      }\r\n      \r\n      pageStore.CurrentSet.allowBuyCYC = event.target.checked && !event.target.disabled;\r\n    },\r\n\r\n    get allowDeposit() {\r\n      if (store.depositAmountInput.value.comparedTo(0) > 0 && store.depositAmountInput.value.comparedTo(store.maxLimitAmount) <= 0 && store.recipientPublicKey) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    \r\n    get maxLimitAmount() {\r\n      const totalBalance = store.currentShieldedAmount.value;\r\n      const expense = totalBalance.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR);\r\n      let maxValue = totalBalance.minus(expense);\r\n\r\n      return maxValue;\r\n    },\r\n\r\n    get bridgeFeeAmount() {\r\n      return new BigNumber(0);\r\n    },\r\n    \r\n    get bridgeFeeFormat() {\r\n      return new BigNumberState({value: this.bridgeFeeAmount}).format;\r\n    },\r\n\r\n    get relayerFeeAmount() {\r\n        const totalBalance = store.currentShieldedAmount.value;\r\n        console.log('totalBalance', totalBalance.toString());\r\n        if(store.depositAmountInput.value.eq(store.maxLimitAmount)) {\r\n          return totalBalance.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR);\r\n        }\r\n        return store.depositAmountInput.value.dividedBy(1000).dp(0, BigNumber.ROUND_FLOOR);\r\n    },\r\n\r\n    get relayerFeeFormat() {\r\n      return new BigNumberState({value: this.relayerFeeAmount}).format;\r\n    },\r\n\r\n    get totalSendAmount() {\r\n      return store.depositAmountInput.value.plus(store.relayerFeeAmount);\r\n    },\r\n\r\n    get totalSendFormat() {\r\n      return new BigNumberState({value: this.totalSendAmount}).format;\r\n    },\r\n    \r\n  }));\r\n\r\n  const ActionButton = useObserver(() => {\r\n    return (\r\n      <div>\r\n        \r\n      </div>\r\n    );\r\n  });\r\n\r\n  const AnonymityPool = useObserver(() => {\r\n    if(store.isShowDetail)\r\n    {\r\n      if (!pageStore.isRegistered) {\r\n        return (\r\n          <DropBox color=\"primary\">\r\n            <FlexBox justify=\"center\" items=\"center\">\r\n              <ThemeProvider theme={theme}>\r\n                <LoadingButton\r\n                  color=\"MessierOrange\"\r\n                  loadingPosition='start'\r\n                  loading={store.isConnecting}\r\n                  variant=\"outlined\"\r\n                  onClick={store.onConnect}\r\n                  sx={{\r\n                    height: '40px',\r\n                    fontWeight: 'bold',\r\n                    maxWidth: '200px'\r\n                  }}\r\n                  fullWidth\r\n                  >\r\n                  {lang.t('connect')}\r\n                </LoadingButton>\r\n              </ThemeProvider>\r\n            </FlexBox>\r\n          </DropBox>\r\n        );\r\n      }\r\n      return (\r\n        <div>\r\n        <DropBox color=\"primary\">\r\n          <FlexBox justify=\"between\" responsive=\"rc\">\r\n            <Section css={{ width: '100%', mb: '1.5rem', '@md': { width: '46%', mb: 0 } }}>\r\n              <div\r\n                style={{\r\n                  marginTop: '0.5rem'\r\n                }}\r\n              >\r\n                {/* {store.currentAmount.value.comparedTo(0) <= 0 && (\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;\r\n                      {pageStore.balanceOfCoin.getFormat({ decimals: pageStore.currentChain.Coin.decimals }) + ' ' + pageStore.currentChain.Coin.symbol}  &nbsp;\r\n                      {store.currentCoinDenomination.value.comparedTo(pageStore.balanceOfCoin.value) > 0 && (\r\n                        <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('amount.invalid')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                ></div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div\r\n                      className={styles.denomenation.className}\r\n                      style={{\r\n                        marginBottom: '0.5rem'\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        {pageStore.currentChain.Coin.symbol} &nbsp;{lang.t('Denomination')}:&nbsp;\r\n                        {store.currentCoinDenomination.getFormat({\r\n                        decimals: pageStore.currentChain.Coin.decimals,\r\n                        fixed: 8\r\n                      })}\r\n                      </div>\r\n                    </div>\r\n                  </BorderBox>\r\n                )} */}\r\n\r\n                  <BorderBox css={{ padding: '0.2rem 0'}}>\r\n                    <div\r\n                      className={styles.denomenation.className}\r\n                      style={{\r\n                        marginBottom: '0.5rem'\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        {lang.t('shielded')}&nbsp;{lang.t('balance')}&nbsp;:&nbsp;{store.currentShieldedAmount.format}&nbsp;{store.indexOfPool}\r\n                      </div>\r\n                    </div>\r\n                  </BorderBox>\r\n\r\n                  <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingTop: '35px',\r\n                          display: 'flex',\r\n                          width: '100%',\r\n                          flexDirection: 'column'\r\n                    }}>\r\n                        <div style={{display: 'flex', justifyContent: \"space-between\", width: '100%'}}>\r\n                          <div>{lang.t('relayer.fee')}</div>\r\n                          <div>{store.relayerFeeFormat}&nbsp;{ store.indexOfPool }</div>\r\n                        </div>\r\n                        <div style={{display: 'flex', justifyContent: \"space-between\", width: '100%'}}>\r\n                          <div>{lang.t('bridge.fee')}</div>\r\n                          <div>{store.bridgeFeeFormat}&nbsp;{ store.indexOfPool }</div>\r\n                        </div>\r\n                        <div style={{display: 'flex', justifyContent: \"space-between\", width: '100%'}}>\r\n                          <div>{lang.t('total.transfer')}</div>\r\n                          <div>{store.totalSendFormat}&nbsp;{ store.indexOfPool }</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                {/* {store.currentCYCDenomination.value.comparedTo(0) > 0 && pageStore.account && (\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;\r\n                      {pageStore.balanceOfCYC.format}\r\n                      &nbsp;M87&nbsp;\r\n                      {store.currentCYCDenomination.value.comparedTo(pageStore.balanceOfCYC.value) > 0 ? (\r\n                        <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('cyc.tips')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                >\r\n                                  <a\r\n                                    style={{\r\n                                      color: 'black',\r\n                                      textDecoration: 'underline'\r\n                                    }}\r\n                                    href={pageStore.currentChain.swapURL}\r\n                                  >\r\n                                    {lang.t('click.buy')}\r\n                                  </a>\r\n                                </div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div className={styles.denomenation.className}>\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        {lang.t('cyc.denomenation')}:&nbsp;{store.currentCYCDenomination.format}\r\n                        <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('cyc.reward')}\r\n                                </div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/reward.png\" style={{ cursor: 'pointer', paddingLeft: 5, marginTop: -2 }} alt=\"\" />\r\n                        </Popover>\r\n                      </div>\r\n\r\n                      \r\n                    </div>\r\n\r\n                    {pageStore.balanceOfCYC.value.comparedTo(store.currentCYCDenomination.value) < 0 && pageStore.account && (\r\n                      <div\r\n                        className=\"flex item-center\"\r\n                        style={{\r\n                          marginTop: '0.5rem'\r\n                        }}\r\n                      >\r\n                        <input\r\n                          disabled={\r\n                            pageStore.balanceOfCoin.value.comparedTo(\r\n                              store.currentCoinDenomination.value.plus(pageStore.BNBtoBuyCYC.value)\r\n                            ) < 0\r\n                          }\r\n                          id=\"check\"\r\n                          type=\"checkbox\"\r\n                          style={{ verticalAlign: 'middle' }}\r\n                          onChange={store.onChangeBuyCYCCheckBox}\r\n                        />\r\n                        <label htmlFor=\"check\" style={{ marginLeft: 10, verticalAlign: 'middle', color: 'white' }}>\r\n                          {lang.t('use.coin.to.buy.cyc', {\r\n                            amount: pageStore.BNBtoBuyCYC.format,\r\n                            symbol: pageStore.currentChain.Coin.symbol\r\n                          })}\r\n                        </label>\r\n                      </div>\r\n                    )}\r\n                  </BorderBox>\r\n                )} */}\r\n\r\n                {/* {store.currentAmount.value.comparedTo(0) > 0 && (\r\n                  <BorderBox css={{ padding: '0.6rem 0'}}>\r\n                    <div style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '15px',\r\n                          color: '#959191',\r\n                          paddingBottom: '12px'\r\n                    }}>\r\n                      {lang.t('balance')}:&nbsp;\r\n                      {pageStore.balanceOfCoin.getFormat({ decimals: pageStore.currentChain.Coin.decimals })} ETH\r\n                      {store.currentCoinDenomination.value.comparedTo(pageStore.balanceOfCoin.value) > 0 ? (\r\n                        <>\r\n                          <Popover\r\n                            placement=\"top\"\r\n                            trigger=\"click\"\r\n                            content={\r\n                              <>\r\n                                <div style={{ textAlign: 'center', fontWeight: 'bold', maxWidth: '12rem' }}>\r\n                                  {lang.t('amount.invalid')}\r\n                                </div>\r\n                                <div\r\n                                  style={{\r\n                                    textAlign: 'center',\r\n                                    fontWeight: 'bold',\r\n                                    maxWidth: '12rem',\r\n                                    pointerEvents: 'auto'\r\n                                  }}\r\n                                ></div>\r\n                              </>\r\n                            }\r\n                            backgroundColor=\"#45bcb8\"\r\n                          >\r\n                            <img src=\"/images/alert.png\" style={{ cursor: 'pointer' }} alt=\"\" />\r\n                          </Popover>\r\n                        </>\r\n                      ) : null}\r\n                    </div>\r\n\r\n                    <div\r\n                      className={styles.denomenation.className}\r\n                      style={{\r\n                        marginBottom: '0.5rem'\r\n                      }}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          alignItems: 'center',\r\n                          display: 'flex',\r\n                          fontSize: '18px',\r\n                          color: 'white'\r\n                        }}\r\n                      >\r\n                        ETH&nbsp;{lang.t('Denomination')}:&nbsp;\r\n                        {store.currentCoinDenomination.getFormat({ decimals: pageStore.currentChain.Coin.decimals })}\r\n                      </div>\r\n                    </div>\r\n                  </BorderBox>\r\n                )} */}\r\n              </div>\r\n            </Section>\r\n            \r\n            <Section css={{ width: '100%', '@md': { width: '46%' } }}>\r\n              {/* <Button\r\n                avaliable={\r\n                  pageStore.isConnect &&\r\n                  !store.cycApproved &&\r\n                  new BigNumber(pageStore.balanceOfCYC.value).comparedTo('0') &&\r\n                  store.currentCYCDenomination.value.comparedTo(0) > 0\r\n                }\r\n                label={lang.t('approve') + ' M87'}\r\n                disabledLabel={lang.t('approved')}\r\n                disable={store.cycApproved}\r\n                onClick={store.onApproveCYC}\r\n\r\n                LoadingButton\r\n              /> */}\r\n              <div style={{ flexDirection: 'column', justifyContent: 'space-between', height: '160px', display: 'flex' }}>\r\n                <Section css={{ position: 'relative', mb: '1.5rem' }}>\r\n                  <Input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    step={0.1}\r\n                    css={{ pr: '50px' }}\r\n                    value={store.depositAmountInput.format}\r\n                    onChange={(e) => store.setDepositAmount(e.target.value)}\r\n                  />\r\n                  <Text\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                    cursor=\"pointer\"\r\n                    onClick={store.setMaxLimitAmount}\r\n                    css={{ position: 'absolute', lineHeight: '40px', top: 0, right: 11 }}\r\n                  >\r\n                    {lang.t('Max')}\r\n                  </Text>\r\n                </Section>\r\n                <Section css={{ position: 'relative', mb: '1.5rem' }}>\r\n                  <Input\r\n                    css={{ pr: '50px' }}\r\n                    value={store.recipientAddress}\r\n                    placeholder={lang.t('copy.recipient.address')}\r\n                    onChange={(e) => {store.checkRegisteredAccount(e.target.value)}}\r\n                  />\r\n                </Section>\r\n                <ThemeProvider theme={theme}>\r\n                  {/* {\r\n                    pageStore.CurrentSet.XRCToken && store.currentAmount.value.comparedTo(0) > 0 ?\r\n                      <LoadingButton\r\n                      color=\"MessierOrange\"\r\n                      loadingPosition='start'\r\n                      loading={store.TokenApproveStatus == \"loading\"}\r\n                      disabled={store.TokenApproveStatus != \"notApproved\"}\r\n                      variant=\"outlined\"\r\n                      onClick={store.onApproveXRC}\r\n                      sx={{\r\n                        height: '40px',\r\n                        fontWeight: 'bold',\r\n                        color: store.TokenApproveStatus != \"notApproved\" ? '#acb3bb !important' : '',\r\n                        background: store.TokenApproveStatus != \"notApproved\" ? '#b9b9b952 !important' : ''\r\n                      }}\r\n                      fullWidth\r\n                      >\r\n                        { store.TokenApproveStatus == \"approved\" ? lang.t('approved') : lang.t('approve.token', { token: pageStore.CurrentSet.XRCToken.symbol })}\r\n                      </LoadingButton> : (\r\n                          <LoadingButton\r\n                          color=\"MessierOrange\"\r\n                          loadingPosition='start'\r\n                          loading={store.ApproveStatus == \"loading\"}\r\n                          disabled={store.ApproveStatus != \"notApproved\"}\r\n                          variant=\"outlined\"\r\n                          onClick={store.onApproveCYC}\r\n                          sx={{\r\n                            height: '40px',\r\n                            fontWeight: 'bold',\r\n                            color: store.ApproveStatus != \"notApproved\" ? '#acb3bb !important' : '',\r\n                            background: store.ApproveStatus != \"notApproved\" ? '#b9b9b952 !important' : ''\r\n                          }}\r\n                          fullWidth\r\n                          >\r\n                            { store.ApproveStatus == \"approved\" ? lang.t('approved') : lang.t('approve')}\r\n                          </LoadingButton>\r\n                      )\r\n                  } */}\r\n                  \r\n                  <LoadingButton\r\n                    color=\"MessierOrange\"\r\n                    loadingPosition='start'\r\n                    loading={store.DepositStatus == \"loading\"}\r\n                    disabled={store.DepositStatus != \"active\"}\r\n                    variant=\"outlined\"\r\n                    sx={{\r\n                      height: '40px',\r\n                      fontWeight: 'bold',\r\n                      color: store.DepositStatus != \"active\" ? '#acb3bb !important' : '',\r\n                      background: store.DepositStatus != \"active\" ? '#b9b9b952 !important' : ''\r\n                    }}\r\n                    onClick={store.deposit}\r\n                    fullWidth\r\n                  >\r\n                    {lang.t('Transfer')}\r\n                  </LoadingButton>\r\n                </ThemeProvider>\r\n              </div>\r\n             {/* <div className={styles.buttonPanel.className}>{ActionButton}</div> */}\r\n            </Section>\r\n          </FlexBox>\r\n        </DropBox>\r\n      </div>\r\n      );\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // console.log('props.chainID', props.chainID);\r\n    store.init(props.chainID);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(pageStore.connectingStatus);\r\n    if(pageStore.connectingStatus == 'idle')\r\n      store.isConnecting = false;\r\n    else\r\n      store.isConnecting = true;\r\n  }, [pageStore.connectingStatus]);\r\n\r\n  useEffect(() => {\r\n    store.isShowDetail = (store.indexOfPool == pageStore.currentPoolIndex) && !pageStore.isLockStatus;\r\n  }, [pageStore.currentPoolIndex, pageStore.isLockStatus]);\r\n\r\n  useEffect(() => {\r\n    // console.log('DepositStatus', store.DepositStatus);\r\n    if(store.DepositStatus == \"loading\")\r\n      return;\r\n    if( store.allowDeposit )\r\n      store.DepositStatus = \"active\";\r\n    else\r\n      store.DepositStatus = 'notActive';\r\n  }, [ store.allowDeposit, baseStore.refetchTimer ]);\r\n\r\n  useEffect(() => {\r\n    if( !pageStore.CurrentSet.XRCToken )\r\n      return;\r\n    // console.log(\"Approve consider\");\r\n    if(store.TokenApproveStatus == \"loading\")\r\n      return;\r\n    // console.log(store.ApproveStatus);\r\n    if( store.xrcApproved ) {\r\n      store.TokenApproveStatus = \"approved\";\r\n      // console.log('1');\r\n    }\r\n    else {\r\n      // console.log('2'); \r\n      const isActive = pageStore.isConnect &&\r\n        new BigNumber(pageStore.balanceOfXRC.value).comparedTo('0') &&\r\n        store.currentAmount.value.comparedTo(0) > 0;\r\n      if( isActive )\r\n        store.TokenApproveStatus = \"notApproved\";\r\n      else\r\n        store.TokenApproveStatus = \"disabled\";\r\n    }\r\n  }, [pageStore.isConnect, store.xrcApproved, pageStore.balanceOfXRC, store.currentAmount ]);\r\n\r\n  useEffect(() => {\r\n    // console.log('props.chainID =', props.chainID);\r\n\r\n    store.init(props.chainID);\r\n  }, [props.chainID, pageStore.web3, pageStore.account]);\r\n\r\n  useEffect(() => {\r\n    store.loadAmount();\r\n    const doNecessary = async () => {\r\n      store.gasPrice = await store.fetchGasPrice(pageStore.currentChain.chainId);\r\n    }\r\n    doNecessary();\r\n  }, [baseStore.refetchTimer, pageStore.CurrentSet.balance.value]);\r\n\r\n  return (\r\n    <>\r\n    { \r\n      <Section>\r\n        <BorderBox css={{ padding: '0.6rem 0', cursor: 'pointer' }}\r\n        onClick={\r\n          () => {\r\n              store.onSelectPool(); \r\n          }\r\n        }>\r\n          <FlexBox justify=\"between\">\r\n            <FlexBox css={{ width: 'max-content', cursor: 'pointer', '@md': { width: '32%' } }}>\r\n              {\r\n                <SingleSymbol imgs={['/images/home/' + (store.indexOfPool ? store.indexOfPool.toLowerCase() : '') + '.png']} />\r\n              }\r\n              <Text size=\"small\" color=\"primary\" css={{ ml: '0.8rem' }}>\r\n                <span>\r\n                  {store.tokens &&\r\n                    store.tokens[store.indexOfPool].set\r\n                  }\r\n                </span>\r\n              </Text>\r\n            </FlexBox>\r\n            <Text size=\"small\" color=\"white\" css={{ flex: 1, textAlign: 'right', cursor: 'pointer' }}>\r\n              {/* { (pageStore.currentChain.chainId == 1) && (store.indexOfPool == 1 || store.indexOfPool == 10) && store.tokens[store.indexOfPool].Apy.format + ' % / ' + store.tokens[store.indexOfPool].dailyApy.getFormat({fixed: 3}) + ' %' } */}\r\n            </Text>\r\n            <FlexBox justify=\"end\" css={{ width: 'max-content', cursor: 'pointer', '@md': { width: '40%' } }}>\r\n              <Text size=\"small\" color=\"white\" css={{ display: 'none', '@md': { display: 'block' } }}>\r\n                {/* ${store.tokens[store.indexOfPool].tvl.format} */}\r\n              </Text>\r\n              <Icon\r\n                css={{ width: '1rem', ml: '1rem', '@md': { width: '1.375rem', ml: '1.5rem' } }}\r\n                src={`/images/home/${store.isShowDetail ? 'dropup' : 'dropdown'}.png`}\r\n              ></Icon>\r\n            </FlexBox>\r\n          </FlexBox>\r\n        </BorderBox>\r\n        {AnonymityPool}\r\n      </Section>\r\n    }\r\n    </>\r\n  );\r\n});\r\n\r\nconst styles = {\r\n  depositView: css({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexDirection: 'column',\r\n    height: '530',\r\n    '@md': {\r\n      minHeight: '390px'\r\n    }\r\n  }),\r\n  token: css({\r\n    marginTop: '1.2rem',\r\n    marginLeft: '7vw',\r\n    '@xs': {\r\n      marginTop: '25px',\r\n      marginLeft: '40px'\r\n    },\r\n    '.select': {\r\n      border: '1px solid #45BCB8',\r\n      color: 'white',\r\n      background: 'transparent',\r\n      height: '40px',\r\n      width: '95%',\r\n      appearance: 'none',\r\n      fontSize: '18px',\r\n      fontFamily: \"'IBM Plex Mono', monospace\",\r\n      paddingLeft: '0.5rem'\r\n    }\r\n  }),\r\n  amount: css({\r\n    width: '95%',\r\n    overflow: 'hidden',\r\n    marginTop: '2rem',\r\n    marginLeft: '7vw',\r\n    marginBottom: '2rem',\r\n    '@xs': {\r\n      width: '94%',\r\n      overflow: 'auto',\r\n      marginLeft: '40px',\r\n      paddingRight: '40px'\r\n    },\r\n    '.stepperTrack': {\r\n      width: '100%',\r\n      borderWidth: '2px',\r\n      borderStyle: 'solid',\r\n      borderColor: '#45bcb8',\r\n      marginTop: '20px'\r\n    }\r\n  }),\r\n  buttonPanel: css({\r\n    height: '40px',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#ffffff12',\r\n    color: '#44ee95',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    cursor: 'pointer',\r\n    textTransform: 'uppercase',\r\n    border: 'solid 1px',\r\n    borderColor: '#44ee95',\r\n    '&:hover': {\r\n      backgroundColor: '#00ff0312'\r\n    },\r\n    marginBottom: '1rem',\r\n    marginTop: '2.5rem',\r\n  }),\r\n  bottomTips: css({\r\n    marginLeft: '10%',\r\n    marginRight: '4vw',\r\n    fontSize: '12px',\r\n    padding: '0 0 0.3rem 3rem',\r\n    whiteSpace: 'nowrap',\r\n    textOverflow: 'ellipsis',\r\n    overflow: 'hidden',\r\n    '@md': {\r\n      marginLeft: '64px',\r\n      marginRight: '28px',\r\n      fontSize: '12px',\r\n      paddingLeft: '40px',\r\n      paddingBottom: '0.35rem',\r\n      whiteSpace: 'nowrap'\r\n    }\r\n  }),\r\n  poolInfos: css({\r\n      marginTop: '0.7rem'\r\n  }),\r\n  poolAudio: css({\r\n    paddingRight: '5%',\r\n    ul: {\r\n      listStyleType: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n      flexWrap: 'wrap',\r\n      padding: 0,\r\n      margin: 0,\r\n      li: {\r\n        width: '100%',\r\n        padding: '4px 0',\r\n        border: '1px solid #45BCB8',\r\n        textAlign: 'left',\r\n        marginBottom: '8px',\r\n        paddingLeft: '4px',\r\n        fontSize: '0.875rem',\r\n        cursor: 'pointer',\r\n        '@md': {\r\n          width: '48%'\r\n        },\r\n        '&:hover': {\r\n          background: 'rgba(69, 188, 184, 0.35)'\r\n        }\r\n      },\r\n      '.active': {\r\n        fontWeight: 'bold',\r\n        color: '#38DCD5',\r\n        borderColor: '#45BCB8',\r\n        background: 'rgba(69, 188, 184, 0.35)'\r\n      }\r\n    }\r\n  }),\r\n  logo: css({\r\n    width: '24px',\r\n    height: '24px'\r\n  }),\r\n  denomenation: css({\r\n    width: '95%',\r\n    rowGap: '0.5rem',\r\n    flexBetweenCenter: 'column',\r\n    '.input': {\r\n      marginBottom: '8px'\r\n    },\r\n    '.button': {\r\n      width: '100%'\r\n    },\r\n    '.buttonDisable': {\r\n      width: '100%'\r\n    },\r\n    '@xs': {\r\n      columnGap: '1rem',\r\n      flexBetweenCenter: 'row',\r\n      '.input': {\r\n        marginBottom: 0\r\n      },\r\n      '.button': {\r\n        width: 'max-content'\r\n      },\r\n      '.buttonDisable': {\r\n        width: 'max-content'\r\n      }\r\n    },\r\n    '@md': {\r\n      '.input': {\r\n        marginBottom: 0\r\n      }\r\n    }\r\n  }),\r\n  approveBtn: css({\r\n    padding: '0 10px',\r\n    width: '100%',\r\n    height: '34px',\r\n    outline: 'none',\r\n    border: '1px solid #45BCB8',\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: '0.875rem',\r\n    backgroundColor: '#45BCB8',\r\n    '@xs': {\r\n      height: '40px',\r\n      maxWidth: '152px'\r\n    },\r\n    '@md': {\r\n      maxWidth: '90px',\r\n      fontSize: '12px'\r\n    },\r\n    xl: {\r\n      maxWidth: '152px',\r\n      fontSize: '1rem'\r\n    },\r\n    '&:disabled': {\r\n      backgroundColor: 'black'\r\n    }\r\n  }),\r\n  loginOut: css({\r\n    flexCenterCenter: 'row',\r\n    paddingLeft: '8%',\r\n    marginBottom: '2rem',\r\n    '@md': {\r\n      marginBottom: '3rem'\r\n    },\r\n    span: {\r\n      textDecoration: 'underline',\r\n      fontSize: '1',\r\n      cursor: 'pointer',\r\n      fontWeight: 'bold'\r\n    }\r\n  })\r\n};\r\n\r\nexport default TransferView;"],"sourceRoot":""}